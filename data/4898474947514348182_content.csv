"Content"
"    if (!Function.prototype.bind) {&#xD;&#xA;		  Function.prototype.bind = function(oThis) {&#xD;&#xA;		    if (typeof this !== 'function') {&#xD;&#xA;		      // closest thing possible to the ECMAScript 5&#xD;&#xA;		      // internal IsCallable function&#xD;&#xA;		      throw new TypeError('Function.prototype.bind - what     is     trying to be bound is not callable');&#xD;&#xA;		    }&#xD;&#xA;	&#xD;&#xA;		    var aArgs   = Array.prototype.slice.call(arguments, 1),&#xD;&#xA;		        fToBind = this,&#xD;&#xA;		        fNOP    = function() {},&#xD;&#xA;		        fBound  = function() {&#xD;&#xA;		          return fToBind.apply(this instanceof fNOP && oThis&#xD;&#xA;		                 ? this&#xD;&#xA;		                 : oThis,&#xD;&#xA;		                 aArgs.concat(Array.prototype.slice.call(arguments)));&#xD;&#xA;		        };&#xD;&#xA;	&#xD;&#xA;		    fNOP.prototype = this.prototype;&#xD;&#xA;		    fBound.prototype = new fNOP();&#xD;&#xA;	&#xD;&#xA;		    return fBound;&#xD;&#xA;		  };&#xD;&#xA;	}"
