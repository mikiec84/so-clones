"Content"
"		#include <iostream>&#xD;&#xA;	&#xD;&#xA;	using namespace std;&#xD;&#xA;	&#xD;&#xA;	class Line {&#xD;&#xA;	   public:&#xD;&#xA;		  int getLength( void );&#xD;&#xA;		  Line( int len );             // simple constructor&#xD;&#xA;		  Line( const Line &obj);  // copy constructor&#xD;&#xA;		  ~Line();                     // destructor&#xD;&#xA;	&#xD;&#xA;	   private:&#xD;&#xA;		  int *ptr;&#xD;&#xA;	};&#xD;&#xA;	&#xD;&#xA;	// Member functions definitions including constructor&#xD;&#xA;	Line::Line(int len) {&#xD;&#xA;	   cout << """"Normal constructor allocating ptr"""" << endl;&#xD;&#xA;		&#xD;&#xA;	   // allocate memory for the pointer;&#xD;&#xA;	   ptr = new int;&#xD;&#xA;	   *ptr = len;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	Line::Line(const Line &obj) {&#xD;&#xA;	   cout << """"Copy constructor allocating ptr."""" << endl;&#xD;&#xA;	   ptr = new int;&#xD;&#xA;	   *ptr = *obj.ptr; // copy the value&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	Line::~Line(void) {&#xD;&#xA;	   cout << """"Freeing memory!"""" << endl;&#xD;&#xA;	   delete ptr;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	int Line::getLength( void ) {&#xD;&#xA;	   return *ptr;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	void display(Line obj) {&#xD;&#xA;	   cout << """"Length of line : """" << obj.getLength() <<endl;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	// Main function for the program&#xD;&#xA;	int main( ) {&#xD;&#xA;	   Line line(10);&#xD;&#xA;	&#xD;&#xA;	   display(line);&#xD;&#xA;	&#xD;&#xA;	   return 0;&#xD;&#xA;	}"
