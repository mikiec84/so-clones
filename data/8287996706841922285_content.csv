"Content"
"     #include """"cv.h"""" &#xD;&#xA;     #include """"highgui.h"""" &#xD;&#xA;     #include <stdio.h>  &#xD;&#xA;     // A Simple Camera Capture Framework &#xD;&#xA;     int main() {&#xD;&#xA;       CvCapture* capture = cvCaptureFromCAM( CV_CAP_ANY );&#xD;&#xA;       if ( !capture ) {&#xD;&#xA;         fprintf( stderr, """"ERROR: capture is NULL \n"""" );&#xD;&#xA;         getchar();&#xD;&#xA;         return -1;&#xD;&#xA;       }&#xD;&#xA;       // Create a window in which the captured images will be presented&#xD;&#xA;       cvNamedWindow( """"mywindow"""", CV_WINDOW_AUTOSIZE );&#xD;&#xA;       // Show the image captured from the camera in the window and repeat&#xD;&#xA;       while ( 1 ) {&#xD;&#xA;         // Get one frame&#xD;&#xA;         IplImage* frame = cvQueryFrame( capture );&#xD;&#xA;         if ( !frame ) {&#xD;&#xA;           fprintf( stderr, """"ERROR: frame is null...\n"""" );&#xD;&#xA;           getchar();&#xD;&#xA;           break;&#xD;&#xA;         }&#xD;&#xA;         cvShowImage( """"mywindow"""", frame );&#xD;&#xA;         // Do not release the frame!&#xD;&#xA;         //If ESC key pressed, Key=0x10001B under OpenCV 0.9.7(linux version),&#xD;&#xA;         //remove higher bits using AND operator&#xD;&#xA;         if ( (cvWaitKey(10) & 255) == 27 ) break;&#xD;&#xA;       }&#xD;&#xA;       // Release the capture device housekeeping&#xD;&#xA;       cvReleaseCapture( &capture );&#xD;&#xA;       cvDestroyWindow( """"mywindow"""" );&#xD;&#xA;       return 0;&#xD;&#xA;     }"
