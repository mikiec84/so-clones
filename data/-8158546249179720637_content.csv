"Content"
"				class BitmapWorkerTask extends AsyncTask<Integer, Void, Bitmap> {&#xD;&#xA;					private final WeakReference<ImageView> imageViewReference;&#xD;&#xA;					private int data = 0;&#xD;&#xA;					public BitmapWorkerTask(ImageView imageView) {&#xD;&#xA;						// Use a WeakReference to ensure the ImageView can be garbage collected&#xD;&#xA;						imageViewReference = new WeakReference<ImageView>(imageView);&#xD;&#xA;					}&#xD;&#xA;					// Decode image in background.&#xD;&#xA;					@Override&#xD;&#xA;					protected Bitmap doInBackground(Integer... params) {&#xD;&#xA;						data = params[0];&#xD;&#xA;						return decodeSampledBitmapFromResource(getResources(), data, 100, 100));&#xD;&#xA;					}&#xD;&#xA;					// Once complete, see if ImageView is still around and set bitmap.&#xD;&#xA;					@Override&#xD;&#xA;					protected void onPostExecute(Bitmap bitmap) {&#xD;&#xA;						if (imageViewReference != null && bitmap != null) {&#xD;&#xA;							final ImageView imageView = imageViewReference.get();&#xD;&#xA;							if (imageView != null) {&#xD;&#xA;								imageView.setImageBitmap(bitmap);&#xD;&#xA;							}&#xD;&#xA;						}&#xD;&#xA;					}&#xD;&#xA;				}"
