"Content"
"        Option Explicit&#xD;&#xA;        Private Const PAGE_EXECUTE_READWRITE = &H40&#xD;&#xA;        Private Declare Sub MoveMemory Lib """"kernel32"""" Alias """"RtlMoveMemory"""" _&#xD;&#xA;                (Destination As Long, Source As Long, ByVal Length As Long)&#xD;&#xA;        Private Declare Function VirtualProtect Lib """"kernel32"""" (lpAddress As Long, _&#xD;&#xA;                ByVal dwSize As Long, ByVal flNewProtect As Long, lpflOldProtect As Long) As Long&#xD;&#xA;                &#xD;&#xA;        Private Declare Function GetModuleHandleA Lib """"kernel32"""" (ByVal lpModuleName As String) As Long&#xD;&#xA;            &#xD;&#xA;        Private Declare Function GetProcAddress Lib """"kernel32"""" (ByVal hModule As Long, _&#xD;&#xA;                ByVal lpProcName As String) As Long&#xD;&#xA;           &#xD;&#xA;        Private Declare Function DialogBoxParam Lib """"user32"""" Alias """"DialogBoxParamA"""" (ByVal hInstance As Long, _&#xD;&#xA;                ByVal pTemplateName As Long, ByVal hWndParent As Long, _&#xD;&#xA;                ByVal lpDialogFunc As Long, ByVal dwInitParam As Long) As Integer&#xD;&#xA;                &#xD;&#xA;        Dim HookBytes(0 To 5) As Byte&#xD;&#xA;        Dim OriginBytes(0 To 5) As Byte&#xD;&#xA;        Dim pFunc As Long&#xD;&#xA;        Dim Flag As Boolean&#xD;&#xA;        Private Function GetPtr(ByVal Value As Long) As Long&#xD;&#xA;            GetPtr = Value&#xD;&#xA;        End Function&#xD;&#xA;        Public Sub RecoverBytes()&#xD;&#xA;            If Flag Then MoveMemory ByVal pFunc, ByVal VarPtr(OriginBytes(0)), 6&#xD;&#xA;        End Sub&#xD;&#xA;        Public Function Hook() As Boolean&#xD;&#xA;            Dim TmpBytes(0 To 5) As Byte&#xD;&#xA;            Dim p As Long&#xD;&#xA;            Dim OriginProtect As Long&#xD;&#xA;            &#xD;&#xA;            Hook = False&#xD;&#xA;            &#xD;&#xA;            pFunc = GetProcAddress(GetModuleHandleA(""""user32.dll""""), """"DialogBoxParamA"""")&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            If VirtualProtect(ByVal pFunc, 6, PAGE_EXECUTE_READWRITE, OriginProtect) <> 0 Then&#xD;&#xA;                &#xD;&#xA;                MoveMemory ByVal VarPtr(TmpBytes(0)), ByVal pFunc, 6&#xD;&#xA;                If TmpBytes(0) <> &H68 Then&#xD;&#xA;                    &#xD;&#xA;                    MoveMemory ByVal VarPtr(OriginBytes(0)), ByVal pFunc, 6&#xD;&#xA;                    p = GetPtr(AddressOf MyDialogBoxParam)&#xD;&#xA;                    HookBytes(0) = &H68&#xD;&#xA;                    MoveMemory ByVal VarPtr(HookBytes(1)), ByVal VarPtr(p), 4&#xD;&#xA;                    HookBytes(5) = &HC3&#xD;&#xA;                    &#xD;&#xA;                    MoveMemory ByVal pFunc, ByVal VarPtr(HookBytes(0)), 6&#xD;&#xA;                    Flag = True&#xD;&#xA;                    Hook = True&#xD;&#xA;                End If&#xD;&#xA;            End If&#xD;&#xA;        End Function&#xD;&#xA;        Private Function MyDialogBoxParam(ByVal hInstance As Long, _&#xD;&#xA;                ByVal pTemplateName As Long, ByVal hWndParent As Long, _&#xD;&#xA;                ByVal lpDialogFunc As Long, ByVal dwInitParam As Long) As Integer&#xD;&#xA;            If pTemplateName = 4070 Then&#xD;&#xA;                MyDialogBoxParam = 1&#xD;&#xA;            Else&#xD;&#xA;                RecoverBytes&#xD;&#xA;                MyDialogBoxParam = DialogBoxParam(hInstance, pTemplateName, _&#xD;&#xA;                                   hWndParent, lpDialogFunc, dwInitParam)&#xD;&#xA;                Hook&#xD;&#xA;            End If&#xD;&#xA;        End Function"
