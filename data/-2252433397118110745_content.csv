"Content"
"    public class GridViewAdapter extends ArrayAdapter<Model_images> {&#xD;&#xA;    &#xD;&#xA;        Context context;&#xD;&#xA;        ViewHolder viewHolder;&#xD;&#xA;        ArrayList<Model_images> al_menu = new ArrayList<>();&#xD;&#xA;        int int_position;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public GridViewAdapter(Context context, ArrayList<Model_images> al_menu,int int_position) {&#xD;&#xA;            super(context, R.layout.activity_adapter__photos_folder, al_menu);&#xD;&#xA;            this.al_menu = al_menu;&#xD;&#xA;            this.context = context;&#xD;&#xA;            this.int_position = int_position;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getCount() {&#xD;&#xA;    &#xD;&#xA;            Log.e(""""ADAPTER LIST SIZE"""", al_menu.get(int_position).getAl_imagepath().size() + """""""");&#xD;&#xA;            return al_menu.get(int_position).getAl_imagepath().size();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getItemViewType(int position) {&#xD;&#xA;            return position;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getViewTypeCount() {&#xD;&#xA;            if (al_menu.get(int_position).getAl_imagepath().size() > 0) {&#xD;&#xA;                return al_menu.get(int_position).getAl_imagepath().size();&#xD;&#xA;            } else {&#xD;&#xA;                return 1;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public long getItemId(int position) {&#xD;&#xA;            return position;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View getView(final int position, View convertView, ViewGroup parent) {&#xD;&#xA;    &#xD;&#xA;            if (convertView == null) {&#xD;&#xA;    &#xD;&#xA;                viewHolder = new ViewHolder();&#xD;&#xA;                convertView = LayoutInflater.from(getContext()).inflate(R.layout.activity_adapter__photos_folder, parent, false);&#xD;&#xA;                viewHolder.tv_foldern = (TextView) convertView.findViewById(R.id.tv_folder);&#xD;&#xA;                viewHolder.tv_foldersize = (TextView) convertView.findViewById(R.id.tv_folder2);&#xD;&#xA;                viewHolder.iv_image = (ImageView) convertView.findViewById(R.id.iv_image);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                convertView.setTag(viewHolder);&#xD;&#xA;            } else {&#xD;&#xA;                viewHolder = (ViewHolder) convertView.getTag();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            viewHolder.tv_foldern.setVisibility(View.GONE);&#xD;&#xA;            viewHolder.tv_foldersize.setVisibility(View.GONE);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            Glide.with(context).load(""""file://"""" + al_menu.get(int_position).getAl_imagepath().get(position))&#xD;&#xA;                    .diskCacheStrategy(DiskCacheStrategy.NONE)&#xD;&#xA;                    .skipMemoryCache(true)&#xD;&#xA;                    .into(viewHolder.iv_image);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            return convertView;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private static class ViewHolder {&#xD;&#xA;            TextView tv_foldern, tv_foldersize;&#xD;&#xA;            ImageView iv_image;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }"
