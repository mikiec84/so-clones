"Content"
"    import java.awt.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.table.*;&#xD;&#xA;    &#xD;&#xA;    public class TableIcon extends JPanel&#xD;&#xA;    {&#xD;&#xA;    	public TableIcon()&#xD;&#xA;    	{&#xD;&#xA;    		Icon aboutIcon = new ImageIcon(""""about16.gif"""");&#xD;&#xA;    		Icon addIcon = new ImageIcon(""""add16.gif"""");&#xD;&#xA;    		Icon copyIcon = new ImageIcon(""""copy16.gif"""");&#xD;&#xA;    &#xD;&#xA;    		String[] columnNames = {""""Picture"""", """"Description""""};&#xD;&#xA;    		Object[][] data =&#xD;&#xA;    		{&#xD;&#xA;    			{aboutIcon, """"About""""},&#xD;&#xA;    			{addIcon, """"Add""""},&#xD;&#xA;    			{copyIcon, """"Copy""""},&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		DefaultTableModel model = new DefaultTableModel(data, columnNames)&#xD;&#xA;    		{&#xD;&#xA;    			//  Returning the Class of each column will allow different&#xD;&#xA;    			//  renderers to be used based on Class&#xD;&#xA;    			public Class getColumnClass(int column)&#xD;&#xA;    			{&#xD;&#xA;    				return getValueAt(0, column).getClass();&#xD;&#xA;    			}&#xD;&#xA;    		};&#xD;&#xA;    		JTable table = new JTable( model );&#xD;&#xA;    		table.setPreferredScrollableViewportSize(table.getPreferredSize());&#xD;&#xA;    &#xD;&#xA;    		JScrollPane scrollPane = new JScrollPane( table );&#xD;&#xA;    		add( scrollPane );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowGUI()&#xD;&#xA;    	{&#xD;&#xA;    		JFrame frame = new JFrame(""""Table Icon"""");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add(new TableIcon());&#xD;&#xA;    		frame.setLocationByPlatform( true );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setVisible( true );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowGUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    }"
