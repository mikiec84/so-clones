"Content"
"    Public Function AgeSimple( _&#xD;&#xA;      ByVal datDateOfBirth As Date) _&#xD;&#xA;      As Integer&#xD;&#xA;    &#xD;&#xA;    ' Returns the difference in full years from datDateOfBirth to current date.&#xD;&#xA;    '&#xD;&#xA;    ' Calculates correctly for:&#xD;&#xA;    '   leap years&#xD;&#xA;    '   dates of 29. February&#xD;&#xA;    '   date/time values with embedded time values&#xD;&#xA;    '&#xD;&#xA;    ' DateAdd() is used for check for month end of February as it correctly&#xD;&#xA;    ' returns Feb. 28. when adding a count of years to dates of Feb. 29.&#xD;&#xA;    ' when the resulting year is a common year.&#xD;&#xA;    ' After an idea of Markus G. Fischer.&#xD;&#xA;    '&#xD;&#xA;    ' 2007-06-26. Cactus Data ApS, CPH.&#xD;&#xA;    &#xD;&#xA;      Dim datToday  As Date&#xD;&#xA;      Dim intAge    As Integer&#xD;&#xA;      Dim intYears  As Integer&#xD;&#xA;        &#xD;&#xA;      datToday = Date&#xD;&#xA;      ' Find difference in calendar years.&#xD;&#xA;      intYears = DateDiff(""""yyyy"""", datDateOfBirth, datToday)&#xD;&#xA;      If intYears > 0 Then&#xD;&#xA;        ' Decrease by 1 if current date is earlier than birthday of current year&#xD;&#xA;        ' using DateDiff to ignore a time portion of datDateOfBirth.&#xD;&#xA;        intAge = intYears - Abs(DateDiff(""""d"""", datToday, DateAdd(""""yyyy"""", intYears, datDateOfBirth)) > 0)&#xD;&#xA;      End If&#xD;&#xA;      &#xD;&#xA;      AgeSimple = intAge&#xD;&#xA;      &#xD;&#xA;    End Function"
