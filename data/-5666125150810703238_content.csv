"Content"
"	public class MySSLSocketFactory extends SSLSocketFactory {&#xD;&#xA;	&#xD;&#xA;		SSLContext sslContext = SSLContext.getInstance(""""TLS"""");&#xD;&#xA;		public MySSLSocketFactory(KeyStore truststore) throws NoSuchAlgorithmException, KeyManagementException, KeyStoreException, UnrecoverableKeyException {&#xD;&#xA;			super(truststore);&#xD;&#xA;			TrustManager tm = new X509TrustManager() {&#xD;&#xA;				public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {&#xD;&#xA;				}&#xD;&#xA;				public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {&#xD;&#xA;				}&#xD;&#xA;				public X509Certificate[] getAcceptedIssuers() {&#xD;&#xA;					return null;&#xD;&#xA;				}&#xD;&#xA;			};&#xD;&#xA;			sslContext.init(null, new TrustManager[] { tm }, null);&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Socket createSocket(Socket socket, String host, int port, boolean autoClose) throws IOException, UnknownHostException {&#xD;&#xA;			return sslContext.getSocketFactory().createSocket(socket, host, port, autoClose);&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Socket createSocket() throws IOException {&#xD;&#xA;			return sslContext.getSocketFactory().createSocket();&#xD;&#xA;		}&#xD;&#xA;	}"
