"Content"
"    public class RecyclerAdapter extends RecyclerView.Adapter<RecyclerAdapter.ViewHolder> {&#xD;&#xA;            private ClipboardManager myClipboard;&#xD;&#xA;            private ClipData myClip;&#xD;&#xA;            private Context context;&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;            public List<CardItemModel> cardItems;&#xD;&#xA;        &#xD;&#xA;            public RecyclerAdapter(List<CardItemModel> cardItems){&#xD;&#xA;                this.cardItems = cardItems;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public static class ViewHolder extends RecyclerView.ViewHolder{&#xD;&#xA;                ImageView copyButton;&#xD;&#xA;                ImageView shareButton;&#xD;&#xA;                ToggleButton favButton;&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;                TextView title;&#xD;&#xA;                TextView content;&#xD;&#xA;                public ViewHolder(View itemView) {&#xD;&#xA;                    super(itemView);&#xD;&#xA;                    this.title = (TextView)itemView.findViewById(R.id.card_title);&#xD;&#xA;                    this.content = (TextView)itemView.findViewById(R.id.card_content);&#xD;&#xA;                    this.copyButton= (ImageView) itemView.findViewById(R.id.copyButton);&#xD;&#xA;                    this.shareButton=(ImageView) itemView.findViewById(R.id.shareButton);&#xD;&#xA;        &#xD;&#xA;                    this.favButton=(ToggleButton) itemView.findViewById(R.id.favButton);&#xD;&#xA;        &#xD;&#xA;                    favButton.setChecked(false);&#xD;&#xA;                    favButton.setBackgroundDrawable(ContextCompat.getDrawable(favButton.getContext(), R.mipmap.ic_launcher));&#xD;&#xA;                    &#xD;&#xA;        &#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {&#xD;&#xA;                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.recycler_item,parent,false);&#xD;&#xA;                ViewHolder viewHolder = new ViewHolder(view);&#xD;&#xA;        &#xD;&#xA;                return viewHolder;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public void onBindViewHolder(final ViewHolder holder, int position) {&#xD;&#xA;                holder.title.setText(cardItems.get(position).title);&#xD;&#xA;                holder.content.setText(cardItems.get(position).content);&#xD;&#xA;                holder.copyButton.setOnClickListener(new View.OnClickListener(){&#xD;&#xA;                    public void onClick(View v){&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;                        myClipboard = (ClipboardManager) v.getContext().getSystemService(Context.CLIPBOARD_SERVICE);&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;                        myClip = ClipData.newPlainText(""""label"""", holder.content.getText().toString());&#xD;&#xA;                        myClipboard.setPrimaryClip(myClip);&#xD;&#xA;                        Toast.makeText(v.getContext(), """"Copied to clipboard"""" , Toast.LENGTH_SHORT ).show();&#xD;&#xA;        &#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;                holder.shareButton.setOnClickListener(new View.OnClickListener(){&#xD;&#xA;                    public void onClick(View v){&#xD;&#xA;                        Intent share = new Intent(Intent.ACTION_SEND);&#xD;&#xA;                        share.setType(""""text/plain"""");&#xD;&#xA;                        share.putExtra(Intent.EXTRA_TEXT, holder.content.getText().toString());&#xD;&#xA;                        v.getContext().startActivity(Intent.createChooser(share, """"Share Text""""));&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;        &#xD;&#xA;                holder.favButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){&#xD;&#xA;                    @Override&#xD;&#xA;                    public void onCheckedChanged(CompoundButton favButton, boolean isChecked){&#xD;&#xA;                        if (isChecked)&#xD;&#xA;                            favButton.setBackgroundDrawable(ContextCompat.getDrawable(favButton.getContext(),R.mipmap.ic_launcher));&#xD;&#xA;        &#xD;&#xA;                        else&#xD;&#xA;                            favButton.setBackgroundDrawable(ContextCompat.getDrawable(favButton.getContext(), R.mipmap.ic_cart));&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public int getItemCount() {&#xD;&#xA;                return cardItems.size();&#xD;&#xA;            }&#xD;&#xA;        }"
