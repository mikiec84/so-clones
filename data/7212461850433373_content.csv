"Content"
"    public static DataTable MergeAll(this IList<DataTable> tables, String   primaryKeyColumn)&#xD;&#xA;    {&#xD;&#xA;        if (!tables.Any())&#xD;&#xA;            throw new ArgumentException(""""Tables must not be empty"""", """"tables"""");&#xD;&#xA;        if(primaryKeyColumn != null)&#xD;&#xA;            foreach(DataTable t in tables)&#xD;&#xA;                if(!t.Columns.Contains(primaryKeyColumn))&#xD;&#xA;                    throw new ArgumentException(""""All tables must have the specified primarykey column """" + primaryKeyColumn, """"primaryKeyColumn"""");&#xD;&#xA;        if(tables.Count == 1)&#xD;&#xA;            return tables[0];&#xD;&#xA;        DataTable table = new DataTable(""""TblUnion"""");&#xD;&#xA;        table.BeginLoadData(); // Turns off notifications, index maintenance, and constraints while loading data&#xD;&#xA;        foreach (DataTable t in tables)&#xD;&#xA;        {&#xD;&#xA;            table.Merge(t); // same as table.Merge(t, false, MissingSchemaAction.Add);&#xD;&#xA;        }&#xD;&#xA;        table.EndLoadData();&#xD;&#xA;        if (primaryKeyColumn != null)&#xD;&#xA;        {&#xD;&#xA;            // since we might have no real primary keys defined, the rows now might have repeating fields&#xD;&#xA;            // so now we're going to """"join"""" these rows ...&#xD;&#xA;            var pkGroups = table.AsEnumerable()&#xD;&#xA;                .GroupBy(r => r[primaryKeyColumn]);&#xD;&#xA;            var dupGroups = pkGroups.Where(g => g.Count() > 1);&#xD;&#xA;            foreach (var grpDup in dupGroups)&#xD;&#xA;            { &#xD;&#xA;                // use first row and modify it&#xD;&#xA;                DataRow firstRow = grpDup.First();&#xD;&#xA;                foreach (DataColumn c in table.Columns)&#xD;&#xA;                {&#xD;&#xA;                    if (firstRow.IsNull(c))&#xD;&#xA;                    {&#xD;&#xA;                        DataRow firstNotNullRow =  grpDup.Skip(1).FirstOrDefault(r => !r.IsNull(c));&#xD;&#xA;                        if (firstNotNullRow != null)&#xD;&#xA;                            firstRow[c] = firstNotNullRow[c];&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                // remove all but first row&#xD;&#xA;                var rowsToRemove = grpDup.Skip(1);&#xD;&#xA;                foreach(DataRow rowToRemove in rowsToRemove)&#xD;&#xA;                    table.Rows.Remove(rowToRemove);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        return table;&#xD;&#xA;    }"
