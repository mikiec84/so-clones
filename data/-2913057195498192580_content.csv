"Content"
"    $(document).ajaxSend(function(event, xhr, settings) {&#xD;&#xA;        function getCookie(name) {&#xD;&#xA;	    var cookieValue = null;&#xD;&#xA;	    if (document.cookie && document.cookie != '') {&#xD;&#xA;	        var cookies = document.cookie.split(';');&#xD;&#xA;	        for (var i = 0; i < cookies.length; i++) {&#xD;&#xA;	            var cookie = jQuery.trim(cookies[i]);&#xD;&#xA;	            // Does this cookie string begin with the name we want?&#xD;&#xA;	            if (cookie.substring(0, name.length + 1) == (name + '=')) {&#xD;&#xA;	                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));&#xD;&#xA;	                break;&#xD;&#xA;	            }&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;	    return cookieValue;&#xD;&#xA;        }&#xD;&#xA;        function sameOrigin(url) {&#xD;&#xA;	    // url could be relative or scheme relative or absolute&#xD;&#xA;	    var host = document.location.host; // host + port&#xD;&#xA;	    var protocol = document.location.protocol;&#xD;&#xA;	    var sr_origin = '//' + host;&#xD;&#xA;	    var origin = protocol + sr_origin;&#xD;&#xA;	    // Allow absolute or scheme relative URLs to same origin&#xD;&#xA;	    return (url == origin || url.slice(0, origin.length + 1) == origin + '/') ||&#xD;&#xA;	        (url == sr_origin || url.slice(0, sr_origin.length + 1) == sr_origin + '/') ||&#xD;&#xA;	        // or any other URL that isn't scheme relative or absolute i.e relative.&#xD;&#xA;	        !(/^(\/\/|http:|https:).*/.test(url));&#xD;&#xA;        }&#xD;&#xA;        function safeMethod(method) {&#xD;&#xA;	    return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));&#xD;&#xA;        }&#xD;&#xA;        if (!safeMethod(settings.type) && sameOrigin(settings.url)) {&#xD;&#xA;	    xhr.setRequestHeader(""""X-CSRFToken"""", getCookie('csrftoken'));&#xD;&#xA;        }&#xD;&#xA;    });"
