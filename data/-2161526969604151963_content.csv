"Content"
"    Public Function Months( _&#xD;&#xA;      ByVal datDate1 As Date, _&#xD;&#xA;      ByVal datDate2 As Date, _&#xD;&#xA;      Optional ByVal booLinear As Boolean) _&#xD;&#xA;      As Integer&#xD;&#xA;    &#xD;&#xA;    ' Returns the difference in full months between datDate1 and datDate2.&#xD;&#xA;    '&#xD;&#xA;    ' Calculates correctly for:&#xD;&#xA;    '   negative differences&#xD;&#xA;    '   leap years&#xD;&#xA;    '   dates of 29. February&#xD;&#xA;    '   date/time values with embedded time values&#xD;&#xA;    '   negative date/time values (prior to 1899-12-29)&#xD;&#xA;    '&#xD;&#xA;    ' Optionally returns negative counts rounded down to provide a&#xD;&#xA;    ' linear sequence of month counts.&#xD;&#xA;    ' For a given datDate1, if datDate2 is decreased stepwise one month from&#xD;&#xA;    ' returning a positive count to returning a negative count, one or two&#xD;&#xA;    ' occurrences of count zero will be returned.&#xD;&#xA;    ' If booLinear is False, the sequence will be:&#xD;&#xA;    '   3, 2, 1, 0,  0, -1, -2&#xD;&#xA;    ' If booLinear is True, the sequence will be:&#xD;&#xA;    '   3, 2, 1, 0, -1, -2, -3&#xD;&#xA;    '&#xD;&#xA;    ' If booLinear is False, reversing datDate1 and datDate2 will return&#xD;&#xA;    ' results of same absolute Value, only the sign will change.&#xD;&#xA;    ' This behaviour mimics that of Fix().&#xD;&#xA;    ' If booLinear is True, reversing datDate1 and datDate2 will return&#xD;&#xA;    ' results where the negative count is offset by -1.&#xD;&#xA;    ' This behaviour mimics that of Int().&#xD;&#xA;    &#xD;&#xA;    ' DateAdd() is used for check for month end of February as it correctly&#xD;&#xA;    ' returns Feb. 28. when adding a count of months to dates of Feb. 29.&#xD;&#xA;    ' when the resulting year is a common year.&#xD;&#xA;    '&#xD;&#xA;    ' 2010-03-30. Cactus Data ApS, CPH.&#xD;&#xA;    &#xD;&#xA;      Dim intDiff   As Integer&#xD;&#xA;      Dim intSign   As Integer&#xD;&#xA;      Dim intMonths As Integer&#xD;&#xA;      &#xD;&#xA;      ' Find difference in calendar months.&#xD;&#xA;      intMonths = DateDiff(""""m"""", datDate1, datDate2)&#xD;&#xA;      ' For positive resp. negative intervals, check if the second date&#xD;&#xA;      ' falls before, on, or after the crossing date for a 1 month period&#xD;&#xA;      ' while at the same time correcting for February 29. of leap years.&#xD;&#xA;      If DateDiff(""""d"""", datDate1, datDate2) > 0 Then&#xD;&#xA;        intSign = Sgn(DateDiff(""""d"""", DateAdd(""""m"""", intMonths, datDate1), datDate2))&#xD;&#xA;        intDiff = Abs(intSign < 0)&#xD;&#xA;      Else&#xD;&#xA;        intSign = Sgn(DateDiff(""""d"""", DateAdd(""""m"""", -intMonths, datDate2), datDate1))&#xD;&#xA;        If intSign <> 0 Then&#xD;&#xA;          ' Offset negative count of months to continuous sequence if requested.&#xD;&#xA;          intDiff = Abs(booLinear)&#xD;&#xA;        End If&#xD;&#xA;        intDiff = intDiff - Abs(intSign < 0)&#xD;&#xA;      End If&#xD;&#xA;      &#xD;&#xA;      ' Return count of months as count of full 1 month periods.&#xD;&#xA;      Months = intMonths - intDiff&#xD;&#xA;      &#xD;&#xA;    End Function"
