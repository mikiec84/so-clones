"Content"
"    import java.util.Map;&#xD;&#xA;    import java.util.Map.Entry;&#xD;&#xA;    import java.util.UUID;&#xD;&#xA;    import java.util.WeakHashMap;&#xD;&#xA;    &#xD;&#xA;    import javax.faces.component.UIComponent;&#xD;&#xA;    import javax.faces.context.FacesContext;&#xD;&#xA;    import javax.faces.convert.Converter;&#xD;&#xA;    import javax.faces.convert.FacesConverter;&#xD;&#xA;    &#xD;&#xA;    @FacesConverter(value = """"entityConverter"""")&#xD;&#xA;    public class EntityConverter implements Converter {&#xD;&#xA;    &#xD;&#xA;    	private static Map<Object, String> entities = new WeakHashMap<Object, String>();&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public String getAsString(FacesContext context, UIComponent component, Object entity) {&#xD;&#xA;    		synchronized (entities) {&#xD;&#xA;    			if (!entities.containsKey(entity)) {&#xD;&#xA;    				String uuid = UUID.randomUUID().toString();&#xD;&#xA;    				entities.put(entity, uuid);&#xD;&#xA;    				return uuid;&#xD;&#xA;    			} else {&#xD;&#xA;    				return entities.get(entity);&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public Object getAsObject(FacesContext context, UIComponent component, String uuid) {&#xD;&#xA;    		for (Entry<Object, String> entry : entities.entrySet()) {&#xD;&#xA;    			if (entry.getValue().equals(uuid)) {&#xD;&#xA;    				return entry.getKey();&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    		return null;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    }"
