"using System;&#xD;&#xA;public sealed class Singleton&#xD;&#xA;{&#xD;&#xA;private static volatile Singleton instance;&#xD;&#xA;private static object syncRoot = new Object();&#xD;&#xA;private Singleton() {}&#xD;&#xA;public static Singleton Instance&#xD;&#xA;{&#xD;&#xA;get&#xD;&#xA;{&#xD;&#xA;if (instance == null)&#xD;&#xA;{&#xD;&#xA;lock (syncRoot)&#xD;&#xA;{&#xD;&#xA;if (instance == null)&#xD;&#xA;instance = new Singleton();&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;return instance;&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;}"
