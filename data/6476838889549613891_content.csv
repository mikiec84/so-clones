"Content"
"         String DisplayName = """"XYZ"""";&#xD;&#xA;         String MobileNumber = """"123456"""";&#xD;&#xA;         String HomeNumber = """"1111"""";&#xD;&#xA;             String WorkNumber = """"2222"""";&#xD;&#xA;          String emailID = """"email@nomail.com"""";&#xD;&#xA;         String company = """"bad"""";&#xD;&#xA;       String jobTitle = """"abcd"""";&#xD;&#xA;    &#xD;&#xA;    ArrayList < ContentProviderOperation > ops = new ArrayList <     &#xD;&#xA;    ContentProviderOperation > ();&#xD;&#xA;      ops.add(ContentProviderOperation.newInsert(&#xD;&#xA;      ContactsContract.RawContacts.CONTENT_URI)&#xD;&#xA;     .withValue(ContactsContract.RawContacts.ACCOUNT_TYPE, null)&#xD;&#xA;     .withValue(ContactsContract.RawContacts.ACCOUNT_NAME, null)&#xD;&#xA;     .build());&#xD;&#xA;     //------------------------------------------------------ Names&#xD;&#xA;      if (DisplayName != null) {&#xD;&#xA;      ops.add(ContentProviderOperation.newInsert(&#xD;&#xA;      ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(&#xD;&#xA;     ContactsContract.CommonDataKinds.StructuredName.DISPLAY_NAME,&#xD;&#xA;     DisplayName).build());&#xD;&#xA;     }&#xD;&#xA;     //------------------------------------------------------ Mobile Number                     &#xD;&#xA;     if (MobileNumber != null) {&#xD;&#xA;     ops.add(ContentProviderOperation.&#xD;&#xA;     newInsert(ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.NUMBER, MobileNumber)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.TYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.TYPE_MOBILE)&#xD;&#xA;         .build());&#xD;&#xA;     }&#xD;&#xA;    //------------------------------------------------------ Home Numbers&#xD;&#xA;    if (HomeNumber != null) {    ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.NUMBER, HomeNumber)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.TYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.TYPE_HOME)&#xD;&#xA;         .build());&#xD;&#xA;    }&#xD;&#xA;     //------------------------------------------------------ Work Numbers&#xD;&#xA;     if (WorkNumber != null) {     ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.NUMBER, WorkNumber)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.TYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.TYPE_WORK)&#xD;&#xA;         .build());&#xD;&#xA;      }&#xD;&#xA;    //------------------------------------------------------ Email&#xD;&#xA;      if (emailID != null) {ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Email.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Email.DATA, emailID)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Email.TYPE,   &#xD;&#xA;    ContactsContract.CommonDataKinds.Email.TYPE_WORK)&#xD;&#xA;         .build());&#xD;&#xA;    }//------------------------------------------------------ Organization&#xD;&#xA;     if (!company.equals("""""""") && !jobTitle.equals("""""""")) { ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Organization.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Organization.COMPANY,    &#xD;&#xA;     company) .withValue(ContactsContract.CommonDataKinds.Organization.TYPE,   &#xD;&#xA;      ContactsContract.CommonDataKinds.Organization.TYPE_WORK)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Organization.TITLE,     &#xD;&#xA;     jobTitle)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Organization.TYPE,  &#xD;&#xA;      ContactsContract.CommonDataKinds.Organization.TYPE_WORK)&#xD;&#xA;         .build());&#xD;&#xA;     }&#xD;&#xA;    // Asking the Contact provider to create a new contact                 &#xD;&#xA;      try {&#xD;&#xA;     getContentResolver().applyBatch(ContactsContract.AUTHORITY, ops);&#xD;&#xA;      } catch (Exception e) {&#xD;&#xA;     e.printStackTrace();&#xD;&#xA;     Toast.makeText(myContext, """"Exception: """" + e.getMessage(),    &#xD;&#xA;     Toast.LENGTH_SHORT).show();&#xD;&#xA;    } "
