"Content"
"    public class SimpleGestureFilter extends SimpleOnGestureListener {&#xD;&#xA;    &#xD;&#xA;    	public final static int SWIPE_UP = 1;&#xD;&#xA;    	public final static int SWIPE_DOWN = 2;&#xD;&#xA;    	public final static int SWIPE_LEFT = 3;&#xD;&#xA;    	public final static int SWIPE_RIGHT = 4;&#xD;&#xA;    &#xD;&#xA;    	public final static int MODE_TRANSPARENT = 0;&#xD;&#xA;    	public final static int MODE_SOLID = 1;&#xD;&#xA;    	public final static int MODE_DYNAMIC = 2;&#xD;&#xA;    &#xD;&#xA;    	private final static int ACTION_FAKE = -13; // just an unlikely number&#xD;&#xA;    	private int swipe_Min_Distance = 100;&#xD;&#xA;    	private int swipe_Max_Distance = 350;&#xD;&#xA;    	private int swipe_Min_Velocity = 100;&#xD;&#xA;    &#xD;&#xA;    	private int mode = MODE_DYNAMIC;&#xD;&#xA;    	private boolean running = true;&#xD;&#xA;    	private boolean tapIndicator = false;&#xD;&#xA;    &#xD;&#xA;    	private Activity context;&#xD;&#xA;    	private GestureDetector detector;&#xD;&#xA;    	private SimpleGestureListener listener;&#xD;&#xA;    &#xD;&#xA;    	public SimpleGestureFilter(Activity context, SimpleGestureListener sgl) {&#xD;&#xA;    &#xD;&#xA;    		this.context = context;&#xD;&#xA;    		this.detector = new GestureDetector(context, this);&#xD;&#xA;    		this.listener = sgl;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void onTouchEvent(MotionEvent event) {&#xD;&#xA;    &#xD;&#xA;    		if (!this.running)&#xD;&#xA;    			return;&#xD;&#xA;    &#xD;&#xA;    		boolean result = this.detector.onTouchEvent(event);&#xD;&#xA;    &#xD;&#xA;    		if (this.mode == MODE_SOLID)&#xD;&#xA;    			event.setAction(MotionEvent.ACTION_CANCEL);&#xD;&#xA;    		else if (this.mode == MODE_DYNAMIC) {&#xD;&#xA;    &#xD;&#xA;    			if (event.getAction() == ACTION_FAKE)&#xD;&#xA;    				event.setAction(MotionEvent.ACTION_UP);&#xD;&#xA;    			else if (result)&#xD;&#xA;    				event.setAction(MotionEvent.ACTION_CANCEL);&#xD;&#xA;    			else if (this.tapIndicator) {&#xD;&#xA;    				event.setAction(MotionEvent.ACTION_DOWN);&#xD;&#xA;    				this.tapIndicator = false;&#xD;&#xA;    			}&#xD;&#xA;    &#xD;&#xA;    		}&#xD;&#xA;    		// else just do nothing, it's Transparent&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setMode(int m) {&#xD;&#xA;    		this.mode = m;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public int getMode() {&#xD;&#xA;    		return this.mode;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setEnabled(boolean status) {&#xD;&#xA;    		this.running = status;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setSwipeMaxDistance(int distance) {&#xD;&#xA;    		this.swipe_Max_Distance = distance;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setSwipeMinDistance(int distance) {&#xD;&#xA;    		this.swipe_Min_Distance = distance;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setSwipeMinVelocity(int distance) {&#xD;&#xA;    		this.swipe_Min_Velocity = distance;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public int getSwipeMaxDistance() {&#xD;&#xA;    		return this.swipe_Max_Distance;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public int getSwipeMinDistance() {&#xD;&#xA;    		return this.swipe_Min_Distance;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public int getSwipeMinVelocity() {&#xD;&#xA;    		return this.swipe_Min_Velocity;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,&#xD;&#xA;    			float velocityY) {&#xD;&#xA;    &#xD;&#xA;    		final float xDistance = Math.abs(e1.getX() - e2.getX());&#xD;&#xA;    		final float yDistance = Math.abs(e1.getY() - e2.getY());&#xD;&#xA;    &#xD;&#xA;    		if (xDistance > this.swipe_Max_Distance&#xD;&#xA;    				|| yDistance > this.swipe_Max_Distance)&#xD;&#xA;    			return false;&#xD;&#xA;    &#xD;&#xA;    		velocityX = Math.abs(velocityX);&#xD;&#xA;    		velocityY = Math.abs(velocityY);&#xD;&#xA;    		boolean result = false;&#xD;&#xA;    &#xD;&#xA;    		if (velocityX > this.swipe_Min_Velocity&#xD;&#xA;    				&& xDistance > this.swipe_Min_Distance) {&#xD;&#xA;    			if (e1.getX() > e2.getX()) // right to left&#xD;&#xA;    				this.listener.onSwipe(SWIPE_LEFT);&#xD;&#xA;    			else&#xD;&#xA;    				this.listener.onSwipe(SWIPE_RIGHT);&#xD;&#xA;    &#xD;&#xA;    			result = true;&#xD;&#xA;    		} else if (velocityY > this.swipe_Min_Velocity&#xD;&#xA;    				&& yDistance > this.swipe_Min_Distance) {&#xD;&#xA;    			if (e1.getY() > e2.getY()) // bottom to up&#xD;&#xA;    				this.listener.onSwipe(SWIPE_UP);&#xD;&#xA;    			else&#xD;&#xA;    				this.listener.onSwipe(SWIPE_DOWN);&#xD;&#xA;    &#xD;&#xA;    			result = true;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return result;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public boolean onSingleTapUp(MotionEvent e) {&#xD;&#xA;    		this.tapIndicator = true;&#xD;&#xA;    		return false;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public boolean onDoubleTap(MotionEvent arg) {&#xD;&#xA;    		this.listener.onDoubleTap();&#xD;&#xA;    		;&#xD;&#xA;    		return true;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public boolean onDoubleTapEvent(MotionEvent arg) {&#xD;&#xA;    		return true;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public boolean onSingleTapConfirmed(MotionEvent arg) {&#xD;&#xA;    &#xD;&#xA;    		if (this.mode == MODE_DYNAMIC) { // we owe an ACTION_UP, so we fake an&#xD;&#xA;    			arg.setAction(ACTION_FAKE); // action which will be converted to an&#xD;&#xA;    										// ACTION_UP later.&#xD;&#xA;    			this.context.dispatchTouchEvent(arg);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return false;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	static interface SimpleGestureListener {&#xD;&#xA;    		void onSwipe(int direction);&#xD;&#xA;    &#xD;&#xA;    		void onDoubleTap();&#xD;&#xA;    	}&#xD;&#xA;    }"
