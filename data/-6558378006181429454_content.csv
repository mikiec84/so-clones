"Content"
"        public int uploadFile(String sourceFileUri) {&#xD;&#xA;    	  &#xD;&#xA;    	  String fileName = sourceFileUri;&#xD;&#xA; &#xD;&#xA;          HttpURLConnection conn = null;&#xD;&#xA;          DataOutputStream dos = null;  &#xD;&#xA;          String lineEnd = """"\r\n"""";&#xD;&#xA;          String twoHyphens = """"--"""";&#xD;&#xA;          String boundary = """"*****"""";&#xD;&#xA;          int bytesRead, bytesAvailable, bufferSize;&#xD;&#xA;          byte[] buffer;&#xD;&#xA;          int maxBufferSize = 1 * 1024 * 1024; &#xD;&#xA;          File sourceFile = new File(sourceFileUri); &#xD;&#xA;          &#xD;&#xA;          if (!sourceFile.isFile()) {&#xD;&#xA;        	  &#xD;&#xA;	           dialog.dismiss(); &#xD;&#xA;	           &#xD;&#xA;	           Log.e(""""uploadFile"""", """"Source File not exist :""""&#xD;&#xA;	        		               +uploadFilePath + """""""" + uploadFileName);&#xD;&#xA;	           &#xD;&#xA;	           runOnUiThread(new Runnable() {&#xD;&#xA;	               public void run() {&#xD;&#xA;	            	   messageText.setText(""""Source File not exist :""""&#xD;&#xA;	            			   +uploadFilePath + """""""" + uploadFileName);&#xD;&#xA;	               }&#xD;&#xA;	           }); &#xD;&#xA;	           &#xD;&#xA;	           return 0;&#xD;&#xA;           &#xD;&#xA;          }&#xD;&#xA;          else&#xD;&#xA;          {&#xD;&#xA;	           try { &#xD;&#xA;	        	   &#xD;&#xA;	            	 // open a URL connection to the Servlet&#xD;&#xA;	               FileInputStream fileInputStream = new FileInputStream(sourceFile);&#xD;&#xA;	               URL url = new URL(upLoadServerUri);&#xD;&#xA;	               &#xD;&#xA;	               // Open a HTTP  connection to  the URL&#xD;&#xA;	               conn = (HttpURLConnection) url.openConnection(); &#xD;&#xA;	               conn.setDoInput(true); // Allow Inputs&#xD;&#xA;	               conn.setDoOutput(true); // Allow Outputs&#xD;&#xA;	               conn.setUseCaches(false); // Don't use a Cached Copy&#xD;&#xA;	               conn.setRequestMethod(""""POST"""");&#xD;&#xA;	               conn.setRequestProperty(""""Connection"""", """"Keep-Alive"""");&#xD;&#xA;	               conn.setRequestProperty(""""ENCTYPE"""", """"multipart/form-data"""");&#xD;&#xA;	               conn.setRequestProperty(""""Content-Type"""", """"multipart/form-data;boundary="""" + boundary);&#xD;&#xA;	               conn.setRequestProperty(""""uploaded_file"""", fileName); &#xD;&#xA;	               &#xD;&#xA;	               dos = new DataOutputStream(conn.getOutputStream());&#xD;&#xA;	     &#xD;&#xA;	               dos.writeBytes(twoHyphens + boundary + lineEnd); &#xD;&#xA;	               dos.writeBytes(""""Content-Disposition: form-data; name=\""""uploaded_file\"""";filename=\""""""""&#xD;&#xA;	            		                     + fileName + """"\"""""""" + lineEnd);&#xD;&#xA;	               &#xD;&#xA;	               dos.writeBytes(lineEnd);&#xD;&#xA;	     &#xD;&#xA;	               // create a buffer of  maximum size&#xD;&#xA;	               bytesAvailable = fileInputStream.available(); &#xD;&#xA;	     &#xD;&#xA;	               bufferSize = Math.min(bytesAvailable, maxBufferSize);&#xD;&#xA;	               buffer = new byte[bufferSize];&#xD;&#xA;	     &#xD;&#xA;	               // read file and write it into form...&#xD;&#xA;	               bytesRead = fileInputStream.read(buffer, 0, bufferSize);  &#xD;&#xA;	                 &#xD;&#xA;	               while (bytesRead > 0) {&#xD;&#xA;	            	   &#xD;&#xA;	                 dos.write(buffer, 0, bufferSize);&#xD;&#xA;	                 bytesAvailable = fileInputStream.available();&#xD;&#xA;	                 bufferSize = Math.min(bytesAvailable, maxBufferSize);&#xD;&#xA;	                 bytesRead = fileInputStream.read(buffer, 0, bufferSize);   &#xD;&#xA;	                 &#xD;&#xA;	                 &#xD;&#xA;	                }&#xD;&#xA;	     &#xD;&#xA;	               // send multipart form data necesssary after file data...&#xD;&#xA;	               dos.writeBytes(lineEnd);&#xD;&#xA;	               dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);&#xD;&#xA;	     &#xD;&#xA;	               // Responses from the server (code and message)&#xD;&#xA;	               &#xD;&#xA;	               serverResponseCode = conn.getResponseCode();&#xD;&#xA;	               String serverResponseMessage = conn.getResponseMessage();&#xD;&#xA;	                &#xD;&#xA;	               Log.i(""""uploadFile"""", """"HTTP Response is : """" &#xD;&#xA;	            		   + serverResponseMessage + """": """" + serverResponseCode);&#xD;&#xA;	               &#xD;&#xA;	               if(serverResponseCode == 200){&#xD;&#xA;	            	   &#xD;&#xA;	                   runOnUiThread(new Runnable() {&#xD;&#xA;    	                        public void run() {&#xD;&#xA;    //	                        	&#xD;&#xA;    //	                        	String msg = """"File Upload Completed.\n\n See uploaded file here : \n\n""""&#xD;&#xA;    //	                        		          +"""" http://www.androidexample.com/media/uploads/""""&#xD;&#xA;    //	                        		          +uploadFileName;&#xD;&#xA;    	                        	&#xD;&#xA;    //	                        	messageText.setText(msg);&#xD;&#xA;    	                            Toast.makeText(UploadToServer.this, """"File Upload Complete."""", &#xD;&#xA;    	         &#xD;&#xA;                   		     Toast.LENGTH_SHORT).show();&#xD;&#xA;	                        }&#xD;&#xA;	                    });                &#xD;&#xA;	               }    &#xD;&#xA;	               &#xD;&#xA;	               //close the streams //&#xD;&#xA;	               fileInputStream.close();&#xD;&#xA;	               dos.flush();&#xD;&#xA;	               dos.close();&#xD;&#xA;	                &#xD;&#xA;	          } catch (MalformedURLException ex) {&#xD;&#xA;	        	  &#xD;&#xA;	              dialog.dismiss();  &#xD;&#xA;	              ex.printStackTrace();&#xD;&#xA;	              &#xD;&#xA;	              runOnUiThread(new Runnable() {&#xD;&#xA;	                  public void run() {&#xD;&#xA;	                	  messageText.setText(""""MalformedURLException Exception : check script url."""");&#xD;&#xA;	                      Toast.makeText(UploadToServer.this, """"MalformedURLException"""", Toast.LENGTH_SHORT).show();&#xD;&#xA;	                  }&#xD;&#xA;	              });&#xD;&#xA;	              &#xD;&#xA;	              Log.e(""""Upload file to server"""", """"error: """" + ex.getMessage(), ex);  &#xD;&#xA;	          } catch (Exception e) {&#xD;&#xA;	        	  &#xD;&#xA;	              dialog.dismiss();  &#xD;&#xA;	              e.printStackTrace();&#xD;&#xA;	              &#xD;&#xA;	              runOnUiThread(new Runnable() {&#xD;&#xA;	                  public void run() {&#xD;&#xA;	                	  messageText.setText(""""Got Exception : see logcat """");&#xD;&#xA;	                      Toast.makeText(UploadToServer.this, """"Got Exception : see logcat """", &#xD;&#xA;	                    		  Toast.LENGTH_SHORT).show();&#xD;&#xA;	                  }&#xD;&#xA;	              });&#xD;&#xA;	              Log.e(""""Upload file to server Exception"""", """"Exception : """" &#xD;&#xA;	            		                           + e.getMessage(), e);  &#xD;&#xA;	          }&#xD;&#xA;	          dialog.dismiss();       &#xD;&#xA;	          return serverResponseCode; &#xD;&#xA;	          &#xD;&#xA;           } // End else block &#xD;&#xA;         } "
