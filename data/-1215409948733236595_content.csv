"Content"
"    (function() {&#xD;&#xA;        var width, height, largeHeader, canvas, ctx, points, target, animateHeader = true;&#xD;&#xA;        // Main&#xD;&#xA;        initHeader();&#xD;&#xA;        initAnimation();&#xD;&#xA;        addListeners();&#xD;&#xA;        function initHeader() {&#xD;&#xA;            width = window.innerWidth;&#xD;&#xA;            height = window.innerHeight;&#xD;&#xA;            target = {x: width/2, y: height/2};&#xD;&#xA;            largeHeader = document.getElementById('large-header');&#xD;&#xA;            largeHeader.style.height = height+'px';&#xD;&#xA;            canvas = document.getElementById('demo-canvas');&#xD;&#xA;            canvas.width = width;&#xD;&#xA;            canvas.height = height;&#xD;&#xA;            ctx = canvas.getContext('2d');&#xD;&#xA;            // create points&#xD;&#xA;            points = [];&#xD;&#xA;            for(var x = 0; x < width; x = x + width/20) {&#xD;&#xA;                for(var y = 0; y < height; y = y + height/20) {&#xD;&#xA;                    var px = x + Math.random()*width/20;&#xD;&#xA;                    var py = y + Math.random()*height/20;&#xD;&#xA;                    var p = {x: px, originX: px, y: py, originY: py };&#xD;&#xA;                    points.push(p);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            // for each point find the 5 closest points&#xD;&#xA;            for(var i = 0; i < points.length; i++) {&#xD;&#xA;                var closest = [];&#xD;&#xA;                var p1 = points[i];&#xD;&#xA;                for(var j = 0; j < points.length; j++) {&#xD;&#xA;                    var p2 = points[j]&#xD;&#xA;                    if(!(p1 == p2)) {&#xD;&#xA;                        var placed = false;&#xD;&#xA;                        for(var k = 0; k < 5; k++) {&#xD;&#xA;                            if(!placed) {&#xD;&#xA;                                if(closest[k] == undefined) {&#xD;&#xA;                                    closest[k] = p2;&#xD;&#xA;                                    placed = true;&#xD;&#xA;                                }&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        for(var k = 0; k < 5; k++) {&#xD;&#xA;                            if(!placed) {&#xD;&#xA;                                if(getDistance(p1, p2) < getDistance(p1, closest[k])) {&#xD;&#xA;                                    closest[k] = p2;&#xD;&#xA;                                    placed = true;&#xD;&#xA;                                }&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                p1.closest = closest;&#xD;&#xA;            }&#xD;&#xA;            // assign a circle to each point&#xD;&#xA;            for(var i in points) {&#xD;&#xA;                var c = new Circle(points[i], 2+Math.random()*2, 'rgba(255,255,255,0.3)');&#xD;&#xA;                points[i].circle = c;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        // Event handling&#xD;&#xA;        function addListeners() {&#xD;&#xA;            if(!('ontouchstart' in window)) {&#xD;&#xA;                window.addEventListener('mousemove', mouseMove);&#xD;&#xA;            }&#xD;&#xA;            window.addEventListener('scroll', scrollCheck);&#xD;&#xA;            window.addEventListener('resize', resize);&#xD;&#xA;        }&#xD;&#xA;        function mouseMove(e) {&#xD;&#xA;            var posx = posy = 0;&#xD;&#xA;            if (e.pageX || e.pageY) {&#xD;&#xA;                posx = e.pageX;&#xD;&#xA;                posy = e.pageY;&#xD;&#xA;            }&#xD;&#xA;            else if (e.clientX || e.clientY)    {&#xD;&#xA;                posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;&#xD;&#xA;                posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;&#xD;&#xA;            }&#xD;&#xA;            target.x = posx;&#xD;&#xA;            target.y = posy;&#xD;&#xA;        }&#xD;&#xA;        function scrollCheck() {&#xD;&#xA;            if(document.body.scrollTop > height) animateHeader = false;&#xD;&#xA;            else animateHeader = true;&#xD;&#xA;        }&#xD;&#xA;        function resize() {&#xD;&#xA;            width = window.innerWidth;&#xD;&#xA;            height = window.innerHeight;&#xD;&#xA;            largeHeader.style.height = height+'px';&#xD;&#xA;            canvas.width = width;&#xD;&#xA;            canvas.height = height;&#xD;&#xA;        }&#xD;&#xA;        // animation&#xD;&#xA;        function initAnimation() {&#xD;&#xA;            animate();&#xD;&#xA;            for(var i in points) {&#xD;&#xA;                shiftPoint(points[i]);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        function animate() {&#xD;&#xA;            if(animateHeader) {&#xD;&#xA;                ctx.clearRect(0,0,width,height);&#xD;&#xA;                for(var i in points) {&#xD;&#xA;                    // detect points in range&#xD;&#xA;                    if(Math.abs(getDistance(target, points[i])) < 4000) {&#xD;&#xA;                        points[i].active = 0.3;&#xD;&#xA;                        points[i].circle.active = 0.6;&#xD;&#xA;                    } else if(Math.abs(getDistance(target, points[i])) < 20000) {&#xD;&#xA;                        points[i].active = 0.1;&#xD;&#xA;                        points[i].circle.active = 0.3;&#xD;&#xA;                    } else if(Math.abs(getDistance(target, points[i])) < 40000) {&#xD;&#xA;                        points[i].active = 0.02;&#xD;&#xA;                        points[i].circle.active = 0.1;&#xD;&#xA;                    } else {&#xD;&#xA;                        points[i].active = 0;&#xD;&#xA;                        points[i].circle.active = 0;&#xD;&#xA;                    }&#xD;&#xA;                    drawLines(points[i]);&#xD;&#xA;                    points[i].circle.draw();&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            requestAnimationFrame(animate);&#xD;&#xA;        }&#xD;&#xA;        function shiftPoint(p) {&#xD;&#xA;            TweenLite.to(p, 1+1*Math.random(), {x:p.originX-50+Math.random()*100,&#xD;&#xA;                y: p.originY-50+Math.random()*100, ease:Circ.easeInOut,&#xD;&#xA;                onComplete: function() {&#xD;&#xA;                    shiftPoint(p);&#xD;&#xA;                }});&#xD;&#xA;        }&#xD;&#xA;        // Canvas manipulation&#xD;&#xA;        function drawLines(p) {&#xD;&#xA;            if(!p.active) return;&#xD;&#xA;            for(var i in p.closest) {&#xD;&#xA;                ctx.beginPath();&#xD;&#xA;                ctx.moveTo(p.x, p.y);&#xD;&#xA;                ctx.lineTo(p.closest[i].x, p.closest[i].y);&#xD;&#xA;                ctx.strokeStyle = 'rgba(156,217,249,'+ p.active+')';&#xD;&#xA;                ctx.stroke();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        function Circle(pos,rad,color) {&#xD;&#xA;            var _this = this;&#xD;&#xA;            // constructor&#xD;&#xA;            (function() {&#xD;&#xA;                _this.pos = pos || null;&#xD;&#xA;                _this.radius = rad || null;&#xD;&#xA;                _this.color = color || null;&#xD;&#xA;            })();&#xD;&#xA;            this.draw = function() {&#xD;&#xA;                if(!_this.active) return;&#xD;&#xA;                ctx.beginPath();&#xD;&#xA;                ctx.arc(_this.pos.x, _this.pos.y, _this.radius, 0, 2 * Math.PI, false);&#xD;&#xA;                ctx.fillStyle = 'rgba(156,217,249,'+ _this.active+')';&#xD;&#xA;                ctx.fill();&#xD;&#xA;            };&#xD;&#xA;        }&#xD;&#xA;        // Util&#xD;&#xA;        function getDistance(p1, p2) {&#xD;&#xA;            return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;    })();"
