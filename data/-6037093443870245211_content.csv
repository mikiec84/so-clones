"Content"
"    //Check for any member with given name, whether var, func, class, union, enum.&#xD;&#xA;    #define CREATE_MEMBER_CHECK(member)                                         \&#xD;&#xA;                                                                                \&#xD;&#xA;    template<typename T, typename = std::true_type>                             \&#xD;&#xA;    struct Alias_##member;                                                      \&#xD;&#xA;                                                                                \&#xD;&#xA;    template<typename T>                                                        \&#xD;&#xA;    struct Alias_##member <                                                     \&#xD;&#xA;        T, std::integral_constant<bool, got_type<decltype(&T::member)>::value>  \&#xD;&#xA;    > { static const decltype(&T::member) value; };                             \&#xD;&#xA;                                                                                \&#xD;&#xA;    struct AmbiguitySeed_##member { char member; };                             \&#xD;&#xA;                                                                                \&#xD;&#xA;    template<typename T>                                                        \&#xD;&#xA;    struct has_member_##member {                                                \&#xD;&#xA;        static const bool value                                                 \&#xD;&#xA;            = has_member<                                                       \&#xD;&#xA;                Alias_##member<ambiguate<T, AmbiguitySeed_##member>>            \&#xD;&#xA;                , Alias_##member<AmbiguitySeed_##member>                        \&#xD;&#xA;            >::value                                                            \&#xD;&#xA;        ;                                                                       \&#xD;&#xA;    }"
