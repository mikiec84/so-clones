"Content"
"	public class DividerItemDecoration extends RecyclerView.ItemDecoration {&#xD;&#xA;    private static final int[] ATTRS = new int[]{&#xD;&#xA;            android.R.attr.listDivider&#xD;&#xA;    };&#xD;&#xA;    public static final int HORIZONTAL_LIST = LinearLayoutManager.HORIZONTAL;&#xD;&#xA;    public static final int VERTICAL_LIST = LinearLayoutManager.VERTICAL;&#xD;&#xA;    private Drawable mDivider;&#xD;&#xA;    private int mOrientation;&#xD;&#xA;    public DividerItemDecoration(Context context, int orientation) {&#xD;&#xA;        final TypedArray a = context.obtainStyledAttributes(ATTRS);&#xD;&#xA;        mDivider = a.getDrawable(0);&#xD;&#xA;        a.recycle();&#xD;&#xA;        setOrientation(orientation);&#xD;&#xA;    }&#xD;&#xA;    public void setOrientation(int orientation) {&#xD;&#xA;        if (orientation != HORIZONTAL_LIST && orientation != VERTICAL_LIST) {&#xD;&#xA;            throw new IllegalArgumentException(""""invalid orientation"""");&#xD;&#xA;        }&#xD;&#xA;        mOrientation = orientation;&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state) {&#xD;&#xA;        if (mOrientation == VERTICAL_LIST) {&#xD;&#xA;            drawVertical(c, parent);&#xD;&#xA;        } else {&#xD;&#xA;            drawHorizontal(c, parent);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    public void drawVertical(Canvas c, RecyclerView parent) {&#xD;&#xA;        final int left = parent.getPaddingLeft();&#xD;&#xA;        final int right = parent.getWidth() - parent.getPaddingRight();&#xD;&#xA;        final int childCount = parent.getChildCount();&#xD;&#xA;        for (int i = 0; i < childCount; i++) {&#xD;&#xA;            final View child = parent.getChildAt(i);&#xD;&#xA;            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child&#xD;&#xA;                    .getLayoutParams();&#xD;&#xA;            final int top = child.getBottom() + params.bottomMargin;&#xD;&#xA;            final int bottom = top + mDivider.getIntrinsicHeight();&#xD;&#xA;            mDivider.setBounds(left, top, right, bottom);&#xD;&#xA;            mDivider.draw(c);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    public void drawHorizontal(Canvas c, RecyclerView parent) {&#xD;&#xA;        final int top = parent.getPaddingTop();&#xD;&#xA;        final int bottom = parent.getHeight() - parent.getPaddingBottom();&#xD;&#xA;        final int childCount = parent.getChildCount();&#xD;&#xA;        for (int i = 0; i < childCount; i++) {&#xD;&#xA;            final View child = parent.getChildAt(i);&#xD;&#xA;            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child&#xD;&#xA;                    .getLayoutParams();&#xD;&#xA;            final int left = child.getRight() + params.rightMargin;&#xD;&#xA;            final int right = left + mDivider.getIntrinsicHeight();&#xD;&#xA;            mDivider.setBounds(left, top, right, bottom);&#xD;&#xA;            mDivider.draw(c);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {&#xD;&#xA;        if (mOrientation == VERTICAL_LIST) {&#xD;&#xA;            outRect.set(0, 0, 0, mDivider.getIntrinsicHeight());&#xD;&#xA;        } else {&#xD;&#xA;            outRect.set(0, 0, mDivider.getIntrinsicWidth(), 0);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;	}"
