"Content"
"     - (NSString*)base64forData:(NSData*)theData {&#xD;&#xA;    &#xD;&#xA;    const uint8_t* input = (const uint8_t*)[theData bytes];&#xD;&#xA;    NSInteger length = [theData length];&#xD;&#xA;    &#xD;&#xA;    static char table[] = """"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="""";&#xD;&#xA;    &#xD;&#xA;    NSMutableData* data = [NSMutableData dataWithLength:((length + 2) / 3) * 4];&#xD;&#xA;    uint8_t* output = (uint8_t*)data.mutableBytes;&#xD;&#xA;    &#xD;&#xA;    NSInteger i;&#xD;&#xA;    for (i=0; i < length; i += 3) {&#xD;&#xA;        NSInteger value = 0;&#xD;&#xA;        NSInteger j;&#xD;&#xA;        for (j = i; j < (i + 3); j++) {&#xD;&#xA;            value <<= 8;&#xD;&#xA;            &#xD;&#xA;            if (j < length) {&#xD;&#xA;                value |= (0xFF & input[j]);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        NSInteger theIndex = (i / 3) * 4;&#xD;&#xA;        output[theIndex + 0] =                    table[(value >> 18) & 0x3F];&#xD;&#xA;        output[theIndex + 1] =                    table[(value >> 12) & 0x3F];&#xD;&#xA;        output[theIndex + 2] = (i + 1) < length ? table[(value >> 6)  & 0x3F] : '=';&#xD;&#xA;        output[theIndex + 3] = (i + 2) < length ? table[(value >> 0)  & 0x3F] : '=';&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    return [[NSString alloc] initWithData:data encoding:NSASCIIStringEncoding];&#xD;&#xA;    }"
