"Content"
"    var db_config = {&#xD;&#xA;      host: 'localhost',&#xD;&#xA;        user: 'root',&#xD;&#xA;        password: '',&#xD;&#xA;        database: 'example'&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    var connection;&#xD;&#xA;    &#xD;&#xA;    function handleDisconnect() {&#xD;&#xA;      connection = mysql.createConnection(db_config); // Recreate the connection, since&#xD;&#xA;                                                      // the old one cannot be reused.&#xD;&#xA;    &#xD;&#xA;      connection.connect(function(err) {              // The server is either down&#xD;&#xA;        if(err) {                                     // or restarting (takes a while sometimes).&#xD;&#xA;          console.log('error when connecting to db:', err);&#xD;&#xA;          setTimeout(handleDisconnect, 2000); // We introduce a delay before attempting to reconnect,&#xD;&#xA;        }                                     // to avoid a hot loop, and to allow our node script to&#xD;&#xA;      });                                     // process asynchronous requests in the meantime.&#xD;&#xA;                                              // If you're also serving http, display a 503 error.&#xD;&#xA;      connection.on('error', function(err) {&#xD;&#xA;        console.log('db error', err);&#xD;&#xA;        if(err.code === 'PROTOCOL_CONNECTION_LOST') { // Connection to the MySQL server is usually&#xD;&#xA;          handleDisconnect();                         // lost due to either server restart, or a&#xD;&#xA;        } else {                                      // connnection idle timeout (the wait_timeout&#xD;&#xA;          throw err;                                  // server variable configures this)&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    handleDisconnect();"
