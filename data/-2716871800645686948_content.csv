"Content"
"     function query(/* $sql [, ... ] */)&#xD;&#xA;        {&#xD;&#xA;            // SQL statement&#xD;&#xA;            $sql = func_get_arg(0);&#xD;&#xA;    &#xD;&#xA;            // parameters, if any&#xD;&#xA;            $parameters = array_slice(func_get_args(), 1);&#xD;&#xA;    &#xD;&#xA;            // try to connect to database&#xD;&#xA;            static $handle;&#xD;&#xA;            if (!isset($handle))&#xD;&#xA;            {&#xD;&#xA;                try&#xD;&#xA;                {&#xD;&#xA;                    // connect to database&#xD;&#xA;                    $handle = new PDO(""""mysql:dbname="""" . DATABASE . """";host="""" . SERVER, USERNAME, PASSWORD);&#xD;&#xA;    &#xD;&#xA;                    // ensure that PDO::prepare returns false when passed invalid SQL&#xD;&#xA;                    $handle->setAttribute(PDO::ATTR_EMULATE_PREPARES, false); &#xD;&#xA;                }&#xD;&#xA;                catch (Exception $e)&#xD;&#xA;                {&#xD;&#xA;                    // trigger (big, orange) error&#xD;&#xA;                    trigger_error($e->getMessage(), E_USER_ERROR);&#xD;&#xA;                    exit;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // prepare SQL statement&#xD;&#xA;            $statement = $handle->prepare($sql);&#xD;&#xA;            if ($statement === false)&#xD;&#xA;            {&#xD;&#xA;                // trigger (big, orange) error&#xD;&#xA;                trigger_error($handle->errorInfo()[2], E_USER_ERROR);&#xD;&#xA;                exit;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // execute SQL statement&#xD;&#xA;            $results = $statement->execute($parameters);&#xD;&#xA;    &#xD;&#xA;            // return result set's rows, if any&#xD;&#xA;            if ($results !== false)&#xD;&#xA;            {&#xD;&#xA;                return $statement->fetchAll(PDO::FETCH_ASSOC);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;        }"
