"Content"
"    (UIImage *)UIImageFromCVMat:(cv::Mat)cvMat&#xD;&#xA;    {&#xD;&#xA;      NSData *data = [NSData dataWithBytes:cvMat.data length:cvMat.elemSize()*cvMat.total()];&#xD;&#xA;      CGColorSpaceRef colorSpace;&#xD;&#xA;    &#xD;&#xA;      if (cvMat.elemSize() == 1) {&#xD;&#xA;          colorSpace = CGColorSpaceCreateDeviceGray();&#xD;&#xA;      } else {&#xD;&#xA;          colorSpace = CGColorSpaceCreateDeviceRGB();&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      CGDataProviderRef provider = CGDataProviderCreateWithCFData((__bridge CFDataRef)data);&#xD;&#xA;    &#xD;&#xA;      // Creating CGImage from cv::Mat&#xD;&#xA;      CGImageRef imageRef = CGImageCreate(cvMat.cols,                                 //width&#xD;&#xA;                                         cvMat.rows,                                 //height&#xD;&#xA;                                         8,                                          //bits per component&#xD;&#xA;                                         8 * cvMat.elemSize(),                       //bits per pixel&#xD;&#xA;                                         cvMat.step[0],                            //bytesPerRow&#xD;&#xA;                                         colorSpace,                                 //colorspace&#xD;&#xA;                                         kCGImageAlphaNone|kCGBitmapByteOrderDefault,// bitmap info&#xD;&#xA;                                         provider,                                   //CGDataProviderRef&#xD;&#xA;                                         NULL,                                       //decode&#xD;&#xA;                                         false,                                      //should interpolate&#xD;&#xA;                                         kCGRenderingIntentDefault                   //intent&#xD;&#xA;                                         );&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;      // Getting UIImage from CGImage&#xD;&#xA;      UIImage *finalImage = [UIImage imageWithCGImage:imageRef];&#xD;&#xA;      CGImageRelease(imageRef);&#xD;&#xA;      CGDataProviderRelease(provider);&#xD;&#xA;      CGColorSpaceRelease(colorSpace);&#xD;&#xA;    &#xD;&#xA;      return finalImage;&#xD;&#xA;     }"
