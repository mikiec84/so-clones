"Content"
"    - (BOOL)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)peoplePicker shouldContinueAfterSelectingPerson:(ABRecordRef)person&#xD;&#xA;    {&#xD;&#xA;        ABAddressBookRef addressBook = ABAddressBookCreate();&#xD;&#xA;        &#xD;&#xA;        int i;&#xD;&#xA;        NSString *strName = @"""""""";&#xD;&#xA;        NSString* company = @"""""""";&#xD;&#xA;        NSString *address = @"""""""";&#xD;&#xA;        NSString *suburb = @"""""""";&#xD;&#xA;        NSString *postalcode = @"""""""";&#xD;&#xA;        NSString *state = @"""""""";&#xD;&#xA;        NSString *country = @"""""""";&#xD;&#xA;        NSString *mobile = @"""""""";&#xD;&#xA;        NSString *phone = @"""""""";&#xD;&#xA;        NSString *emailid = @"""""""";&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;    	strName = (NSString *)ABRecordCopyCompositeName((ABRecordRef) person);&#xD;&#xA;    	CFStringRef name = ABRecordCopyCompositeName((ABRecordRef) person);&#xD;&#xA;        company  = (NSString *)ABRecordCopyValue((ABRecordRef) person, kABPersonOrganizationProperty);&#xD;&#xA;        &#xD;&#xA;    	NSArray*  allPeople = (NSArray *)ABAddressBookCopyPeopleWithName(addressBook,name);&#xD;&#xA;        CFRelease(name);&#xD;&#xA;        &#xD;&#xA;    	for (i = 0; i < [allPeople count]; i++)&#xD;&#xA;        {&#xD;&#xA;    		ABRecordRef record = [allPeople objectAtIndex:i];&#xD;&#xA;    		&#xD;&#xA;    		ABMutableMultiValueRef multiValue = ABRecordCopyValue(record, kABPersonAddressProperty);&#xD;&#xA;    		for(CFIndex i=0; i<ABMultiValueGetCount(multiValue); i++)&#xD;&#xA;    		{&#xD;&#xA;    			NSString* HomeLabel = (NSString*)ABMultiValueCopyLabelAtIndex(multiValue, i);&#xD;&#xA;    			if([HomeLabel isEqualToString:@""""_$!<Home>!$_""""])&#xD;&#xA;    			{&#xD;&#xA;    				CFDictionaryRef dict = ABMultiValueCopyValueAtIndex(multiValue, i);&#xD;&#xA;    				address = [NSString stringWithFormat:@""""%@"""", CFDictionaryGetValue(dict, kABPersonAddressStreetKey)];&#xD;&#xA;                    suburb = [NSString stringWithFormat:@""""%@"""", CFDictionaryGetValue(dict, kABPersonAddressCityKey)];&#xD;&#xA;                    postalcode = [NSString stringWithFormat:@""""%@"""", CFDictionaryGetValue(dict, kABPersonAddressZIPKey)];&#xD;&#xA;                    state = [NSString stringWithFormat:@""""%@"""", CFDictionaryGetValue(dict, kABPersonAddressStateKey)];&#xD;&#xA;                    country = [NSString stringWithFormat:@""""%@"""", CFDictionaryGetValue(dict, kABPersonAddressCountryKey)];&#xD;&#xA;                    &#xD;&#xA;                    CFRelease(dict);&#xD;&#xA;    			}&#xD;&#xA;                CFRelease(HomeLabel);&#xD;&#xA;    		}&#xD;&#xA;            CFRelease(multiValue);&#xD;&#xA;    	}&#xD;&#xA;        CFRelease(allPeople);&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;    	ABMultiValueRef phones =(NSString*)ABRecordCopyValue(person, kABPersonPhoneProperty);&#xD;&#xA;    	NSString* mobileLabel = nil;&#xD;&#xA;    	for(CFIndex i = 0; i < ABMultiValueGetCount(phones); i++)&#xD;&#xA;        {&#xD;&#xA;    		mobileLabel = (NSString*)ABMultiValueCopyLabelAtIndex(phones, i);&#xD;&#xA;    		if([mobileLabel isEqualToString:(NSString *)kABPersonPhoneMobileLabel])&#xD;&#xA;    		{&#xD;&#xA;    			mobile = (NSString*)ABMultiValueCopyValueAtIndex(phones, i);&#xD;&#xA;    			NSLog(@""""phone   %@"""",mobile);&#xD;&#xA;    		}&#xD;&#xA;    		else if ([mobileLabel isEqualToString:(NSString*)kABPersonPhoneIPhoneLabel])&#xD;&#xA;    		{&#xD;&#xA;    			phone = (NSString*)ABMultiValueCopyValueAtIndex(phones, i);&#xD;&#xA;    			NSLog(@""""phone   %@"""",phone);&#xD;&#xA;    			&#xD;&#xA;                CFRelease(mobileLabel);&#xD;&#xA;    			break ;&#xD;&#xA;    		}&#xD;&#xA;            CFRelease(mobileLabel);&#xD;&#xA;            &#xD;&#xA;    	}&#xD;&#xA;    	CFStringRef value, label;&#xD;&#xA;        ABMutableMultiValueRef multi = ABRecordCopyValue(person, kABPersonEmailProperty);&#xD;&#xA;        CFIndex count = ABMultiValueGetCount(multi);&#xD;&#xA;        if (count == 1)&#xD;&#xA;        {&#xD;&#xA;            value = ABMultiValueCopyValueAtIndex(multi, 0);&#xD;&#xA;            emailid = (NSString*) value;&#xD;&#xA;            NSLog(@""""self.emailID   %@"""",emailid);&#xD;&#xA;            CFRelease(value);&#xD;&#xA;        }&#xD;&#xA;        else&#xD;&#xA;        {&#xD;&#xA;            for (CFIndex i = 0; i < count; i++)&#xD;&#xA;            {&#xD;&#xA;                label = ABMultiValueCopyLabelAtIndex(multi, i);&#xD;&#xA;                value = ABMultiValueCopyValueAtIndex(multi, i);&#xD;&#xA;                &#xD;&#xA;                // check for Work e-mail label&#xD;&#xA;                if (CFStringCompare(label, kABWorkLabel, 0) == 0)&#xD;&#xA;                {&#xD;&#xA;                    emailid = (NSString*) value;&#xD;&#xA;                    NSLog(@""""self.emailID   %@"""",emailid);&#xD;&#xA;                }&#xD;&#xA;                else if(CFStringCompare(label, kABHomeLabel, 0) == 0)&#xD;&#xA;                {&#xD;&#xA;                    emailid = (NSString*) value;&#xD;&#xA;                    NSLog(@""""self.emailID   %@"""",emailid);&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                CFRelease(label);&#xD;&#xA;                CFRelease(value);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        CFRelease(multi);&#xD;&#xA;        &#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;    	CFRelease(phones);&#xD;&#xA;    	CFRelease(addressBook);&#xD;&#xA;    	[self dismissModalViewControllerAnimated:YES];&#xD;&#xA;    	&#xD;&#xA;    	return NO;&#xD;&#xA;        &#xD;&#xA;    }"
