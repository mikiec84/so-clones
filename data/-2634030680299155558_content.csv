"Content"
"    class UserModelManager(BaseUserManager):&#xD;&#xA;        def create_user(self, email, password, pseudo):&#xD;&#xA;            user = self.model()&#xD;&#xA;            user.name = name&#xD;&#xA;            user.email = self.normalize_email(email=email)&#xD;&#xA;            user.set_password(password)&#xD;&#xA;            user.save()&#xD;&#xA;    &#xD;&#xA;            return user&#xD;&#xA;    &#xD;&#xA;        def create_superuser(self, email, password):&#xD;&#xA;            '''&#xD;&#xA;            Used for: python manage.py createsuperuser&#xD;&#xA;            '''&#xD;&#xA;            user = self.model()&#xD;&#xA;            user.name = 'admin-yeah'&#xD;&#xA;            user.email = self.normalize_email(email=email)&#xD;&#xA;            user.set_password(password)&#xD;&#xA;    &#xD;&#xA;            user.is_staff = True&#xD;&#xA;            user.is_superuser = True&#xD;&#xA;            user.save()&#xD;&#xA;    &#xD;&#xA;            return user&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    class UserModel(AbstractBaseUser, PermissionsMixin):&#xD;&#xA;        ## Personnal fields.&#xD;&#xA;        email = models.EmailField(max_length=254, unique=True)&#xD;&#xA;        name = models.CharField(max_length=16)&#xD;&#xA;        ## [...]&#xD;&#xA;    &#xD;&#xA;        ## Django manage fields.&#xD;&#xA;        date_joined = models.DateTimeField(auto_now_add=True)&#xD;&#xA;        is_active = models.BooleanField(default=True)&#xD;&#xA;        is_staff = models.BooleanField(default=False)&#xD;&#xA;    &#xD;&#xA;        USERNAME_FIELD = 'email'&#xD;&#xA;        REQUIRED_FIELD = ['email', 'name']&#xD;&#xA;    &#xD;&#xA;        objects = UserModelManager()&#xD;&#xA;    &#xD;&#xA;        def __str__(self):&#xD;&#xA;            return self.email&#xD;&#xA;    &#xD;&#xA;        def get_short_name(self):&#xD;&#xA;            return self.name[:2].upper()&#xD;&#xA;    &#xD;&#xA;        def get_full_name(self):&#xD;&#xA;            return self.name"
