"Content"
"    	public static Bitmap decodeSampledBitmapFromFile(String path, int reqWidth, int reqHeight) &#xD;&#xA;	{ // BEST QUALITY MATCH&#xD;&#xA;	    // First decode with inJustDecodeBounds=true to check dimensions&#xD;&#xA;	    final BitmapFactory.Options options = new BitmapFactory.Options();&#xD;&#xA;	    options.inJustDecodeBounds = true;&#xD;&#xA;	    BitmapFactory.decodeFile(path, options);&#xD;&#xA;	    // Calculate inSampleSize&#xD;&#xA;	        // Raw height and width of image&#xD;&#xA;	        final int height = options.outHeight;&#xD;&#xA;	        final int width = options.outWidth;&#xD;&#xA;	        options.inPreferredConfig = Bitmap.Config.RGB_565;&#xD;&#xA;	        int inSampleSize = 1;&#xD;&#xA;	        if (height > reqHeight) {&#xD;&#xA;	            inSampleSize = Math.round((float)height / (float)reqHeight);&#xD;&#xA;	        }&#xD;&#xA;	        int expectedWidth = width / inSampleSize;&#xD;&#xA;	        if (expectedWidth > reqWidth) {&#xD;&#xA;	            //if(Math.round((float)width / (float)reqWidth) > inSampleSize) // If bigger SampSize..&#xD;&#xA;	            inSampleSize = Math.round((float)width / (float)reqWidth);&#xD;&#xA;	        }&#xD;&#xA;	    options.inSampleSize = inSampleSize;&#xD;&#xA;	    // Decode bitmap with inSampleSize set&#xD;&#xA;	    options.inJustDecodeBounds = false;&#xD;&#xA;	    return BitmapFactory.decodeFile(path, options);&#xD;&#xA;	  }"
