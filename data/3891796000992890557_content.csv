"Content"
"    class PageTemplater {&#xD;&#xA;		/**&#xD;&#xA;         * A Unique Identifier&#xD;&#xA;         */&#xD;&#xA;		 protected $plugin_slug;&#xD;&#xA;        /**&#xD;&#xA;         * A reference to an instance of this class.&#xD;&#xA;         */&#xD;&#xA;        private static $instance;&#xD;&#xA;        /**&#xD;&#xA;         * The array of templates that this plugin tracks.&#xD;&#xA;         */&#xD;&#xA;        protected $templates;&#xD;&#xA;        /**&#xD;&#xA;         * Returns an instance of this class. &#xD;&#xA;         */&#xD;&#xA;        public static function get_instance() {&#xD;&#xA;                if( null == self::$instance ) {&#xD;&#xA;                        self::$instance = new PageTemplater();&#xD;&#xA;                } &#xD;&#xA;                return self::$instance;&#xD;&#xA;        } &#xD;&#xA;        /**&#xD;&#xA;         * Initializes the plugin by setting filters and administration functions.&#xD;&#xA;         */&#xD;&#xA;        private function __construct() {&#xD;&#xA;                $this->templates = array();&#xD;&#xA;                // Add a filter to the attributes metabox to inject template into the cache.&#xD;&#xA;                add_filter(&#xD;&#xA;					'page_attributes_dropdown_pages_args',&#xD;&#xA;					 array( $this, 'register_project_templates' ) &#xD;&#xA;				);&#xD;&#xA;                // Add a filter to the save post to inject out template into the page cache&#xD;&#xA;                add_filter(&#xD;&#xA;					'wp_insert_post_data', &#xD;&#xA;					array( $this, 'register_project_templates' ) &#xD;&#xA;				);&#xD;&#xA;                // Add a filter to the template include to determine if the page has our &#xD;&#xA;				// template assigned and return it's path&#xD;&#xA;                add_filter(&#xD;&#xA;					'template_include', &#xD;&#xA;					array( $this, 'view_project_template') &#xD;&#xA;				);&#xD;&#xA;                // Add your templates to this array.&#xD;&#xA;                $this->templates = array(&#xD;&#xA;                        'goodtobebad-template.php'     => 'It\'s Good to Be Bad',&#xD;&#xA;                );&#xD;&#xA;				&#xD;&#xA;        } &#xD;&#xA;        /**&#xD;&#xA;         * Adds our template to the pages cache in order to trick WordPress&#xD;&#xA;         * into thinking the template file exists where it doens't really exist.&#xD;&#xA;         *&#xD;&#xA;         */&#xD;&#xA;        public function register_project_templates( $atts ) {&#xD;&#xA;                // Create the key used for the themes cache&#xD;&#xA;                $cache_key = 'page_templates-' . md5( get_theme_root() . '/' . get_stylesheet() );&#xD;&#xA;                // Retrieve the cache list. &#xD;&#xA;				// If it doesn't exist, or it's empty prepare an array&#xD;&#xA;                $templates = wp_get_theme()->get_page_templates();&#xD;&#xA;                if ( empty( $templates ) ) {&#xD;&#xA;                        $templates = array();&#xD;&#xA;                } &#xD;&#xA;                // New cache, therefore remove the old one&#xD;&#xA;                wp_cache_delete( $cache_key , 'themes');&#xD;&#xA;                // Now add our template to the list of templates by merging our templates&#xD;&#xA;                // with the existing templates array from the cache.&#xD;&#xA;                $templates = array_merge( $templates, $this->templates );&#xD;&#xA;                // Add the modified cache to allow WordPress to pick it up for listing&#xD;&#xA;                // available templates&#xD;&#xA;                wp_cache_add( $cache_key, $templates, 'themes', 1800 );&#xD;&#xA;                return $atts;&#xD;&#xA;        } &#xD;&#xA;        /**&#xD;&#xA;         * Checks if the template is assigned to the page&#xD;&#xA;         */&#xD;&#xA;        public function view_project_template( $template ) {&#xD;&#xA;                global $post;&#xD;&#xA;                if (!isset($this->templates[get_post_meta( &#xD;&#xA;					$post->ID, '_wp_page_template', true &#xD;&#xA;				)] ) ) {&#xD;&#xA;					&#xD;&#xA;                        return $template;&#xD;&#xA;						&#xD;&#xA;                } &#xD;&#xA;                $file = plugin_dir_path(__FILE__). get_post_meta( &#xD;&#xA;					$post->ID, '_wp_page_template', true &#xD;&#xA;				);&#xD;&#xA;				&#xD;&#xA;                // Just to be safe, we check if the file exist first&#xD;&#xA;                if( file_exists( $file ) ) {&#xD;&#xA;                        return $file;&#xD;&#xA;                } &#xD;&#xA;				else { echo $file; }&#xD;&#xA;                return $template;&#xD;&#xA;        } &#xD;&#xA;    } &#xD;&#xA;    add_action( 'plugins_loaded', array( 'PageTemplater', 'get_instance' ) );"
