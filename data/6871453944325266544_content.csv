"Content"
"    jQuery.extend({&#xD;&#xA;	&#xD;&#xA;    createUploadIframe: function(id, uri)&#xD;&#xA;	{&#xD;&#xA;			//create frame&#xD;&#xA;            var frameId = 'jUploadFrame' + id;&#xD;&#xA;            var iframeHtml = '<iframe id=""""' + frameId + '"""" name=""""' + frameId + '"""" style=""""position:absolute; top:-9999px; left:-9999px""""';&#xD;&#xA;			if(window.ActiveXObject)&#xD;&#xA;			{&#xD;&#xA;                if(typeof uri== 'boolean'){&#xD;&#xA;					iframeHtml += ' src=""""' + 'javascript:false' + '""""';&#xD;&#xA;                }&#xD;&#xA;                else if(typeof uri== 'string'){&#xD;&#xA;					iframeHtml += ' src=""""' + uri + '""""';&#xD;&#xA;                }	&#xD;&#xA;			}&#xD;&#xA;			iframeHtml += ' />';&#xD;&#xA;			jQuery(iframeHtml).appendTo(document.body);&#xD;&#xA;            return jQuery('#' + frameId).get(0);			&#xD;&#xA;    },&#xD;&#xA;    createUploadForm: function(id, fileElementId, data)&#xD;&#xA;	{&#xD;&#xA;		//create form	&#xD;&#xA;		var formId = 'jUploadForm' + id;&#xD;&#xA;		var fileId = 'jUploadFile' + id;&#xD;&#xA;		var form = jQuery('<form  action="""""""" method=""""POST"""" name=""""' + formId + '"""" id=""""' + formId + '"""" enctype=""""multipart/form-data""""></form>');	&#xD;&#xA;		if(data)&#xD;&#xA;		{&#xD;&#xA;			for(var i in data)&#xD;&#xA;			{&#xD;&#xA;				jQuery('<input type=""""hidden"""" name=""""' + i + '"""" value=""""' + data[i] + '"""" />').appendTo(form);&#xD;&#xA;			}			&#xD;&#xA;		}		&#xD;&#xA;		var oldElement = jQuery('#' + fileElementId);&#xD;&#xA;		var newElement = jQuery(oldElement).clone();&#xD;&#xA;		jQuery(oldElement).attr('id', fileId);&#xD;&#xA;		jQuery(oldElement).before(newElement);&#xD;&#xA;		jQuery(oldElement).appendTo(form);&#xD;&#xA;		&#xD;&#xA;		//set attributes&#xD;&#xA;		jQuery(form).css('position', 'absolute');&#xD;&#xA;		jQuery(form).css('top', '-1200px');&#xD;&#xA;		jQuery(form).css('left', '-1200px');&#xD;&#xA;		jQuery(form).appendTo('body');		&#xD;&#xA;		return form;&#xD;&#xA;    },&#xD;&#xA;    ajaxFileUpload: function(s) {&#xD;&#xA;        // TODO introduce global settings, allowing the client to modify them for all requests, not only timeout		&#xD;&#xA;        s = jQuery.extend({}, jQuery.ajaxSettings, s);&#xD;&#xA;        var id = new Date().getTime()        &#xD;&#xA;		var form = jQuery.createUploadForm(id, s.fileElementId, (typeof(s.data)=='undefined'?false:s.data));&#xD;&#xA;		var io = jQuery.createUploadIframe(id, s.secureuri);&#xD;&#xA;		var frameId = 'jUploadFrame' + id;&#xD;&#xA;		var formId = 'jUploadForm' + id;		&#xD;&#xA;        // Watch for a new set of requests&#xD;&#xA;        if ( s.global && ! jQuery.active++ )&#xD;&#xA;		{&#xD;&#xA;			jQuery.event.trigger( """"ajaxStart"""" );&#xD;&#xA;		}            &#xD;&#xA;        var requestDone = false;&#xD;&#xA;        // Create the request object&#xD;&#xA;        var xml = {}   &#xD;&#xA;        if ( s.global )&#xD;&#xA;            jQuery.event.trigger(""""ajaxSend"""", [xml, s]);&#xD;&#xA;        // Wait for a response to come back&#xD;&#xA;        var uploadCallback = function(isTimeout)&#xD;&#xA;		{			&#xD;&#xA;			var io = document.getElementById(frameId);&#xD;&#xA;            try &#xD;&#xA;			{				&#xD;&#xA;				if(io.contentWindow)&#xD;&#xA;				{&#xD;&#xA;					 xml.responseText = io.contentWindow.document.body?io.contentWindow.document.body.innerHTML:null;&#xD;&#xA;                	 xml.responseXML = io.contentWindow.document.XMLDocument?io.contentWindow.document.XMLDocument:io.contentWindow.document;&#xD;&#xA;					 &#xD;&#xA;				}else if(io.contentDocument)&#xD;&#xA;				{&#xD;&#xA;					 xml.responseText = io.contentDocument.document.body?io.contentDocument.document.body.innerHTML:null;&#xD;&#xA;                	xml.responseXML = io.contentDocument.document.XMLDocument?io.contentDocument.document.XMLDocument:io.contentDocument.document;&#xD;&#xA;				}						&#xD;&#xA;            }catch(e)&#xD;&#xA;			{&#xD;&#xA;				jQuery.handleError(s, xml, null, e);&#xD;&#xA;			}&#xD;&#xA;            if ( xml || isTimeout == """"timeout"""") &#xD;&#xA;			{				&#xD;&#xA;                requestDone = true;&#xD;&#xA;                var status;&#xD;&#xA;                try {&#xD;&#xA;                    status = isTimeout != """"timeout"""" ? """"success"""" : """"error"""";&#xD;&#xA;                    // Make sure that the request was successful or notmodified&#xD;&#xA;                    if ( status != """"error"""" )&#xD;&#xA;					{&#xD;&#xA;                        // process the data (runs the xml through httpData regardless of callback)&#xD;&#xA;                        var data = jQuery.uploadHttpData( xml, s.dataType );    &#xD;&#xA;                        // If a local callback was specified, fire it and pass it the data&#xD;&#xA;                        if ( s.success )&#xD;&#xA;                            s.success( data, status );&#xD;&#xA;    &#xD;&#xA;                        // Fire the global callback&#xD;&#xA;                        if( s.global )&#xD;&#xA;                            jQuery.event.trigger( """"ajaxSuccess"""", [xml, s] );&#xD;&#xA;                    } else&#xD;&#xA;                        jQuery.handleError(s, xml, status);&#xD;&#xA;                } catch(e) &#xD;&#xA;				{&#xD;&#xA;                    status = """"error"""";&#xD;&#xA;                    jQuery.handleError(s, xml, status, e);&#xD;&#xA;                }&#xD;&#xA;                // The request was completed&#xD;&#xA;                if( s.global )&#xD;&#xA;                    jQuery.event.trigger( """"ajaxComplete"""", [xml, s] );&#xD;&#xA;                // Handle the global AJAX counter&#xD;&#xA;                if ( s.global && ! --jQuery.active )&#xD;&#xA;                    jQuery.event.trigger( """"ajaxStop"""" );&#xD;&#xA;                // Process result&#xD;&#xA;                if ( s.complete )&#xD;&#xA;                    s.complete(xml, status);&#xD;&#xA;                jQuery(io).unbind()&#xD;&#xA;                setTimeout(function()&#xD;&#xA;									{	try &#xD;&#xA;										{&#xD;&#xA;											jQuery(io).remove();&#xD;&#xA;											jQuery(form).remove();	&#xD;&#xA;											&#xD;&#xA;										} catch(e) &#xD;&#xA;										{&#xD;&#xA;											jQuery.handleError(s, xml, null, e);&#xD;&#xA;										}									&#xD;&#xA;									}, 100)&#xD;&#xA;                xml = null&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        // Timeout checker&#xD;&#xA;        if ( s.timeout > 0 ) &#xD;&#xA;		{&#xD;&#xA;            setTimeout(function(){&#xD;&#xA;                // Check to see if the request is still happening&#xD;&#xA;                if( !requestDone ) uploadCallback( """"timeout"""" );&#xD;&#xA;            }, s.timeout);&#xD;&#xA;        }&#xD;&#xA;        try &#xD;&#xA;		{&#xD;&#xA;			var form = jQuery('#' + formId);&#xD;&#xA;			jQuery(form).attr('action', s.url);&#xD;&#xA;			jQuery(form).attr('method', 'POST');&#xD;&#xA;			jQuery(form).attr('target', frameId);&#xD;&#xA;            if(form.encoding)&#xD;&#xA;			{&#xD;&#xA;				jQuery(form).attr('encoding', 'multipart/form-data');      			&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;			{	&#xD;&#xA;				jQuery(form).attr('enctype', 'multipart/form-data');			&#xD;&#xA;            }			&#xD;&#xA;            jQuery(form).submit();&#xD;&#xA;        } catch(e) &#xD;&#xA;		{			&#xD;&#xA;            jQuery.handleError(s, xml, null, e);&#xD;&#xA;        }&#xD;&#xA;		&#xD;&#xA;		jQuery('#' + frameId).load(uploadCallback	);&#xD;&#xA;        return {abort: function () {}};	&#xD;&#xA;    },&#xD;&#xA;    uploadHttpData: function( r, type ) {&#xD;&#xA;        var data = !type;&#xD;&#xA;        data = type == """"xml"""" || data ? r.responseXML : r.responseText;&#xD;&#xA;        // If the type is """"script"""", eval it in global context&#xD;&#xA;        if ( type == """"script"""" )&#xD;&#xA;            jQuery.globalEval( data );&#xD;&#xA;        // Get the JavaScript object, if JSON is used.&#xD;&#xA;        if ( type == """"json"""" )&#xD;&#xA;            eval( """"data = """" + data );&#xD;&#xA;        // evaluate scripts within html&#xD;&#xA;        if ( type == """"html"""" )&#xD;&#xA;            jQuery(""""<div>"""").html(data).evalScripts();&#xD;&#xA;        return data;&#xD;&#xA;    }"
