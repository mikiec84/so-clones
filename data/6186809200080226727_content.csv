"Content"
"      /**&#xD;&#xA;       * Checks if the device is rooted.&#xD;&#xA;       *&#xD;&#xA;       * @return <code>true</code> if the device is rooted, <code>false</code> otherwise.&#xD;&#xA;       */&#xD;&#xA;      public static boolean isRooted() {&#xD;&#xA;    &#xD;&#xA;        // get from build info&#xD;&#xA;        String buildTags = android.os.Build.TAGS;&#xD;&#xA;        if (buildTags != null && buildTags.contains(""""test-keys"""")) {&#xD;&#xA;          return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // check if /system/app/Superuser.apk is present&#xD;&#xA;        try {&#xD;&#xA;          File file = new File(""""/system/app/Superuser.apk"""");&#xD;&#xA;          if (file.exists()) {&#xD;&#xA;            return true;&#xD;&#xA;          }&#xD;&#xA;        } catch (Exception e1) {&#xD;&#xA;          // ignore&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // try executing commands&#xD;&#xA;        return canExecuteCommand(""""/system/xbin/which su"""")&#xD;&#xA;            || canExecuteCommand(""""/system/bin/which su"""") || canExecuteCommand(""""which su"""");&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      // executes a command on the system&#xD;&#xA;      private static boolean canExecuteCommand(String command) {&#xD;&#xA;        boolean executedSuccesfully;&#xD;&#xA;        try {&#xD;&#xA;          Runtime.getRuntime().exec(command);&#xD;&#xA;          executedSuccesfully = true;&#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;          executedSuccesfully = false;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        return executedSuccesfully;&#xD;&#xA;      }"
