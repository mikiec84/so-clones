"Content"
"	<?php&#xD;&#xA;		header('Content-Type: text/plain; charset=utf-8');&#xD;&#xA;		try {&#xD;&#xA;		// Undefined | Multiple Files | $_FILES Corruption Attack&#xD;&#xA;		// If this request falls under any of them, treat it invalid.&#xD;&#xA;		if (&#xD;&#xA;			!isset($_FILES['upfile']['error']) ||&#xD;&#xA;			is_array($_FILES['upfile']['error'])&#xD;&#xA;		) {&#xD;&#xA;			throw new RuntimeException('Invalid parameters.');&#xD;&#xA;		}&#xD;&#xA;		// Check $_FILES['upfile']['error'] value.&#xD;&#xA;		switch ($_FILES['upfile']['error']) {&#xD;&#xA;			case UPLOAD_ERR_OK:&#xD;&#xA;				break;&#xD;&#xA;			case UPLOAD_ERR_NO_FILE:&#xD;&#xA;				throw new RuntimeException('No file sent.');&#xD;&#xA;			case UPLOAD_ERR_INI_SIZE:&#xD;&#xA;			case UPLOAD_ERR_FORM_SIZE:&#xD;&#xA;				throw new RuntimeException('Exceeded filesize limit.');&#xD;&#xA;			default:&#xD;&#xA;				throw new RuntimeException('Unknown errors.');&#xD;&#xA;		}&#xD;&#xA;		// You should also check filesize here. &#xD;&#xA;		if ($_FILES['upfile']['size'] > 1000000) {&#xD;&#xA;			throw new RuntimeException('Exceeded filesize limit.');&#xD;&#xA;		}&#xD;&#xA;		// DO NOT TRUST $_FILES['upfile']['mime'] VALUE !!&#xD;&#xA;		// Check MIME Type by yourself.&#xD;&#xA;		$finfo = new finfo(FILEINFO_MIME_TYPE);&#xD;&#xA;		if (false === $ext = array_search(&#xD;&#xA;			$finfo->file($_FILES['upfile']['tmp_name']),&#xD;&#xA;			array(&#xD;&#xA;				'jpg' => 'image/jpeg',&#xD;&#xA;				'png' => 'image/png',&#xD;&#xA;				'gif' => 'image/gif',&#xD;&#xA;			),&#xD;&#xA;			true&#xD;&#xA;		)) {&#xD;&#xA;			throw new RuntimeException('Invalid file format.');&#xD;&#xA;		}&#xD;&#xA;		// You should name it uniquely.&#xD;&#xA;		// DO NOT USE $_FILES['upfile']['name'] WITHOUT ANY VALIDATION !!&#xD;&#xA;		// On this example, obtain safe unique name from its binary data.&#xD;&#xA;		if (!move_uploaded_file(&#xD;&#xA;			$_FILES['upfile']['tmp_name'],&#xD;&#xA;			sprintf('./uploads/%s.%s',&#xD;&#xA;				sha1_file($_FILES['upfile']['tmp_name']),&#xD;&#xA;				$ext&#xD;&#xA;			)&#xD;&#xA;		)) {&#xD;&#xA;			throw new RuntimeException('Failed to move uploaded file.');&#xD;&#xA;		}&#xD;&#xA;		echo 'File is uploaded successfully.';&#xD;&#xA;		} catch (RuntimeException $e) {&#xD;&#xA;		echo $e->getMessage();&#xD;&#xA;		}&#xD;&#xA;	?>"
