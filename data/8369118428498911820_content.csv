"Content"
"    var app = angular.module('Calc', []);&#xD;&#xA;     var inputQuantity = [];&#xD;&#xA;        $(function() {&#xD;&#xA;          $("""".form-control"""").each(function(i) {&#xD;&#xA;            inputQuantity[i]=this.defaultValue;&#xD;&#xA;             $(this).data(""""idx"""",i); // save this field's index to access later&#xD;&#xA;          });&#xD;&#xA;          $("""".form-control"""").on(""""keyup"""", function (e) {&#xD;&#xA;            var $field = $(this),&#xD;&#xA;                val=this.value,&#xD;&#xA;                $thisIndex=parseInt($field.data(""""idx""""),10); // retrieve the index&#xD;&#xA;    //        window.console && console.log($field.is("""":invalid""""));&#xD;&#xA;              //  $field.is("""":invalid"""") is for Safari, it must be the last to not error in IE8&#xD;&#xA;            if (this.validity && this.validity.badInput || isNaN(val) || $field.is("""":invalid"""") ) {&#xD;&#xA;                this.value = inputQuantity[$thisIndex];&#xD;&#xA;                return;&#xD;&#xA;            } &#xD;&#xA;            if (val.length > Number($field.attr(""""maxlength""""))) {&#xD;&#xA;              val=val.slice(0, 5);&#xD;&#xA;              $field.val(val);&#xD;&#xA;            }&#xD;&#xA;            inputQuantity[$thisIndex]=val;&#xD;&#xA;          });      &#xD;&#xA;        });&#xD;&#xA;    app.controller('Calc_Ctrl', function ($scope, $http) {&#xD;&#xA;         $scope.choices = [{id : 'choice1', l2 : 0, b2 : 0}];&#xD;&#xA;         $scope.areas = [{id : 'choice2', total : 0}];&#xD;&#xA;         $scope.addNewChoice = function () {&#xD;&#xA;              var newItemNo = $scope.choices.length + 1;&#xD;&#xA;              $scope.choices.push({&#xD;&#xA;                   'id' : 'choice' + newItemNo, l2 : 0, b2 : 0&#xD;&#xA;              });&#xD;&#xA;         };&#xD;&#xA;         $scope.removeChoice = function () {&#xD;&#xA;              var lastItem = $scope.choices.length - 1;&#xD;&#xA;              if (lastItem !== 0) {&#xD;&#xA;                   $scope.choices.splice(lastItem);&#xD;&#xA;              }&#xD;&#xA;         };&#xD;&#xA;    });"
