"Content"
"    using System;&#xD;&#xA;    using System.IO;&#xD;&#xA;    using System.Security.Permissions;&#xD;&#xA;    &#xD;&#xA;    public class Watcher&#xD;&#xA;    {&#xD;&#xA;    &#xD;&#xA;        public static void Main()&#xD;&#xA;        {&#xD;&#xA;           Run();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        [PermissionSet(SecurityAction.Demand, Name=""""FullTrust"""")]&#xD;&#xA;        public static void Run()&#xD;&#xA;        {&#xD;&#xA;            string[] args = System.Environment.GetCommandLineArgs();&#xD;&#xA;    &#xD;&#xA;            // If a directory is not specified, exit program.&#xD;&#xA;            if(args.Length != 2)&#xD;&#xA;            {&#xD;&#xA;                // Display the proper way to call the program.&#xD;&#xA;                Console.WriteLine(""""Usage: Watcher.exe (directory)"""");&#xD;&#xA;                return;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Create a new FileSystemWatcher and set its properties.&#xD;&#xA;            FileSystemWatcher watcher = new FileSystemWatcher();&#xD;&#xA;            watcher.Path = args[1];&#xD;&#xA;            /* Watch for changes in LastAccess and LastWrite times, and&#xD;&#xA;               the renaming of files or directories. */&#xD;&#xA;            watcher.NotifyFilter = NotifyFilters.LastAccess | NotifyFilters.LastWrite&#xD;&#xA;               | NotifyFilters.FileName | NotifyFilters.DirectoryName;&#xD;&#xA;            // Only watch text files.&#xD;&#xA;            watcher.Filter = """"*.txt"""";&#xD;&#xA;    &#xD;&#xA;            // Add event handlers.&#xD;&#xA;            watcher.Changed += new FileSystemEventHandler(OnChanged);&#xD;&#xA;            watcher.Created += new FileSystemEventHandler(OnChanged);&#xD;&#xA;            watcher.Deleted += new FileSystemEventHandler(OnChanged);&#xD;&#xA;            watcher.Renamed += new RenamedEventHandler(OnRenamed);&#xD;&#xA;    &#xD;&#xA;            // Begin watching.&#xD;&#xA;            watcher.EnableRaisingEvents = true;&#xD;&#xA;    &#xD;&#xA;            // Wait for the user to quit the program.&#xD;&#xA;            Console.WriteLine(""""Press \'q\' to quit the sample."""");&#xD;&#xA;            while(Console.Read()!='q');&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Define the event handlers.&#xD;&#xA;        private static void OnChanged(object source, FileSystemEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            // Specify what is done when a file is changed, created, or deleted.&#xD;&#xA;           Console.WriteLine(""""File: """" +  e.FullPath + """" """" + e.ChangeType);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private static void OnRenamed(object source, RenamedEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            // Specify what is done when a file is renamed.&#xD;&#xA;            Console.WriteLine(""""File: {0} renamed to {1}"""", e.OldFullPath, e.FullPath);&#xD;&#xA;        }&#xD;&#xA;    }"
