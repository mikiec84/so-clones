"Content"
"     public class ReadContacts extends AsyncTask<Void, Void, Void>{&#xD;&#xA;            private ListView contactsList;&#xD;&#xA;        &#xD;&#xA;            private Context cntx;&#xD;&#xA;            private Constant constants;&#xD;&#xA;        &#xD;&#xA;            static final String[] CONTACTS_SUMMARY_PROJECTION = new String[] {&#xD;&#xA;                Contacts._ID, // 0&#xD;&#xA;                Contacts.DISPLAY_NAME, // 1&#xD;&#xA;                Contacts.STARRED, // 2&#xD;&#xA;                Contacts.TIMES_CONTACTED, // 3&#xD;&#xA;                Contacts.CONTACT_PRESENCE, // 4&#xD;&#xA;                Contacts.PHOTO_ID, // 5&#xD;&#xA;                Contacts.LOOKUP_KEY, // 6&#xD;&#xA;                Contacts.HAS_PHONE_NUMBER, // 7&#xD;&#xA;            };&#xD;&#xA;        &#xD;&#xA;            private long contactId;&#xD;&#xA;            private String display_name;&#xD;&#xA;            private String phoneNumber;&#xD;&#xA;        &#xD;&#xA;            private ArrayList<ContactsWrapper>contactWrap = new ArrayList<ContactsWrapper>();&#xD;&#xA;            private HashMap<Long, ArrayList<ContactsWrapper>>map = new HashMap<Long, ArrayList<ContactsWrapper>>();&#xD;&#xA;        &#xD;&#xA;            private ContactsAdapter adapter;&#xD;&#xA;        &#xD;&#xA;            private DataController controller;&#xD;&#xA;        &#xD;&#xA;            public ReadContacts(Context cntx, ListView contactList) {&#xD;&#xA;                // TODO Auto-generated constructor stub&#xD;&#xA;                this.cntx = cntx;&#xD;&#xA;                constants = new Constant();&#xD;&#xA;                this.contactsList = contactList;&#xD;&#xA;        &#xD;&#xA;                controller = DataController.getInstance(); &#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPreExecute() {&#xD;&#xA;                // TODO Auto-generated method stub&#xD;&#xA;                super.onPreExecute();&#xD;&#xA;                if(!(controller.contactWrapper.size()>0))&#xD;&#xA;                     constants.displayProgressDialog(cntx, """"Loading Contacts..."""", """"Please Wait"""");&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            protected Void doInBackground(Void... params) {&#xD;&#xA;                // TODO Auto-generated method stub&#xD;&#xA;        &#xD;&#xA;                if(!(controller.contactWrapper.size()>0))&#xD;&#xA;                {&#xD;&#xA;                try {&#xD;&#xA;                    String select = """"(("""" + Contacts.DISPLAY_NAME + """" NOTNULL) AND (""""&#xD;&#xA;                            + Contacts.HAS_PHONE_NUMBER + """"=1) AND (""""&#xD;&#xA;                            + Contacts.DISPLAY_NAME + """" != '' ))"""";&#xD;&#xA;        &#xD;&#xA;                    Cursor c = cntx.getContentResolver().query(Contacts.CONTENT_URI, CONTACTS_SUMMARY_PROJECTION, select,&#xD;&#xA;                            null, Contacts.DISPLAY_NAME + """" COLLATE LOCALIZED ASC"""");&#xD;&#xA;        &#xD;&#xA;                    int colorcounter = 0;&#xD;&#xA;                    String[] colorcounter_array = { """"#91A46B"""", """"#8BB6B5"""", """"#CAA973"""", """"#8DA6C8"""",""""#D19B8D""""};&#xD;&#xA;        &#xD;&#xA;                    int color_string;&#xD;&#xA;                    for(int i=0;i<c.getCount();i++)&#xD;&#xA;                    {&#xD;&#xA;        //              contactWrap.clear();&#xD;&#xA;                        try {&#xD;&#xA;                            contactId = 0;&#xD;&#xA;                            String hasPhone = """""""";&#xD;&#xA;                            display_name = """""""";&#xD;&#xA;                            phoneNumber = """""""";&#xD;&#xA;        &#xD;&#xA;                            c.moveToPosition(i);&#xD;&#xA;        &#xD;&#xA;                            contactId =  c.getLong(0);&#xD;&#xA;                            display_name = c.getString(1);&#xD;&#xA;                            hasPhone = c.getString(7);&#xD;&#xA;        &#xD;&#xA;                            if (hasPhone.equalsIgnoreCase(""""1""""))&#xD;&#xA;                                hasPhone = """"true"""";&#xD;&#xA;                            else&#xD;&#xA;                                hasPhone = """"false"""" ;&#xD;&#xA;        &#xD;&#xA;                            if (Boolean.parseBoolean(hasPhone)) &#xD;&#xA;                            {&#xD;&#xA;                                Cursor phones = cntx.getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null,ContactsContract.CommonDataKinds.Phone.CONTACT_ID +"""" = """"+ contactId,null, null);&#xD;&#xA;                                while (phones.moveToNext()) &#xD;&#xA;                                {&#xD;&#xA;                                    int indexPhoneType = phones.getColumnIndexOrThrow(Phone.TYPE);&#xD;&#xA;                                    String phoneType =  phones.getString(indexPhoneType);&#xD;&#xA;        &#xD;&#xA;                                    phoneNumber = phones.getString(phones.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER)); &#xD;&#xA;        &#xD;&#xA;                                    String lookupKey = phones.getString(phones.getColumnIndex(ContactsContract.Contacts.LOOKUP_KEY));&#xD;&#xA;        &#xD;&#xA;                                    if (colorcounter < 5) &#xD;&#xA;                                    {&#xD;&#xA;                                        color_string =Color.parseColor(colorcounter_array[colorcounter]);&#xD;&#xA;                                        colorcounter++;&#xD;&#xA;                                    } else {&#xD;&#xA;                                        colorcounter = 0;&#xD;&#xA;                                        color_string =Color.parseColor(colorcounter_array[colorcounter]);&#xD;&#xA;                                        colorcounter++;&#xD;&#xA;                                    }&#xD;&#xA;                                    contactWrap.add(new ContactsWrapper(contactId, display_name, phoneNumber,lookupKey,false,color_string));&#xD;&#xA;                                }&#xD;&#xA;        //                      map.put(contactId, new ArrayList<ContactsWrapper>(contactWrap));&#xD;&#xA;                                phones.close();&#xD;&#xA;                            }&#xD;&#xA;                        } catch (Exception e) {&#xD;&#xA;        &#xD;&#xA;                            e.printStackTrace();&#xD;&#xA;                        }  &#xD;&#xA;                    }&#xD;&#xA;                    controller.contactWrapper = contactWrap;&#xD;&#xA;                }&#xD;&#xA;                catch (Exception e) {&#xD;&#xA;                    // TODO: handle exception&#xD;&#xA;                    e.printStackTrace();&#xD;&#xA;                }&#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPostExecute(Void result) {&#xD;&#xA;                // TODO Auto-generated method stub&#xD;&#xA;                super.onPostExecute(result);&#xD;&#xA;                constants.dismissDialog();&#xD;&#xA;        &#xD;&#xA;                adapter = new ContactsAdapter(cntx);&#xD;&#xA;                contactsList.setAdapter(adapter);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;        }"
