"Content"
"    var minimumInterval = 200; // minimum interval between throttled function calls&#xD;&#xA;    function throttle(func, obj, evt) {&#xD;&#xA;    	var timeouttype	= 0,&#xD;&#xA;    		curEvt = null;&#xD;&#xA;    	function lowerTimeoutType(f){&#xD;&#xA;    		timeouttype=0;&#xD;&#xA;    		if (curEvt !== null){&#xD;&#xA;    			func(curEvt);&#xD;&#xA;    			curEvt = null;&#xD;&#xA;			}&#xD;&#xA;    	};&#xD;&#xA;    	return function(Evt) {&#xD;&#xA;    		switch (timeouttype){&#xD;&#xA;    			case 0: // Execute immediately&#xD;&#xA;    				++timeouttype; // increase the timeouttype&#xD;&#xA;    				func(Evt);&#xD;&#xA;					// Now, make it so that the timeouttype resets later&#xD;&#xA;    				setTimeout(lowerTimeoutType, minimumInterval);&#xD;&#xA;    				break;&#xD;&#xA;    			case 1: // Delayed execute&#xD;&#xA;					// make it so that when timeouttype expires, your function&#xD;&#xA;					// is called with the freshest event&#xD;&#xA;    				curEvt = Evt;&#xD;&#xA;    				Evt.preventDefault();&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;    };"
