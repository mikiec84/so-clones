"Content"
"    public class GeofenceReceiver extends BroadcastReceiver {&#xD;&#xA;    	Context context;&#xD;&#xA;    &#xD;&#xA;    	Intent broadcastIntent = new Intent();&#xD;&#xA;    	&#xD;&#xA;    	@Override&#xD;&#xA;    	public void onReceive(Context context, Intent intent) {&#xD;&#xA;    		this.context = context;&#xD;&#xA;    		&#xD;&#xA;    		broadcastIntent.addCategory(GeofenceUtils.CATEGORY_LOCATION_SERVICES);&#xD;&#xA;    		&#xD;&#xA;    		if (LocationClient.hasError(intent)) {&#xD;&#xA;    			handleError(intent);&#xD;&#xA;    		} else {&#xD;&#xA;    			handleEnterExit(intent);&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	private void handleError(Intent intent){&#xD;&#xA;    		// Get the error code&#xD;&#xA;    		int errorCode = LocationClient.getErrorCode(intent);&#xD;&#xA;    &#xD;&#xA;    		// Get the error message&#xD;&#xA;    		String errorMessage = LocationServiceErrorMessages.getErrorString(&#xD;&#xA;    				context, errorCode);&#xD;&#xA;    &#xD;&#xA;    		// Log the error&#xD;&#xA;    		Log.e(GeofenceUtils.APPTAG,&#xD;&#xA;    				context.getString(R.string.geofence_transition_error_detail,&#xD;&#xA;    						errorMessage));&#xD;&#xA;    &#xD;&#xA;    		// Set the action and error message for the broadcast intent&#xD;&#xA;    		broadcastIntent&#xD;&#xA;    				.setAction(GeofenceUtils.ACTION_GEOFENCE_ERROR)&#xD;&#xA;    				.putExtra(GeofenceUtils.EXTRA_GEOFENCE_STATUS, errorMessage);&#xD;&#xA;    &#xD;&#xA;    		// Broadcast the error *locally* to other components in this app&#xD;&#xA;    		LocalBroadcastManager.getInstance(context).sendBroadcast(&#xD;&#xA;    				broadcastIntent);&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    &#xD;&#xA;    	private void handleEnterExit(Intent intent) {&#xD;&#xA;    		// Get the type of transition (entry or exit)&#xD;&#xA;    		int transition = LocationClient.getGeofenceTransition(intent);&#xD;&#xA;    &#xD;&#xA;    		// Test that a valid transition was reported&#xD;&#xA;    		if ((transition == Geofence.GEOFENCE_TRANSITION_ENTER)&#xD;&#xA;    				|| (transition == Geofence.GEOFENCE_TRANSITION_EXIT)) {&#xD;&#xA;    &#xD;&#xA;    			// Post a notification&#xD;&#xA;    			List<Geofence> geofences = LocationClient&#xD;&#xA;    					.getTriggeringGeofences(intent);&#xD;&#xA;    			String[] geofenceIds = new String[geofences.size()];&#xD;&#xA;    			String ids = TextUtils.join(GeofenceUtils.GEOFENCE_ID_DELIMITER,&#xD;&#xA;    					geofenceIds);&#xD;&#xA;    			String transitionType = GeofenceUtils&#xD;&#xA;    					.getTransitionString(transition);&#xD;&#xA;    &#xD;&#xA;    			for (int index = 0; index < geofences.size(); index++) {&#xD;&#xA;    				Geofence geofence = geofences.get(index);&#xD;&#xA;    				...do something with the geofence entry or exit. I'm saving them to a local sqlite db&#xD;&#xA;    &#xD;&#xA;    			}&#xD;&#xA;    			// Create an Intent to broadcast to the app&#xD;&#xA;    			broadcastIntent&#xD;&#xA;    					.setAction(GeofenceUtils.ACTION_GEOFENCE_TRANSITION)&#xD;&#xA;    					.addCategory(GeofenceUtils.CATEGORY_LOCATION_SERVICES)&#xD;&#xA;    					.putExtra(GeofenceUtils.EXTRA_GEOFENCE_ID, geofenceIds)&#xD;&#xA;    					.putExtra(GeofenceUtils.EXTRA_GEOFENCE_TRANSITION_TYPE,&#xD;&#xA;    							transitionType);&#xD;&#xA;    &#xD;&#xA;    			LocalBroadcastManager.getInstance(MyApplication.getContext())&#xD;&#xA;    					.sendBroadcast(broadcastIntent);&#xD;&#xA;    &#xD;&#xA;    			// Log the transition type and a message&#xD;&#xA;    			Log.d(GeofenceUtils.APPTAG, transitionType + """": """" + ids);&#xD;&#xA;    			Log.d(GeofenceUtils.APPTAG,&#xD;&#xA;    					context.getString(R.string.geofence_transition_notification_text));&#xD;&#xA;    &#xD;&#xA;    			// In debug mode, log the result&#xD;&#xA;    			Log.d(GeofenceUtils.APPTAG, """"transition"""");&#xD;&#xA;    &#xD;&#xA;    			// An invalid transition was reported&#xD;&#xA;    		} else {&#xD;&#xA;    			// Always log as an error&#xD;&#xA;    			Log.e(GeofenceUtils.APPTAG,&#xD;&#xA;    					context.getString(R.string.geofence_transition_invalid_type,&#xD;&#xA;    							transition));&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * Posts a notification in the notification bar when a transition is&#xD;&#xA;    	 * detected. If the user clicks the notification, control goes to the main&#xD;&#xA;    	 * Activity.&#xD;&#xA;    	 * &#xD;&#xA;    	 * @param transitionType&#xD;&#xA;    	 *            The type of transition that occurred.&#xD;&#xA;    	 * &#xD;&#xA;    	 */&#xD;&#xA;    	private void sendNotification(String transitionType, String locationName) {&#xD;&#xA;    &#xD;&#xA;    		// Create an explicit content Intent that starts the main Activity&#xD;&#xA;    		Intent notificationIntent = new Intent(context, MainActivity.class);&#xD;&#xA;    &#xD;&#xA;    		// Construct a task stack&#xD;&#xA;    		TaskStackBuilder stackBuilder = TaskStackBuilder.create(context);&#xD;&#xA;    &#xD;&#xA;    		// Adds the main Activity to the task stack as the parent&#xD;&#xA;    		stackBuilder.addParentStack(MainActivity.class);&#xD;&#xA;    &#xD;&#xA;    		// Push the content Intent onto the stack&#xD;&#xA;    		stackBuilder.addNextIntent(notificationIntent);&#xD;&#xA;    &#xD;&#xA;    		// Get a PendingIntent containing the entire back stack&#xD;&#xA;    		PendingIntent notificationPendingIntent = stackBuilder&#xD;&#xA;    				.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);&#xD;&#xA;    &#xD;&#xA;    		// Get a notification builder that's compatible with platform versions&#xD;&#xA;    		// >= 4&#xD;&#xA;    		NotificationCompat.Builder builder = new NotificationCompat.Builder(&#xD;&#xA;    				context);&#xD;&#xA;    &#xD;&#xA;    		// Set the notification contents&#xD;&#xA;    		builder.setSmallIcon(R.drawable.ic_notification)&#xD;&#xA;    				.setContentTitle(transitionType + """": """" + locationName)&#xD;&#xA;    				.setContentText(&#xD;&#xA;    						context.getString(R.string.geofence_transition_notification_text))&#xD;&#xA;    				.setContentIntent(notificationPendingIntent);&#xD;&#xA;    &#xD;&#xA;    		// Get an instance of the Notification manager&#xD;&#xA;    		NotificationManager mNotificationManager = (NotificationManager) context&#xD;&#xA;    				.getSystemService(Context.NOTIFICATION_SERVICE);&#xD;&#xA;    &#xD;&#xA;    		// Issue the notification&#xD;&#xA;    		mNotificationManager.notify(0, builder.build());&#xD;&#xA;    	}&#xD;&#xA;    }"
