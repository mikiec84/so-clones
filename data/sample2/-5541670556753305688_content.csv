"Content"
"     public abstract class AbstractFacade<T> {&#xD;&#xA;            private Class<T> entityClass;&#xD;&#xA;        &#xD;&#xA;            public AbstractFacade(Class<T> entityClass) {&#xD;&#xA;                this.entityClass = entityClass;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            protected abstract EntityManager getEntityManager();&#xD;&#xA;        &#xD;&#xA;            public void create(T entity) {&#xD;&#xA;                getEntityManager().persist(entity);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public void edit(T entity) {&#xD;&#xA;                getEntityManager().merge(entity);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public void remove(T entity) {&#xD;&#xA;                getEntityManager().remove(getEntityManager().merge(entity));&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public T find(Object id) {&#xD;&#xA;                return getEntityManager().find(entityClass, id);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public List<T> findAll() {&#xD;&#xA;                javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();&#xD;&#xA;                cq.select(cq.from(entityClass));&#xD;&#xA;                return getEntityManager().createQuery(cq).getResultList();&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public List<T> findRange(int[] range) {&#xD;&#xA;                javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();&#xD;&#xA;                cq.select(cq.from(entityClass));&#xD;&#xA;                javax.persistence.Query q = getEntityManager().createQuery(cq);&#xD;&#xA;                q.setMaxResults(range[1] - range[0]);&#xD;&#xA;                q.setFirstResult(range[0]);&#xD;&#xA;                return q.getResultList();&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public int count() {&#xD;&#xA;                javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();&#xD;&#xA;                javax.persistence.criteria.Root<T> rt = cq.from(entityClass);&#xD;&#xA;                cq.select(getEntityManager().getCriteriaBuilder().count(rt));&#xD;&#xA;                javax.persistence.Query q = getEntityManager().createQuery(cq);&#xD;&#xA;                return ((Long) q.getSingleResult()).intValue();&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;        }"
