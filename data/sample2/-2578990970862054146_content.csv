"Content"
"    var count_pairs = function(_arr,x) {&#xD;&#xA;      if(!x) x = 0;&#xD;&#xA;      var pairs = 0;&#xD;&#xA;      var i = 0;&#xD;&#xA;      var k = _arr.length-1;&#xD;&#xA;      if((k+1)<2) return pairs;&#xD;&#xA;      var halfX = x/2; &#xD;&#xA;      while(i<k) {&#xD;&#xA;        var curK = _arr[k];&#xD;&#xA;        var curI = _arr[i];&#xD;&#xA;        var pairsThisLoop = 0;&#xD;&#xA;        if(curK+curI==x) {&#xD;&#xA;          // if midpoint and equal find combinations&#xD;&#xA;          if(curK==curI) {&#xD;&#xA;            var comb = 1;&#xD;&#xA;            while(--k>=i) pairs+=(comb++);&#xD;&#xA;            break;&#xD;&#xA;          }&#xD;&#xA;          // count pair and k duplicates&#xD;&#xA;          pairsThisLoop++;&#xD;&#xA;          while(_arr[--k]==curK) pairsThisLoop++;&#xD;&#xA;          // add k side pairs to running total for every i side pair found&#xD;&#xA;          pairs+=pairsThisLoop;&#xD;&#xA;          while(_arr[++i]==curI) pairs+=pairsThisLoop;&#xD;&#xA;        } else {&#xD;&#xA;          // if we are at a mid point&#xD;&#xA;          if(curK==curI) break;&#xD;&#xA;          var distK = Math.abs(halfX-curK);&#xD;&#xA;          var distI = Math.abs(halfX-curI);&#xD;&#xA;          if(distI > distK) while(_arr[++i]==curI);&#xD;&#xA;          else while(_arr[--k]==curK);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;      return pairs;&#xD;&#xA;    }"
