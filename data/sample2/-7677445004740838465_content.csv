"Content"
"        public class FragmentDrawer extends Fragment {&#xD;&#xA;    &#xD;&#xA;        private static String TAG = FragmentDrawer.class.getSimpleName();&#xD;&#xA;    &#xD;&#xA;        private RecyclerView recyclerView;&#xD;&#xA;        private ActionBarDrawerToggle mDrawerToggle;&#xD;&#xA;        private DrawerLayout mDrawerLayout;&#xD;&#xA;        private NavigationDrawerAdapter adapter;&#xD;&#xA;        private View containerView;&#xD;&#xA;        private static String[] titles = null;&#xD;&#xA;        private FragmentDrawerListener drawerListener;&#xD;&#xA;    &#xD;&#xA;        public FragmentDrawer() {&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void setDrawerListener(FragmentDrawerListener listener) {&#xD;&#xA;            this.drawerListener = listener;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static List<NavDrawerItem> getData() {&#xD;&#xA;            List<NavDrawerItem> data = new ArrayList<>();&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            // preparing navigation drawer items&#xD;&#xA;            for (int i = 0; i < titles.length; i++) {&#xD;&#xA;                NavDrawerItem navItem = new NavDrawerItem();&#xD;&#xA;                navItem.setTitle(titles[i]);&#xD;&#xA;                data.add(navItem);&#xD;&#xA;            }&#xD;&#xA;            return data;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;    &#xD;&#xA;            // drawer labels&#xD;&#xA;            titles = getActivity().getResources().getStringArray(R.array.nav_drawer_labels);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View onCreateView(LayoutInflater inflater, ViewGroup container,&#xD;&#xA;                                 Bundle savedInstanceState) {&#xD;&#xA;            // Inflating view layout&#xD;&#xA;            View layout = inflater.inflate(R.layout.fragment_navigation_drawer, container, false);&#xD;&#xA;            recyclerView = (RecyclerView) layout.findViewById(R.id.drawerList);&#xD;&#xA;    &#xD;&#xA;            adapter = new NavigationDrawerAdapter(getActivity(), getData());&#xD;&#xA;            recyclerView.setAdapter(adapter);&#xD;&#xA;            recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));&#xD;&#xA;            recyclerView.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), recyclerView, new ClickListener() {&#xD;&#xA;                @Override&#xD;&#xA;                public void onClick(View view, int position) {&#xD;&#xA;                    drawerListener.onDrawerItemSelected(view, position);&#xD;&#xA;                    mDrawerLayout.closeDrawer(containerView);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void onLongClick(View view, int position) {&#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;            }));&#xD;&#xA;    &#xD;&#xA;            return layout;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public void setUp(int fragmentId, DrawerLayout drawerLayout, final Toolbar toolbar) {&#xD;&#xA;            containerView = getActivity().findViewById(fragmentId);&#xD;&#xA;            mDrawerLayout = drawerLayout;&#xD;&#xA;            mDrawerToggle = new ActionBarDrawerToggle(getActivity(), drawerLayout, toolbar, R.string.drawer_open, R.string.drawer_close) {&#xD;&#xA;                @Override&#xD;&#xA;                public void onDrawerOpened(View drawerView) {&#xD;&#xA;                    super.onDrawerOpened(drawerView);&#xD;&#xA;                    getActivity().invalidateOptionsMenu();&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void onDrawerClosed(View drawerView) {&#xD;&#xA;                    super.onDrawerClosed(drawerView);&#xD;&#xA;                    getActivity().invalidateOptionsMenu();&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void onDrawerSlide(View drawerView, float slideOffset) {&#xD;&#xA;                    super.onDrawerSlide(drawerView, slideOffset);&#xD;&#xA;                    toolbar.setAlpha(1 - slideOffset / 2);&#xD;&#xA;                }&#xD;&#xA;            };&#xD;&#xA;    &#xD;&#xA;            mDrawerLayout.setDrawerListener(mDrawerToggle);&#xD;&#xA;            mDrawerLayout.post(new Runnable() {&#xD;&#xA;                @Override&#xD;&#xA;                public void run() {&#xD;&#xA;                    mDrawerToggle.syncState();&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static interface ClickListener {&#xD;&#xA;            public void onClick(View view, int position);&#xD;&#xA;    &#xD;&#xA;            public void onLongClick(View view, int position);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        static class RecyclerTouchListener implements RecyclerView.OnItemTouchListener {&#xD;&#xA;    &#xD;&#xA;            private GestureDetector gestureDetector;&#xD;&#xA;            private ClickListener clickListener;&#xD;&#xA;    &#xD;&#xA;            public RecyclerTouchListener(Context context, final RecyclerView recyclerView, final ClickListener clickListener) {&#xD;&#xA;                this.clickListener = clickListener;&#xD;&#xA;                gestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {&#xD;&#xA;                    @Override&#xD;&#xA;                    public boolean onSingleTapUp(MotionEvent e) {&#xD;&#xA;                        return true;&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    @Override&#xD;&#xA;                    public void onLongPress(MotionEvent e) {&#xD;&#xA;                        View child = recyclerView.findChildViewUnder(e.getX(), e.getY());&#xD;&#xA;                        if (child != null && clickListener != null) {&#xD;&#xA;                            clickListener.onLongClick(child, recyclerView.getChildPosition(child));&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) {&#xD;&#xA;    &#xD;&#xA;                View child = rv.findChildViewUnder(e.getX(), e.getY());&#xD;&#xA;                if (child != null && clickListener != null && gestureDetector.onTouchEvent(e)) {&#xD;&#xA;                    clickListener.onClick(child, rv.getChildPosition(child));&#xD;&#xA;                }&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void onTouchEvent(RecyclerView rv, MotionEvent e) {&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public interface FragmentDrawerListener {&#xD;&#xA;            public void onDrawerItemSelected(View view, int position);&#xD;&#xA;        }&#xD;&#xA;    }"
