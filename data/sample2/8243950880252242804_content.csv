"Content"
"        // Load CAs from an InputStream&#xD;&#xA;        // (could be from a resource or ByteArrayInputStream or ...)&#xD;&#xA;        CertificateFactory cf = CertificateFactory.getInstance(""""X.509"""");&#xD;&#xA;        // From https://www.washington.edu/itconnect/security/ca/load-der.crt&#xD;&#xA;        InputStream caInput = new BufferedInputStream(new FileInputStream(""""load-der.crt""""));&#xD;&#xA;        Certificate ca;&#xD;&#xA;        try {&#xD;&#xA;            ca = cf.generateCertificate(caInput);&#xD;&#xA;            System.out.println(""""ca="""" + ((X509Certificate) ca).getSubjectDN());&#xD;&#xA;        } finally {&#xD;&#xA;            caInput.close();&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        // Create a KeyStore containing our trusted CAs&#xD;&#xA;        String keyStoreType = KeyStore.getDefaultType();&#xD;&#xA;        KeyStore keyStore = KeyStore.getInstance(keyStoreType);&#xD;&#xA;        keyStore.load(null, null);&#xD;&#xA;        keyStore.setCertificateEntry(""""ca"""", ca);&#xD;&#xA;        &#xD;&#xA;        // Create a TrustManager that trusts the CAs in our KeyStore&#xD;&#xA;        String tmfAlgorithm = TrustManagerFactory.getDefaultAlgorithm();&#xD;&#xA;        TrustManagerFactory tmf = TrustManagerFactory.getInstance(tmfAlgorithm);&#xD;&#xA;        tmf.init(keyStore);&#xD;&#xA;        &#xD;&#xA;        // Create an SSLContext that uses our TrustManager&#xD;&#xA;        SSLContext context = SSLContext.getInstance(""""TLS"""");&#xD;&#xA;        context.init(null, tmf.getTrustManagers(), null);&#xD;&#xA;        &#xD;&#xA;        // Tell the URLConnection to use a SocketFactory from our SSLContext&#xD;&#xA;        URL url = new URL(""""https://certs.cac.washington.edu/CAtest/"""");&#xD;&#xA;        HttpsURLConnection urlConnection =&#xD;&#xA;            (HttpsURLConnection)url.openConnection();&#xD;&#xA;        urlConnection.setSSLSocketFactory(context.getSocketFactory());&#xD;&#xA;        InputStream in = urlConnection.getInputStream();&#xD;&#xA;        copyInputStreamToOutputStream(in, System.out);"
