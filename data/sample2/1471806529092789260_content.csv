"Content"
"     public class DataBaseHelper extends SQLiteOpenHelper {&#xD;&#xA;         private Context mycontext;&#xD;&#xA;    &#xD;&#xA;         //private String DB_PATH = mycontext.getApplicationContext().getPackageName()+""""/databases/"""";&#xD;&#xA;         private static String DB_NAME = """"(datbasename).sqlite""""; //the extension may be .sqlite or .db&#xD;&#xA;         public SQLiteDatabase myDataBase;&#xD;&#xA;         /*private String DB_PATH = """"/data/data/""""&#xD;&#xA;                                 + mycontext.getApplicationContext().getPackageName()&#xD;&#xA;                                 + """"/databases/"""";*/&#xD;&#xA;    &#xD;&#xA;         public DataBaseHelper(Context context) throws IOException {&#xD;&#xA;             super(context, DB_NAME, null, 1);&#xD;&#xA;             this.mycontext = context;&#xD;&#xA;             boolean dbexist = checkdatabase();&#xD;&#xA;             if (dbexist) {&#xD;&#xA;                 //System.out.println(""""Database exists"""");&#xD;&#xA;                 opendatabase();&#xD;&#xA;             } else {&#xD;&#xA;                 System.out.println(""""Database doesn't exist"""");&#xD;&#xA;                 createdatabase();&#xD;&#xA;             }&#xD;&#xA;    &#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;         public void createdatabase() throws IOException {&#xD;&#xA;             boolean dbexist = checkdatabase();&#xD;&#xA;             if (dbexist) {&#xD;&#xA;                 //System.out.println("""" Database exists."""");&#xD;&#xA;             } else {&#xD;&#xA;                 this.getReadableDatabase();&#xD;&#xA;                 try {&#xD;&#xA;                     copydatabase();&#xD;&#xA;                 } catch (IOException e) {&#xD;&#xA;                     throw new Error(""""Error copying database"""");&#xD;&#xA;                 }&#xD;&#xA;             }&#xD;&#xA;         }&#xD;&#xA;         private boolean checkdatabase() {&#xD;&#xA;             //SQLiteDatabase checkdb = null;&#xD;&#xA;             boolean checkdb = false;&#xD;&#xA;             try {&#xD;&#xA;                 String myPath = DB_PATH + DB_NAME;&#xD;&#xA;                 File dbfile = new File(myPath);&#xD;&#xA;                 //checkdb = SQLiteDatabase.openDatabase(myPath,null,SQLiteDatabase.OPEN_READWRITE);&#xD;&#xA;                 checkdb = dbfile.exists();&#xD;&#xA;             } catch (SQLiteException e) {&#xD;&#xA;                 System.out.println(""""Database doesn't exist"""");&#xD;&#xA;             }&#xD;&#xA;    &#xD;&#xA;             return checkdb;&#xD;&#xA;         }&#xD;&#xA;         private void copydatabase() throws IOException {&#xD;&#xA;    &#xD;&#xA;             //Open your local db as the input stream&#xD;&#xA;             InputStream myinput = mycontext.getAssets().open(DB_NAME);&#xD;&#xA;    &#xD;&#xA;             // Path to the just created empty db&#xD;&#xA;             String outfilename = DB_PATH + DB_NAME;&#xD;&#xA;    &#xD;&#xA;             //Open the empty db as the output stream&#xD;&#xA;             OutputStream myoutput = new FileOutputStream(""""/data/data/(packagename)/databases/(datbasename).sqlite"""");&#xD;&#xA;    &#xD;&#xA;             // transfer byte to inputfile to outputfile&#xD;&#xA;             byte[] buffer = new byte[1024];&#xD;&#xA;             int length;&#xD;&#xA;             while ((length = myinput.read(buffer)) > 0) {&#xD;&#xA;                 myoutput.write(buffer, 0, length);&#xD;&#xA;             }&#xD;&#xA;    &#xD;&#xA;             //Close the streams&#xD;&#xA;             myoutput.flush();&#xD;&#xA;             myoutput.close();&#xD;&#xA;             myinput.close();&#xD;&#xA;    &#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;         public void opendatabase() throws SQLException {&#xD;&#xA;             //Open the database&#xD;&#xA;             String mypath = DB_PATH + DB_NAME;&#xD;&#xA;             myDataBase = SQLiteDatabase.openDatabase(mypath, null, SQLiteDatabase.OPEN_READWRITE);&#xD;&#xA;    &#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;         public synchronized void close() {&#xD;&#xA;             if (myDataBase != null) {&#xD;&#xA;                 myDataBase.close();&#xD;&#xA;             }&#xD;&#xA;             super.close();&#xD;&#xA;         }"
