"Content"
"	# Use the front controller as index file. It serves as a fallback solution when&#xD;&#xA;	# every other rewrite/redirect fails (e.g. in an aliased environment without&#xD;&#xA;	# mod_rewrite). Additionally, this reduces the matching process for the&#xD;&#xA;	# start page (path """"/"""") because otherwise Apache will apply the rewriting rules&#xD;&#xA;	# to each configured DirectoryIndex file (e.g. index.php, index.html, index.pl).&#xD;&#xA;	DirectoryIndex app.php&#xD;&#xA;	# By default, Apache does not evaluate symbolic links if you did not enable this&#xD;&#xA;	# feature in your server configuration. Uncomment the following line if you&#xD;&#xA;	# install assets as symlinks or if you experience problems related to symlinks&#xD;&#xA;	# when compiling LESS/Sass/CoffeScript assets.&#xD;&#xA;	# Options FollowSymlinks&#xD;&#xA;	# Disabling MultiViews prevents unwanted negotiation, e.g. """"/app"""" should not resolve&#xD;&#xA;	# to the front controller """"/app.php"""" but be rewritten to """"/app.php/app"""".&#xD;&#xA;	<IfModule mod_negotiation.c>&#xD;&#xA;		Options -MultiViews&#xD;&#xA;	</IfModule>&#xD;&#xA;	<IfModule mod_rewrite.c>&#xD;&#xA;		RewriteEngine On&#xD;&#xA;		# Determine the RewriteBase automatically and set it as environment variable.&#xD;&#xA;		# If you are using Apache aliases to do mass virtual hosting or installed the&#xD;&#xA;		# project in a subdirectory, the base path will be prepended to allow proper&#xD;&#xA;		# resolution of the app.php file and to redirect to the correct URI. It will&#xD;&#xA;		# work in environments without path prefix as well, providing a safe, one-size&#xD;&#xA;		# fits all solution. But as you do not need it in this case, you can comment&#xD;&#xA;		# the following 2 lines to eliminate the overhead.&#xD;&#xA;		RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\2$&#xD;&#xA;		RewriteRule ^(.*) - [E=BASE:%1]&#xD;&#xA;		# Sets the HTTP_AUTHORIZATION header removed by Apache&#xD;&#xA;		RewriteCond %{HTTP:Authorization} .&#xD;&#xA;		RewriteRule ^ - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]&#xD;&#xA;		# Redirect to URI without front controller to prevent duplicate content&#xD;&#xA;		# (with and without `/app.php`). Only do this redirect on the initial&#xD;&#xA;		# rewrite by Apache and not on subsequent cycles. Otherwise we would get an&#xD;&#xA;		# endless redirect loop (request -> rewrite to front controller ->&#xD;&#xA;		# redirect -> request -> ...).&#xD;&#xA;		# So in case you get a """"too many redirects"""" error or you always get redirected&#xD;&#xA;		# to the start page because your Apache does not expose the REDIRECT_STATUS&#xD;&#xA;		# environment variable, you have 2 choices:&#xD;&#xA;		# - disable this feature by commenting the following 2 lines or&#xD;&#xA;		# - use Apache >= 2.3.9 and replace all L flags by END flags and remove the&#xD;&#xA;		#   following RewriteCond (best solution)&#xD;&#xA;		RewriteCond %{ENV:REDIRECT_STATUS} ^$&#xD;&#xA;		RewriteRule ^app\.php(?:/(.*)|$) %{ENV:BASE}/$1 [R=301,L]&#xD;&#xA;		# If the requested filename exists, simply serve it.&#xD;&#xA;		# We only want to let Apache serve files and not directories.&#xD;&#xA;		RewriteCond %{REQUEST_FILENAME} -f&#xD;&#xA;		RewriteRule ^ - [L]&#xD;&#xA;		# Rewrite all other queries to the front controller.&#xD;&#xA;		RewriteRule ^ %{ENV:BASE}/app.php [L]&#xD;&#xA;	</IfModule>&#xD;&#xA;	<IfModule !mod_rewrite.c>&#xD;&#xA;		<IfModule mod_alias.c>&#xD;&#xA;			# When mod_rewrite is not available, we instruct a temporary redirect of&#xD;&#xA;			# the start page to the front controller explicitly so that the website&#xD;&#xA;			# and the generated links can still be used.&#xD;&#xA;			RedirectMatch 302 ^/$ /app.php/&#xD;&#xA;			# RedirectTemp cannot be used instead&#xD;&#xA;		</IfModule>&#xD;&#xA;	</IfModule>"
