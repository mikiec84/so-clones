"Content"
"    #include <beast/websocket.hpp>&#xD;&#xA;    #include <beast/buffers_debug.hpp>&#xD;&#xA;    #include <boost/asio.hpp>&#xD;&#xA;    #include <iostream>&#xD;&#xA;    #include <string>&#xD;&#xA;    &#xD;&#xA;    int main()&#xD;&#xA;    {&#xD;&#xA;        // Normal boost::asio setup&#xD;&#xA;        std::string const host = """"echo.websocket.org"""";&#xD;&#xA;        boost::asio::io_service ios;&#xD;&#xA;        boost::asio::ip::tcp::resolver r(ios);&#xD;&#xA;        boost::asio::ip::tcp::socket sock(ios);&#xD;&#xA;        boost::asio::connect(sock,&#xD;&#xA;            r.resolve(boost::asio::ip::tcp::resolver::query{host, """"80""""}));&#xD;&#xA;    &#xD;&#xA;        using namespace beast::websocket;&#xD;&#xA;    &#xD;&#xA;        // WebSocket connect and send message using beast&#xD;&#xA;        stream<boost::asio::ip::tcp::socket&> ws(sock);&#xD;&#xA;        ws.handshake(host, """"/"""");&#xD;&#xA;        ws.write(boost::asio::buffer(""""Hello, world!""""));&#xD;&#xA;    &#xD;&#xA;        // Receive WebSocket message, print and close using beast&#xD;&#xA;        beast::streambuf sb;&#xD;&#xA;        opcode op;&#xD;&#xA;        ws.read(op, sb);&#xD;&#xA;        ws.close(close_code::normal);&#xD;&#xA;        std::cout <<&#xD;&#xA;            beast::debug::buffers_to_string(sb.data()) << """"\n"""";&#xD;&#xA;    }"
