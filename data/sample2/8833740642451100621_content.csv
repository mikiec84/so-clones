"Content"
"    public class RoundedImageView extends ImageView {&#xD;&#xA;	public RoundedImageView(Context context) {&#xD;&#xA;		super(context);&#xD;&#xA;		// TODO Auto-generated constructor stub&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;    public RoundedImageView(Context context, AttributeSet attrs) {&#xD;&#xA;        super(context, attrs);&#xD;&#xA;    }&#xD;&#xA;    public RoundedImageView(Context context, AttributeSet attrs, int defStyle) {&#xD;&#xA;        super(context, attrs, defStyle);&#xD;&#xA;    }&#xD;&#xA;	@Override&#xD;&#xA;	protected void onDraw(Canvas canvas) {&#xD;&#xA;		&#xD;&#xA;		Drawable drawable = getDrawable();&#xD;&#xA;		&#xD;&#xA;        if (drawable == null) {&#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;        if (getWidth() == 0 || getHeight() == 0) {&#xD;&#xA;            return; &#xD;&#xA;        }&#xD;&#xA;		Bitmap b =  ((BitmapDrawable)drawable).getBitmap() ;&#xD;&#xA;		Bitmap bitmap = b.copy(Bitmap.Config.ARGB_8888, true);&#xD;&#xA;		int w = getWidth(), h = getHeight();&#xD;&#xA;		Bitmap roundBitmap =  getCroppedBitmap(bitmap, w);&#xD;&#xA;		canvas.drawBitmap(roundBitmap, 0,0, null);&#xD;&#xA;		&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	public static Bitmap getCroppedBitmap(Bitmap bmp, int radius) {&#xD;&#xA;		Bitmap sbmp;&#xD;&#xA;		if(bmp.getWidth() != radius || bmp.getHeight() != radius)&#xD;&#xA;			sbmp = Bitmap.createScaledBitmap(bmp, radius, radius, false);&#xD;&#xA;		else&#xD;&#xA;			sbmp = bmp;&#xD;&#xA;		Bitmap output = Bitmap.createBitmap(sbmp.getWidth(),&#xD;&#xA;				sbmp.getHeight(), Config.ARGB_8888);&#xD;&#xA;		Canvas canvas = new Canvas(output);&#xD;&#xA;		final int color = 0xffa19774;&#xD;&#xA;		final Paint paint = new Paint();&#xD;&#xA;		final Rect rect = new Rect(0, 0, sbmp.getWidth(), sbmp.getHeight());&#xD;&#xA;		paint.setAntiAlias(true);&#xD;&#xA;		paint.setFilterBitmap(true);&#xD;&#xA;		paint.setDither(true);&#xD;&#xA;		canvas.drawARGB(0, 0, 0, 0);&#xD;&#xA;		paint.setColor(Color.parseColor(""""#BAB399""""));&#xD;&#xA;		canvas.drawCircle(sbmp.getWidth() / 2+0.7f, sbmp.getHeight() / 2+0.7f,&#xD;&#xA;				sbmp.getWidth() / 2+0.1f, paint);&#xD;&#xA;		paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));&#xD;&#xA;		canvas.drawBitmap(sbmp, rect, rect, paint);&#xD;&#xA;		&#xD;&#xA;				return output;&#xD;&#xA;	}&#xD;&#xA;    }"
