"Content"
"    <?php&#xD;&#xA;     &#xD;&#xA;    /*&#xD;&#xA;    * File: SimpleImage.php&#xD;&#xA;    * Author: Simon Jarvis&#xD;&#xA;    * Copyright: 2006 Simon Jarvis&#xD;&#xA;    * Date: 08/11/06&#xD;&#xA;    * Link: http://www.white-hat-web-design.co.uk/articles/php-image-resizing.php&#xD;&#xA;    *&#xD;&#xA;    * This program is free software; you can redistribute it and/or&#xD;&#xA;    * modify it under the terms of the GNU General Public License&#xD;&#xA;    * as published by the Free Software Foundation; either version 2&#xD;&#xA;    * of the License, or (at your option) any later version.&#xD;&#xA;    *&#xD;&#xA;    * This program is distributed in the hope that it will be useful,&#xD;&#xA;    * but WITHOUT ANY WARRANTY; without even the implied warranty of&#xD;&#xA;    * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the&#xD;&#xA;    * GNU General Public License for more details:&#xD;&#xA;    * http://www.gnu.org/licenses/gpl.html&#xD;&#xA;    *&#xD;&#xA;    */&#xD;&#xA;     &#xD;&#xA;    class SimpleImage {&#xD;&#xA;     &#xD;&#xA;       var $image;&#xD;&#xA;       var $image_type;&#xD;&#xA;     &#xD;&#xA;       function load($filename) {&#xD;&#xA;     &#xD;&#xA;          $image_info = getimagesize($filename);&#xD;&#xA;          $this->image_type = $image_info[2];&#xD;&#xA;          if( $this->image_type == IMAGETYPE_JPEG ) {&#xD;&#xA;     &#xD;&#xA;             $this->image = imagecreatefromjpeg($filename);&#xD;&#xA;          } elseif( $this->image_type == IMAGETYPE_GIF ) {&#xD;&#xA;     &#xD;&#xA;             $this->image = imagecreatefromgif($filename);&#xD;&#xA;          } elseif( $this->image_type == IMAGETYPE_PNG ) {&#xD;&#xA;     &#xD;&#xA;             $this->image = imagecreatefrompng($filename);&#xD;&#xA;          }&#xD;&#xA;       }&#xD;&#xA;       function save($filename, $image_type=IMAGETYPE_JPEG, $compression=75, $permissions=null) {&#xD;&#xA;     &#xD;&#xA;          if( $image_type == IMAGETYPE_JPEG ) {&#xD;&#xA;             imagejpeg($this->image,$filename,$compression);&#xD;&#xA;          } elseif( $image_type == IMAGETYPE_GIF ) {&#xD;&#xA;     &#xD;&#xA;             imagegif($this->image,$filename);&#xD;&#xA;          } elseif( $image_type == IMAGETYPE_PNG ) {&#xD;&#xA;     &#xD;&#xA;             imagepng($this->image,$filename);&#xD;&#xA;          }&#xD;&#xA;          if( $permissions != null) {&#xD;&#xA;     &#xD;&#xA;             chmod($filename,$permissions);&#xD;&#xA;          }&#xD;&#xA;       }&#xD;&#xA;       function output($image_type=IMAGETYPE_JPEG) {&#xD;&#xA;     &#xD;&#xA;          if( $image_type == IMAGETYPE_JPEG ) {&#xD;&#xA;             imagejpeg($this->image);&#xD;&#xA;          } elseif( $image_type == IMAGETYPE_GIF ) {&#xD;&#xA;     &#xD;&#xA;             imagegif($this->image);&#xD;&#xA;          } elseif( $image_type == IMAGETYPE_PNG ) {&#xD;&#xA;     &#xD;&#xA;             imagepng($this->image);&#xD;&#xA;          }&#xD;&#xA;       }&#xD;&#xA;       function getWidth() {&#xD;&#xA;     &#xD;&#xA;          return imagesx($this->image);&#xD;&#xA;       }&#xD;&#xA;       function getHeight() {&#xD;&#xA;     &#xD;&#xA;          return imagesy($this->image);&#xD;&#xA;       }&#xD;&#xA;       function resizeToHeight($height) {&#xD;&#xA;     &#xD;&#xA;          $ratio = $height / $this->getHeight();&#xD;&#xA;          $width = $this->getWidth() * $ratio;&#xD;&#xA;          $this->resize($width,$height);&#xD;&#xA;       }&#xD;&#xA;     &#xD;&#xA;       function resizeToWidth($width) {&#xD;&#xA;          $ratio = $width / $this->getWidth();&#xD;&#xA;          $height = $this->getheight() * $ratio;&#xD;&#xA;          $this->resize($width,$height);&#xD;&#xA;       }&#xD;&#xA;     &#xD;&#xA;       function scale($scale) {&#xD;&#xA;          $width = $this->getWidth() * $scale/100;&#xD;&#xA;          $height = $this->getheight() * $scale/100;&#xD;&#xA;          $this->resize($width,$height);&#xD;&#xA;       }&#xD;&#xA;     &#xD;&#xA;       function resize($width,$height) {&#xD;&#xA;          $new_image = imagecreatetruecolor($width, $height);&#xD;&#xA;          imagecopyresampled($new_image, $this->image, 0, 0, 0, 0, $width, $height, $this->getWidth(), $this->getHeight());&#xD;&#xA;          $this->image = $new_image;&#xD;&#xA;       }      &#xD;&#xA;     &#xD;&#xA;    }&#xD;&#xA;    ?>"
