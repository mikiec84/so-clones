"Content"
"    <?php&#xD;&#xA;    $descriptorspec = array(&#xD;&#xA;       0 => array(""""pipe"""", """"r""""),  // stdin is a pipe that the child will read from&#xD;&#xA;       1 => array(""""pipe"""", """"w""""),  // stdout is a pipe that the child will write to&#xD;&#xA;       2 => array(""""file"""", """"/tmp/error-output.txt"""", """"a"""") // stderr is a file to write to&#xD;&#xA;    );&#xD;&#xA;    &#xD;&#xA;    $cwd = '/tmp';&#xD;&#xA;    $env = array('some_option' => 'aeiou');&#xD;&#xA;    &#xD;&#xA;    $process = proc_open('php', $descriptorspec, $pipes, $cwd, $env);&#xD;&#xA;    &#xD;&#xA;    if (is_resource($process)) {&#xD;&#xA;        // $pipes now looks like this:&#xD;&#xA;        // 0 => writeable handle connected to child stdin&#xD;&#xA;        // 1 => readable handle connected to child stdout&#xD;&#xA;        // Any error output will be appended to /tmp/error-output.txt&#xD;&#xA;    &#xD;&#xA;        fwrite($pipes[0], '<?php print_r($_ENV); ?>');&#xD;&#xA;        fclose($pipes[0]);&#xD;&#xA;    &#xD;&#xA;        echo stream_get_contents($pipes[1]);&#xD;&#xA;        fclose($pipes[1]);&#xD;&#xA;    &#xD;&#xA;        // It is important that you close any pipes before calling&#xD;&#xA;        // proc_close in order to avoid a deadlock&#xD;&#xA;        $return_value = proc_close($process);&#xD;&#xA;    &#xD;&#xA;        echo """"command returned $return_value\n"""";&#xD;&#xA;    }&#xD;&#xA;    ?>"
