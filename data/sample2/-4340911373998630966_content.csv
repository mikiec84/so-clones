"Content"
"	import java.io.BufferedReader;&#xD;&#xA;	import java.io.IOException;&#xD;&#xA;	import java.io.InputStreamReader;&#xD;&#xA;	import java.net.URI;&#xD;&#xA;	import java.util.ArrayList;&#xD;&#xA;	import org.apache.http.HttpResponse;&#xD;&#xA;	import org.apache.http.NameValuePair;&#xD;&#xA;	import org.apache.http.client.HttpClient;&#xD;&#xA;	import org.apache.http.client.entity.UrlEncodedFormEntity;&#xD;&#xA;	import org.apache.http.client.methods.HttpGet;&#xD;&#xA;	import org.apache.http.client.methods.HttpPost;&#xD;&#xA;	import org.apache.http.conn.params.ConnManagerParams;&#xD;&#xA;	import org.apache.http.impl.client.DefaultHttpClient;&#xD;&#xA;	import org.apache.http.params.HttpConnectionParams;&#xD;&#xA;	import org.apache.http.params.HttpParams;&#xD;&#xA;	public class SimpleHttpClient {&#xD;&#xA;	 /** The time it takes for our client to timeout */&#xD;&#xA;	    public static final int HTTP_TIMEOUT = 30 * 1000; // milliseconds&#xD;&#xA;	    /** Single instance of our HttpClient */&#xD;&#xA;	    private static HttpClient mHttpClient;&#xD;&#xA;	    /**&#xD;&#xA;	     * Get our single instance of our HttpClient object.&#xD;&#xA;	     *&#xD;&#xA;	     * @return an HttpClient object with connection parameters set&#xD;&#xA;	     */&#xD;&#xA;	    private static HttpClient getHttpClient() {&#xD;&#xA;		if (mHttpClient == null) {&#xD;&#xA;		    mHttpClient = new DefaultHttpClient();&#xD;&#xA;		    final HttpParams params = mHttpClient.getParams();&#xD;&#xA;		    HttpConnectionParams.setConnectionTimeout(params, HTTP_TIMEOUT);&#xD;&#xA;		    HttpConnectionParams.setSoTimeout(params, HTTP_TIMEOUT);&#xD;&#xA;		    ConnManagerParams.setTimeout(params, HTTP_TIMEOUT);&#xD;&#xA;		}&#xD;&#xA;		return mHttpClient;&#xD;&#xA;	    }&#xD;&#xA;	    public static String executeHttpPost(String url, ArrayList<NameValuePair> postParameters) throws Exception {&#xD;&#xA;		BufferedReader in = null;&#xD;&#xA;		try {&#xD;&#xA;		    HttpClient client = getHttpClient();&#xD;&#xA;		    HttpPost request = new HttpPost(url);&#xD;&#xA;		    UrlEncodedFormEntity formEntity = new UrlEncodedFormEntity(postParameters);&#xD;&#xA;		    request.setEntity(formEntity);&#xD;&#xA;		    HttpResponse response = client.execute(request);&#xD;&#xA;		    in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));&#xD;&#xA;		    StringBuffer sb = new StringBuffer("""""""");&#xD;&#xA;		    String line = """""""";&#xD;&#xA;		    String NL = System.getProperty(""""line.separator"""");&#xD;&#xA;		    while ((line = in.readLine()) != null) {&#xD;&#xA;			sb.append(line + NL);&#xD;&#xA;		    }&#xD;&#xA;		    in.close();&#xD;&#xA;		    String result = sb.toString();&#xD;&#xA;		    return result;&#xD;&#xA;		}&#xD;&#xA;		finally {&#xD;&#xA;		    if (in != null) {&#xD;&#xA;			try {&#xD;&#xA;			    in.close();&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;			    e.printStackTrace();&#xD;&#xA;			}&#xD;&#xA;		    }&#xD;&#xA;		}&#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	    public static String executeHttpatch(String url, ArrayList<NameValuePair> postParameters) throws Exception {&#xD;&#xA;		BufferedReader in = null;&#xD;&#xA;		try {&#xD;&#xA;		    HttpClient client = getHttpClient();&#xD;&#xA;		    HttpPost request = new HttpPost(url);&#xD;&#xA;		    UrlEncodedFormEntity formEntity = new UrlEncodedFormEntity(postParameters);&#xD;&#xA;		    request.setEntity(formEntity);&#xD;&#xA;		    HttpResponse response = client.execute(request);&#xD;&#xA;		    in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));&#xD;&#xA;		    StringBuffer sb = new StringBuffer("""""""");&#xD;&#xA;		    String line = """""""";&#xD;&#xA;		    String NL = System.getProperty(""""line.separator"""");&#xD;&#xA;		    while ((line = in.readLine()) != null) {&#xD;&#xA;			sb.append(line + NL);&#xD;&#xA;		    }&#xD;&#xA;		    in.close();&#xD;&#xA;		    String result = sb.toString();&#xD;&#xA;		    return result;&#xD;&#xA;		}&#xD;&#xA;		finally {&#xD;&#xA;		    if (in != null) {&#xD;&#xA;			try {&#xD;&#xA;			    in.close();&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;			    e.printStackTrace();&#xD;&#xA;			}&#xD;&#xA;		    }&#xD;&#xA;		}&#xD;&#xA;	    }&#xD;&#xA;	    /**&#xD;&#xA;	     * Performs an HTTP GET request to the specified url.&#xD;&#xA;	     *&#xD;&#xA;	     * @param url The web address to post the request to&#xD;&#xA;	     * @return The result of the request&#xD;&#xA;	     * @throws Exception&#xD;&#xA;	     */&#xD;&#xA;	    public static String executeHttpGet(String url) throws Exception {&#xD;&#xA;		BufferedReader in = null;&#xD;&#xA;		try {&#xD;&#xA;		    HttpClient client = getHttpClient();&#xD;&#xA;		    HttpGet request = new HttpGet();&#xD;&#xA;		    request.setURI(new URI(url));&#xD;&#xA;		    HttpResponse response = client.execute(request);&#xD;&#xA;		    in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));&#xD;&#xA;		    StringBuffer sb = new StringBuffer("""""""");&#xD;&#xA;		    String line = """""""";&#xD;&#xA;		    String NL = System.getProperty(""""line.separator"""");&#xD;&#xA;		    while ((line = in.readLine()) != null) {&#xD;&#xA;			sb.append(line + NL);&#xD;&#xA;		    }&#xD;&#xA;		    in.close();&#xD;&#xA;		    String result = sb.toString();&#xD;&#xA;		    return result;&#xD;&#xA;		}&#xD;&#xA;		finally {&#xD;&#xA;		    if (in != null) {&#xD;&#xA;			try {&#xD;&#xA;			    in.close();&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;			    e.printStackTrace();&#xD;&#xA;			}&#xD;&#xA;		    }&#xD;&#xA;		}&#xD;&#xA;	    }&#xD;&#xA;	}"
