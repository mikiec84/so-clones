"Content"
"    #!/usr/bin/env python&#xD;&#xA;    # -*- coding: utf-8 -*-&#xD;&#xA;    &#xD;&#xA;    import os&#xD;&#xA;    import sys&#xD;&#xA;    import select&#xD;&#xA;    import termios&#xD;&#xA;    import tty&#xD;&#xA;    import pty&#xD;&#xA;    from subprocess import Popen&#xD;&#xA;    &#xD;&#xA;    command = 'bash'&#xD;&#xA;    # command = 'docker run -it --rm centos /bin/bash'.split()&#xD;&#xA;    &#xD;&#xA;    # save original tty setting then set it to raw mode&#xD;&#xA;    old_tty = termios.tcgetattr(sys.stdin)&#xD;&#xA;    tty.setraw(sys.stdin.fileno())&#xD;&#xA;    &#xD;&#xA;    # open pseudo-terminal to interact with subprocess&#xD;&#xA;    master_fd, slave_fd = pty.openpty()&#xD;&#xA;    &#xD;&#xA;    # use os.setsid() make it run in a new process group, or bash job control will not be enabled&#xD;&#xA;    p = Popen(command,&#xD;&#xA;              preexec_fn=os.setsid,&#xD;&#xA;              stdin=slave_fd,&#xD;&#xA;              stdout=slave_fd,&#xD;&#xA;              stderr=slave_fd,&#xD;&#xA;              universal_newlines=True)&#xD;&#xA;    &#xD;&#xA;    while p.poll() is None:&#xD;&#xA;        r, w, e = select.select([sys.stdin, master_fd], [], [])&#xD;&#xA;        if sys.stdin in r:&#xD;&#xA;            d = os.read(sys.stdin.fileno(), 10240)&#xD;&#xA;            os.write(master_fd, d)&#xD;&#xA;        elif master_fd in r:&#xD;&#xA;            o = os.read(master_fd, 10240)&#xD;&#xA;            if o:&#xD;&#xA;                os.write(sys.stdout.fileno(), o)&#xD;&#xA;    &#xD;&#xA;    # restore tty settings back&#xD;&#xA;    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, old_tty)"
