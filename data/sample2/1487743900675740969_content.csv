"Content"
"    using System;&#xD;&#xA;    using System.Web.Mvc;&#xD;&#xA;    &#xD;&#xA;    using Google.Apis.Auth.OAuth2;&#xD;&#xA;    using Google.Apis.Auth.OAuth2.Flows;&#xD;&#xA;    using Google.Apis.Auth.OAuth2.Mvc;&#xD;&#xA;    using Google.Apis.Drive.v2;&#xD;&#xA;    using Google.Apis.Util.Store;&#xD;&#xA;    &#xD;&#xA;    namespace Google.Apis.Sample.MVC4&#xD;&#xA;    {&#xD;&#xA;        public class AppFlowMetadata : FlowMetadata&#xD;&#xA;        {&#xD;&#xA;            private static readonly IAuthorizationCodeFlow flow =&#xD;&#xA;                new GoogleAuthorizationCodeFlow(new GoogleAuthorizationCodeFlow.Initializer&#xD;&#xA;                    {&#xD;&#xA;                        ClientSecrets = new ClientSecrets&#xD;&#xA;                        {&#xD;&#xA;                            ClientId = """"PUT_CLIENT_ID_HERE"""",&#xD;&#xA;                            ClientSecret = """"PUT_CLIENT_SECRET_HERE""""&#xD;&#xA;                        },&#xD;&#xA;                        Scopes = new[] { DriveService.Scope.Drive },&#xD;&#xA;                        DataStore = new FileDataStore(""""Drive.Api.Auth.Store"""")&#xD;&#xA;                    });&#xD;&#xA;    &#xD;&#xA;            public override string GetUserId(Controller controller)&#xD;&#xA;            {&#xD;&#xA;                // In this sample we use the session to store the user identifiers.&#xD;&#xA;                // That's not the best practice, because you should have a logic to identify&#xD;&#xA;                // a user. You might want to use """"OpenID Connect"""".&#xD;&#xA;                // You can read more about the protocol in the following link:&#xD;&#xA;                // https://developers.google.com/accounts/docs/OAuth2Login.&#xD;&#xA;                var user = controller.Session[""""user""""];&#xD;&#xA;                if (user == null)&#xD;&#xA;                {&#xD;&#xA;                    user = Guid.NewGuid();&#xD;&#xA;                    controller.Session[""""user""""] = user;&#xD;&#xA;                }&#xD;&#xA;                return user.ToString();&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            public override IAuthorizationCodeFlow Flow&#xD;&#xA;            {&#xD;&#xA;                get { return flow; }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
