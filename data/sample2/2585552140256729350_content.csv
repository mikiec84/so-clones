"Content"
"    import UIKit&#xD;&#xA;    import PushKit&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    class AppDelegate: UIResponder, UIApplicationDelegate,PKPushRegistryDelegate{&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        let types: UIRemoteNotificationType = [.Alert, .Badge, .Sound]&#xD;&#xA;        application.registerForRemoteNotificationTypes(types)&#xD;&#xA;    &#xD;&#xA;    	self. PushKitRegistration()&#xD;&#xA;    &#xD;&#xA;        return true&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    //MARK: - PushKitRegistration&#xD;&#xA;    &#xD;&#xA;    func PushKitRegistration()&#xD;&#xA;    {&#xD;&#xA;    &#xD;&#xA;        let mainQueue = dispatch_get_main_queue()&#xD;&#xA;        // Create a push registry object&#xD;&#xA;        if #available(iOS 8.0, *) {&#xD;&#xA;    &#xD;&#xA;            let voipRegistry: PKPushRegistry = PKPushRegistry(queue: mainQueue)&#xD;&#xA;    &#xD;&#xA;            // Set the registry's delegate to self&#xD;&#xA;    &#xD;&#xA;            voipRegistry.delegate = self&#xD;&#xA;    &#xD;&#xA;            // Set the push type to VoIP&#xD;&#xA;    &#xD;&#xA;            voipRegistry.desiredPushTypes = [PKPushTypeVoIP]&#xD;&#xA;    &#xD;&#xA;        } else {&#xD;&#xA;            // Fallback on earlier versions&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    @available(iOS 8.0, *)&#xD;&#xA;    func pushRegistry(registry: PKPushRegistry!, didUpdatePushCredentials credentials: PKPushCredentials!, forType type: String!) {&#xD;&#xA;        // Register VoIP push token (a property of PKPushCredentials) with server&#xD;&#xA;    &#xD;&#xA;        let hexString : String = UnsafeBufferPointer<UInt8>(start: UnsafePointer(credentials.token.bytes),&#xD;&#xA;            count: credentials.token.length).map { String(format: """"%02x"""", $0) }.joinWithSeparator("""""""")&#xD;&#xA;    &#xD;&#xA;        print(hexString)&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    @available(iOS 8.0, *)&#xD;&#xA;    func pushRegistry(registry: PKPushRegistry!, didReceiveIncomingPushWithPayload payload: PKPushPayload!, forType type: String!) {&#xD;&#xA;        // Process the received push&#xD;&#xA;        // From here you have to schedule your local notification&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    }"
