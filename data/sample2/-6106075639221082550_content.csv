"Content"
"    -(UIImage*) resizedImage:(UIImage *)inImage: (CGRect) thumbRect&#xD;&#xA;    {&#xD;&#xA;	CGImageRef			imageRef = [inImage CGImage];&#xD;&#xA;	CGImageAlphaInfo	alphaInfo = CGImageGetAlphaInfo(imageRef);&#xD;&#xA;	&#xD;&#xA;	// There's a wierdness with kCGImageAlphaNone and CGBitmapContextCreate&#xD;&#xA;	// see Supported Pixel Formats in the Quartz 2D Programming Guide&#xD;&#xA;	// Creating a Bitmap Graphics Context section&#xD;&#xA;	// only RGB 8 bit images with alpha of kCGImageAlphaNoneSkipFirst, kCGImageAlphaNoneSkipLast, kCGImageAlphaPremultipliedFirst,&#xD;&#xA;	// and kCGImageAlphaPremultipliedLast, with a few other oddball image kinds are supported&#xD;&#xA;	// The images on input here are likely to be png or jpeg files&#xD;&#xA;	if (alphaInfo == kCGImageAlphaNone)&#xD;&#xA;		alphaInfo = kCGImageAlphaNoneSkipLast;&#xD;&#xA;    &#xD;&#xA;	// Build a bitmap context that's the size of the thumbRect&#xD;&#xA;	CGContextRef bitmap = CGBitmapContextCreate(&#xD;&#xA;                                                NULL,&#xD;&#xA;                                                thumbRect.size.width,		// width&#xD;&#xA;                                                thumbRect.size.height,		// height&#xD;&#xA;                                                CGImageGetBitsPerComponent(imageRef),	// really needs to always be 8&#xD;&#xA;                                                4 * thumbRect.size.width,	// rowbytes&#xD;&#xA;                                                CGImageGetColorSpace(imageRef),&#xD;&#xA;                                                alphaInfo&#xD;&#xA;                                                );&#xD;&#xA;    &#xD;&#xA;	// Draw into the context, this scales the image&#xD;&#xA;	CGContextDrawImage(bitmap, thumbRect, imageRef);&#xD;&#xA;    &#xD;&#xA;	// Get an image from the context and a UIImage&#xD;&#xA;	CGImageRef	ref = CGBitmapContextCreateImage(bitmap);&#xD;&#xA;	UIImage*	result = [UIImage imageWithCGImage:ref];&#xD;&#xA;    &#xD;&#xA;	CGContextRelease(bitmap);	// ok if NULL&#xD;&#xA;	CGImageRelease(ref);&#xD;&#xA;    &#xD;&#xA;	return result;&#xD;&#xA;    }"
