"Content"
"     public class CustomAdapter extends BaseAdapter {&#xD;&#xA;        private final LayoutInflater inflater;&#xD;&#xA;        private final Context context;&#xD;&#xA;        private List<ModelPooja> listData;&#xD;&#xA;        public CustomAdapter(Context mainActivity, List<ModelPooja> listData) {&#xD;&#xA;            context = mainActivity;&#xD;&#xA;            this.listData = listData;&#xD;&#xA;            inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public int getCount() {&#xD;&#xA;            return listData.size();&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public Object getItem(int position) {&#xD;&#xA;            return listData.get(position);&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public long getItemId(int position) {&#xD;&#xA;            return 0;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public View getView(final int position, View convertView, ViewGroup parent) {&#xD;&#xA;            final ViewHolder holder;&#xD;&#xA;            if (convertView == null) {&#xD;&#xA;                holder = new ViewHolder();&#xD;&#xA;                convertView = inflater.inflate(R.layout.list_item_poojaselection, null);&#xD;&#xA;                holder.tv = (TextView) convertView.findViewById(R.id.list_item_poojaname);&#xD;&#xA;                holder.checks = (CheckBox) convertView.findViewById(R.id.list_item_poojacheck);&#xD;&#xA;                convertView.setTag(holder);&#xD;&#xA;            }else {&#xD;&#xA;                holder = (ViewHolder) convertView.getTag();&#xD;&#xA;            }&#xD;&#xA;            holder.checks.setOnCheckedChangeListener(null);&#xD;&#xA;            holder.checks.setFocusable(false);&#xD;&#xA;            if (listData.get(position).isselected) {&#xD;&#xA;                holder.checks.setChecked(true);&#xD;&#xA;            } else {&#xD;&#xA;                holder.checks.setChecked(false);&#xD;&#xA;            }&#xD;&#xA;            holder.checks.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {&#xD;&#xA;                @Override&#xD;&#xA;                public void onCheckedChanged(CompoundButton cb, boolean b) {&#xD;&#xA;                    if (checkMaxLimit()) {&#xD;&#xA;                        if (listData.get(position).isselected && b) {&#xD;&#xA;                            holder.checks.setChecked(false);&#xD;&#xA;                            listData.get(position).isselected = false;&#xD;&#xA;                        } else {&#xD;&#xA;                            holder.checks.setChecked(false);&#xD;&#xA;                            listData.get(position).isselected = false;&#xD;&#xA;                            Toast.makeText(context, """"Max limit reached"""", Toast.LENGTH_SHORT).show();&#xD;&#xA;                        }&#xD;&#xA;                    } else {&#xD;&#xA;                        if (b) {&#xD;&#xA;                            listData.get(position).isselected = true;&#xD;&#xA;                        } else {&#xD;&#xA;                            listData.get(position).isselected = false;&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            holder.tv.setText(listData.get(position).getPOOJA_LISTING_NAME());&#xD;&#xA;            return convertView;&#xD;&#xA;        }&#xD;&#xA;        public boolean checkMaxLimit() {&#xD;&#xA;            int countermax = 0;&#xD;&#xA;            for(ModelPooja item : listData){&#xD;&#xA;                if(item.isselected){&#xD;&#xA;                    countermax++;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            return countermax >= 5;&#xD;&#xA;        }&#xD;&#xA;        public class ViewHolder {&#xD;&#xA;            TextView tv;&#xD;&#xA;            public CheckBox checks;&#xD;&#xA;        }&#xD;&#xA;    }"
