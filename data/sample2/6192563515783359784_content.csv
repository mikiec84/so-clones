"Content"
"        Rails.application.configure do&#xD;&#xA;          # Settings specified here will take precedence over those in config/application.rb.&#xD;&#xA;          # Code is not reloaded between requests.&#xD;&#xA;          config.cache_classes = true&#xD;&#xA;          # Eager load code on boot. This eager loads most of Rails and&#xD;&#xA;          # your application in memory, allowing both threaded web servers&#xD;&#xA;          # and those relying on copy on write to perform better.&#xD;&#xA;          # Rake tasks automatically ignore this option for performance.&#xD;&#xA;          config.eager_load = true&#xD;&#xA;          # Full error reports are disabled and caching is turned on.&#xD;&#xA;          config.consider_all_requests_local       = false&#xD;&#xA;          config.action_controller.perform_caching = true&#xD;&#xA;          # Enable Rack::Cache to put a simple HTTP cache in front of your application&#xD;&#xA;          # Add `rack-cache` to your Gemfile before enabling this.&#xD;&#xA;          # For large-scale production use, consider using a caching reverse proxy like&#xD;&#xA;          # NGINX, varnish or squid.&#xD;&#xA;          # config.action_dispatch.rack_cache = true&#xD;&#xA;          # Disable serving static files from the `/public` folder by default since&#xD;&#xA;          # Apache or NGINX already handles this.&#xD;&#xA;          config.serve_static_files = ENV['RAILS_SERVE_STATIC_FILES'].present?&#xD;&#xA;          # Compress JavaScripts and CSS.&#xD;&#xA;          config.assets.js_compressor = :uglifier&#xD;&#xA;          # config.assets.css_compressor = :sass&#xD;&#xA;          # Do not fallback to assets pipeline if a precompiled asset is missed.&#xD;&#xA;          config.assets.compile = false&#xD;&#xA;          # Asset digests allow you to set far-future HTTP expiration dates on all assets,&#xD;&#xA;          # yet still be able to expire them through the digest params.&#xD;&#xA;          config.assets.digest = true&#xD;&#xA;          # `config.assets.precompile` and `config.assets.version` have moved to config/initializers/assets.rb&#xD;&#xA;          # Specifies the header that your server uses for sending files.&#xD;&#xA;          # config.action_dispatch.x_sendfile_header = 'X-Sendfile' # for Apache&#xD;&#xA;          # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for NGINX&#xD;&#xA;          # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.&#xD;&#xA;          # config.force_ssl = true&#xD;&#xA;          # Use the lowest log level to ensure availability of diagnostic information&#xD;&#xA;          # when problems arise.&#xD;&#xA;          config.log_level = :debug&#xD;&#xA;          # Prepend all log lines with the following tags.&#xD;&#xA;          # config.log_tags = [ :subdomain, :uuid ]&#xD;&#xA;          # Use a different logger for distributed setups.&#xD;&#xA;          # config.logger = ActiveSupport::TaggedLogging.new(SyslogLogger.new)&#xD;&#xA;          # Use a different cache store in production.&#xD;&#xA;          # config.cache_store = :mem_cache_store&#xD;&#xA;          # Enable serving of images, stylesheets, and JavaScripts from an asset server.&#xD;&#xA;          # config.action_controller.asset_host = 'http://assets.example.com'&#xD;&#xA;          # Ignore bad email addresses and do not raise email delivery errors.&#xD;&#xA;          # Set this to true and configure the email server for immediate delivery to raise delivery errors.&#xD;&#xA;          # config.action_mailer.raise_delivery_errors = false&#xD;&#xA;          # Enable locale fallbacks for I18n (makes lookups for any locale fall back to&#xD;&#xA;          # the I18n.default_locale when a translation cannot be found).&#xD;&#xA;          config.i18n.fallbacks = true&#xD;&#xA;          # Send deprecation notices to registered listeners.&#xD;&#xA;          config.active_support.deprecation = :notify&#xD;&#xA;          # Use default logging formatter so that PID and timestamp are not suppressed.&#xD;&#xA;          config.log_formatter = ::Logger::Formatter.new&#xD;&#xA;          # Do not dump schema after migrations.&#xD;&#xA;          config.active_record.dump_schema_after_migration = false&#xD;&#xA;        end"
