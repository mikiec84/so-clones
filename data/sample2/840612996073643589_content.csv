"Content"
"    @Override&#xD;&#xA;    public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;     &#xD;&#xA;        ViewHolderItem viewHolder;&#xD;&#xA;         &#xD;&#xA;         &#xD;&#xA;          // The convertView argument is essentially a """"ScrapView"""" as described is Lucas post &#xD;&#xA;          // http://lucasr.org/2012/04/05/performance-tips-for-androids-listview/&#xD;&#xA;          // It will have a non-null value when ListView is asking you recycle the row layout. &#xD;&#xA;          // So, when convertView is not null, you should simply update its contents instead of inflating a new row    layout.&#xD;&#xA;          &#xD;&#xA;        if(convertView==null){&#xD;&#xA;             &#xD;&#xA;            // inflate the layout&#xD;&#xA;            LayoutInflater inflater = ((Activity) mContext).getLayoutInflater();&#xD;&#xA;            convertView = inflater.inflate(layoutResourceId, parent, false);&#xD;&#xA;             &#xD;&#xA;            // well set up the ViewHolder&#xD;&#xA;            viewHolder = new ViewHolderItem();&#xD;&#xA;            viewHolder.textViewItem = (TextView) convertView.findViewById(R.id.textViewItem);&#xD;&#xA;             &#xD;&#xA;            // store the holder with the view.&#xD;&#xA;            convertView.setTag(viewHolder);&#xD;&#xA;             &#xD;&#xA;        }else{&#xD;&#xA;            // we've just avoided calling findViewById() on resource everytime&#xD;&#xA;            // just use the viewHolder&#xD;&#xA;            viewHolder = (ViewHolderItem) convertView.getTag();&#xD;&#xA;        }&#xD;&#xA;         &#xD;&#xA;        // object item based on the position&#xD;&#xA;        ObjectItem objectItem = data[position];&#xD;&#xA;         &#xD;&#xA;        // assign values if the object is not null&#xD;&#xA;        if(objectItem != null) {&#xD;&#xA;            // get the TextView from the ViewHolder and then set the text (item name) and tag (item ID) values&#xD;&#xA;            viewHolder.textViewItem.setText(objectItem.itemName);&#xD;&#xA;            viewHolder.textViewItem.setTag(objectItem.itemId);&#xD;&#xA;        }&#xD;&#xA;         &#xD;&#xA;        return convertView;&#xD;&#xA;         &#xD;&#xA;    }"
