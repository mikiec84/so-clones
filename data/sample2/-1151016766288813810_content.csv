"Content"
"	public class XMLParser {&#xD;&#xA;		// constructor&#xD;&#xA;		public XMLParser() {&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * Getting XML from URL making HTTP request&#xD;&#xA;		 *&#xD;&#xA;		 * @param url string&#xD;&#xA;		 */&#xD;&#xA;		public String getXmlFromUrl(String url) {&#xD;&#xA;			String xml = null;&#xD;&#xA;			try {&#xD;&#xA;				// defaultHttpClient&#xD;&#xA;				DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;				HttpPost httpPost = new HttpPost(url);&#xD;&#xA;				HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;				HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;				xml = EntityUtils.toString(httpEntity);&#xD;&#xA;			} catch (UnsupportedEncodingException e) {&#xD;&#xA;				e.printStackTrace();&#xD;&#xA;			} catch (ClientProtocolException e) {&#xD;&#xA;				e.printStackTrace();&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;				e.printStackTrace();&#xD;&#xA;			}&#xD;&#xA;			// return XML&#xD;&#xA;			return xml;&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * Getting XML DOM element&#xD;&#xA;		 *&#xD;&#xA;		 * @param XML string&#xD;&#xA;		 */&#xD;&#xA;		public Document getDomElement(String xml) {&#xD;&#xA;			Document doc = null;&#xD;&#xA;			DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();&#xD;&#xA;			try {&#xD;&#xA;				DocumentBuilder db = dbf.newDocumentBuilder();&#xD;&#xA;				InputSource is = new InputSource();&#xD;&#xA;				is.setCharacterStream(new StringReader(xml));&#xD;&#xA;				doc = db.parse(is);&#xD;&#xA;			} catch (ParserConfigurationException e) {&#xD;&#xA;				Log.e(""""Error: """", e.getMessage());&#xD;&#xA;				return null;&#xD;&#xA;			} catch (SAXException e) {&#xD;&#xA;				Log.e(""""Error: """", e.getMessage());&#xD;&#xA;				return null;&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;				Log.e(""""Error: """", e.getMessage());&#xD;&#xA;				return null;&#xD;&#xA;			}&#xD;&#xA;			return doc;&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * Getting node value&#xD;&#xA;		 *&#xD;&#xA;		 * @param elem element&#xD;&#xA;		 */&#xD;&#xA;		public final String getElementValue(Node elem) {&#xD;&#xA;			Node child;&#xD;&#xA;			if (elem != null) {&#xD;&#xA;				if (elem.hasChildNodes()) {&#xD;&#xA;					for (child = elem.getFirstChild(); child != null;&#xD;&#xA;							child = child.getNextSibling()) {&#xD;&#xA;						if (child.getNodeType() == Node.TEXT_NODE) {&#xD;&#xA;							return child.getNodeValue();&#xD;&#xA;						}&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;			return """""""";&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * Getting node value&#xD;&#xA;		 *&#xD;&#xA;		 * @param Element node&#xD;&#xA;		 * @param key string&#xD;&#xA;		 */&#xD;&#xA;		public String getValue(Element item, String str) {&#xD;&#xA;			NodeList n = item.getElementsByTagName(str);&#xD;&#xA;			return this.getElementValue(n.item(0));&#xD;&#xA;		}&#xD;&#xA;	}"
