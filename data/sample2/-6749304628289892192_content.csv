"Content"
"    using System;&#xD;&#xA;    using System.Collections.ObjectModel;&#xD;&#xA;    using Microsoft.TeamFoundation.Client; &#xD;&#xA;    using Microsoft.TeamFoundation.Framework.Common;&#xD;&#xA;    using Microsoft.TeamFoundation.Framework.Client;&#xD;&#xA;    &#xD;&#xA;    namespace TfsApplication&#xD;&#xA;    {&#xD;&#xA;        class Program&#xD;&#xA;        {&#xD;&#xA;            static void Main(String[] args)&#xD;&#xA;            {&#xD;&#xA;                // Connect to Team Foundation Server&#xD;&#xA;                //     Server is the name of the server that is running the application tier for Team Foundation.&#xD;&#xA;                //     Port is the port that Team Foundation uses. The default port is 8080.&#xD;&#xA;                //     VDir is the virtual path to the Team Foundation application. The default path is tfs.&#xD;&#xA;                Uri tfsUri = (args.Length < 1) ? &#xD;&#xA;                    new Uri(""""http://Server:Port/VDir"""") : new Uri(args[0]);&#xD;&#xA;    &#xD;&#xA;                TfsConfigurationServer configurationServer =&#xD;&#xA;                    TfsConfigurationServerFactory.GetConfigurationServer(tfsUri);&#xD;&#xA;    &#xD;&#xA;                // Get the catalog of team project collections&#xD;&#xA;                ReadOnlyCollection<CatalogNode> collectionNodes = configurationServer.CatalogNode.QueryChildren(&#xD;&#xA;                    new[] { CatalogResourceTypes.ProjectCollection },&#xD;&#xA;                    false, CatalogQueryOptions.None);&#xD;&#xA;    &#xD;&#xA;                // List the team project collections&#xD;&#xA;                foreach (CatalogNode collectionNode in collectionNodes)&#xD;&#xA;                {&#xD;&#xA;                    // Use the InstanceId property to get the team project collection&#xD;&#xA;                    Guid collectionId = new Guid(collectionNode.Resource.Properties[""""InstanceId""""]);&#xD;&#xA;                    TfsTeamProjectCollection teamProjectCollection = configurationServer.GetTeamProjectCollection(collectionId);&#xD;&#xA;    &#xD;&#xA;                    // Print the name of the team project collection&#xD;&#xA;                    Console.WriteLine(""""Collection: """" + teamProjectCollection.Name);&#xD;&#xA;    &#xD;&#xA;                    // Get a catalog of team projects for the collection&#xD;&#xA;                    ReadOnlyCollection<CatalogNode> projectNodes = collectionNode.QueryChildren(&#xD;&#xA;                        new[] { CatalogResourceTypes.TeamProject },&#xD;&#xA;                        false, CatalogQueryOptions.None);&#xD;&#xA;    &#xD;&#xA;                    // List the team projects in the collection&#xD;&#xA;                    foreach (CatalogNode projectNode in projectNodes)&#xD;&#xA;                    {&#xD;&#xA;                        Console.WriteLine("""" Team Project: """" + projectNode.Resource.DisplayName);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
