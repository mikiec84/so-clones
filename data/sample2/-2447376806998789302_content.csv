"Content"
"    function getInputSelection(el) {&#xD;&#xA;	    var start = 0, end = 0, normalizedValue, range,&#xD;&#xA;	        textInputRange, len, endRange;&#xD;&#xA;	    if (typeof el.selectionStart == """"number"""" && typeof el.selectionEnd == """"number"""") {&#xD;&#xA;	        start = el.selectionStart;&#xD;&#xA;	        end = el.selectionEnd;&#xD;&#xA;	    } else {&#xD;&#xA;	        range = document.selection.createRange();&#xD;&#xA;	        if (range && range.parentElement() == el) {&#xD;&#xA;	            len = el.value.length;&#xD;&#xA;	            normalizedValue = el.value.replace(/\r\n/g, """"\n"""");&#xD;&#xA;	            // Create a working TextRange that lives only in the input&#xD;&#xA;	            textInputRange = el.createTextRange();&#xD;&#xA;	            textInputRange.moveToBookmark(range.getBookmark());&#xD;&#xA;	            // Check if the start and end of the selection are at the very end&#xD;&#xA;	            // of the input, since moveStart/moveEnd doesn't return what we want&#xD;&#xA;	            // in those cases&#xD;&#xA;	            endRange = el.createTextRange();&#xD;&#xA;	            endRange.collapse(false);&#xD;&#xA;	            if (textInputRange.compareEndPoints(""""StartToEnd"""", endRange) > -1) {&#xD;&#xA;	                start = end = len;&#xD;&#xA;	            } else {&#xD;&#xA;	                start = -textInputRange.moveStart(""""character"""", -len);&#xD;&#xA;	                start += normalizedValue.slice(0, start).split(""""\n"""").length - 1;&#xD;&#xA;	                if (textInputRange.compareEndPoints(""""EndToEnd"""", endRange) > -1) {&#xD;&#xA;	                    end = len;&#xD;&#xA;	                } else {&#xD;&#xA;	                    end = -textInputRange.moveEnd(""""character"""", -len);&#xD;&#xA;	                    end += normalizedValue.slice(0, end).split(""""\n"""").length - 1;&#xD;&#xA;	                }&#xD;&#xA;	            }&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;	    return {&#xD;&#xA;	        start: start,&#xD;&#xA;	        end: end&#xD;&#xA;	    };&#xD;&#xA;	}"
