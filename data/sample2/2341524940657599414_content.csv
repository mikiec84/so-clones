"Content"
"	- (NSArray *)runningProcesses {&#xD;&#xA;	    int mib[4] = {CTL_KERN, KERN_PROC, KERN_PROC_ALL, 0};&#xD;&#xA;	    size_t miblen = 4;&#xD;&#xA;	    size_t size;&#xD;&#xA;	    int st = sysctl(mib, miblen, NULL, &size, NULL, 0);&#xD;&#xA;	    struct kinfo_proc * process = NULL;&#xD;&#xA;	    struct kinfo_proc * newprocess = NULL;&#xD;&#xA;	    do {&#xD;&#xA;	        size += size / 10;&#xD;&#xA;	        newprocess = realloc(process, size);&#xD;&#xA;	        if (!newprocess){&#xD;&#xA;	            if (process){&#xD;&#xA;	                free(process);&#xD;&#xA;	            }&#xD;&#xA;	            return nil;&#xD;&#xA;	        }&#xD;&#xA;	        process = newprocess;&#xD;&#xA;	        st = sysctl(mib, miblen, process, &size, NULL, 0);&#xD;&#xA;	    } while (st == -1 && errno == ENOMEM);&#xD;&#xA;	    if (st == 0){&#xD;&#xA;	        if (size % sizeof(struct kinfo_proc) == 0){&#xD;&#xA;	            int nprocess = size / sizeof(struct kinfo_proc);&#xD;&#xA;	            if (nprocess){&#xD;&#xA;	                NSMutableArray * array = [[NSMutableArray alloc] init];&#xD;&#xA;	                for (int i = nprocess - 1; i >= 0; i--){&#xD;&#xA;	                    NSString * processID = [[NSString alloc] initWithFormat:@""""%d"""", process[i].kp_proc.p_pid];&#xD;&#xA;	                    NSString * processName = [[NSString alloc] initWithFormat:@""""%s"""", process[i].kp_proc.p_comm];&#xD;&#xA;	                    NSDictionary * dict = [[NSDictionary alloc] initWithObjects:[NSArray arrayWithObjects:processID, processName, nil] &#xD;&#xA;	                                                                        forKeys:[NSArray arrayWithObjects:@""""ProcessID"""", @""""ProcessName"""", nil]];&#xD;&#xA;	                    [processID release];&#xD;&#xA;	                    [processName release];&#xD;&#xA;	                    [array addObject:dict];&#xD;&#xA;	                    [dict release];&#xD;&#xA;	                }&#xD;&#xA;	                free(process);&#xD;&#xA;	                return [array autorelease];&#xD;&#xA;	            }&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;	    return nil;&#xD;&#xA;	}"
