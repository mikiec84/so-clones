"Content"
"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import java.util.Arrays;&#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.Collections;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.table.*;&#xD;&#xA;    &#xD;&#xA;    public class ItemDeletion extends JPanel&#xD;&#xA;    {&#xD;&#xA;    	private JList<String> list;&#xD;&#xA;    	private JTable table;&#xD;&#xA;    &#xD;&#xA;    	public ItemDeletion()&#xD;&#xA;    	{&#xD;&#xA;    		setLayout( new BorderLayout(5, 5) );&#xD;&#xA;    &#xD;&#xA;    		String[] items =&#xD;&#xA;    		{&#xD;&#xA;    			""""One"""",&#xD;&#xA;    			""""Two"""",&#xD;&#xA;    			""""Three"""",&#xD;&#xA;    			""""Four"""",&#xD;&#xA;    			""""Five"""",&#xD;&#xA;    			""""Six"""",&#xD;&#xA;    			""""Seven"""",&#xD;&#xA;    			""""Eight"""",&#xD;&#xA;    			""""Nine"""",&#xD;&#xA;    			""""Ten""""&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		//  Add the list&#xD;&#xA;    &#xD;&#xA;    		DefaultListModel<String> listModel = new DefaultListModel<String>();&#xD;&#xA;    &#xD;&#xA;    		for (String item: items)&#xD;&#xA;    			listModel.addElement( item );&#xD;&#xA;    &#xD;&#xA;    		list = new JList<String>( listModel );&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    		JButton listDelete = new JButton( """"Delete From List"""" );&#xD;&#xA;    		listDelete.addActionListener( new ActionListener()&#xD;&#xA;    		{&#xD;&#xA;    			@Override&#xD;&#xA;    			public void actionPerformed(ActionEvent e)&#xD;&#xA;    			{&#xD;&#xA;    				DefaultListModel model = (DefaultListModel)list.getModel();&#xD;&#xA;    				int row = list.getSelectedIndex();&#xD;&#xA;    &#xD;&#xA;    				while (row != -1)&#xD;&#xA;    				{&#xD;&#xA;    					model.removeElementAt( row );&#xD;&#xA;    					row = list.getSelectedIndex();&#xD;&#xA;    				}&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    		JPanel listPanel = new JPanel( new BorderLayout(5, 5) );&#xD;&#xA;    		listPanel.add(new JScrollPane( list ), BorderLayout.CENTER);&#xD;&#xA;    		listPanel.add(listDelete, BorderLayout.PAGE_END);&#xD;&#xA;    &#xD;&#xA;    		//  Add the table&#xD;&#xA;    &#xD;&#xA;    		DefaultTableModel tableModel = new DefaultTableModel(0, 1);&#xD;&#xA;    		List<String> tableItems = Arrays.asList( items );&#xD;&#xA;    		Collections.shuffle( tableItems );&#xD;&#xA;    &#xD;&#xA;    		for (String item: tableItems)&#xD;&#xA;    		{&#xD;&#xA;    			System.out.println( item );&#xD;&#xA;    			tableModel.addRow( new String[]{item} );&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		table = new JTable( tableModel );&#xD;&#xA;    &#xD;&#xA;    		table.setAutoCreateRowSorter(true);&#xD;&#xA;    		((DefaultRowSorter)table.getRowSorter()).toggleSortOrder(0);&#xD;&#xA;    &#xD;&#xA;    		JButton tableDelete = new JButton( """"Delete From Table"""" );&#xD;&#xA;    		tableDelete.addActionListener( new ActionListener()&#xD;&#xA;    		{&#xD;&#xA;    			@Override&#xD;&#xA;    			public void actionPerformed(ActionEvent e)&#xD;&#xA;    			{&#xD;&#xA;    				DefaultTableModel model = (DefaultTableModel)table.getModel();&#xD;&#xA;    				int row = table.getSelectedRow();&#xD;&#xA;    &#xD;&#xA;    				while (row != -1)&#xD;&#xA;    				{&#xD;&#xA;    				    int modelRow = table.convertRowIndexToModel( row );&#xD;&#xA;    					model.removeRow( modelRow );&#xD;&#xA;    					row = table.getSelectedRow();&#xD;&#xA;    				}&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    		JPanel tablePanel = new JPanel( new BorderLayout(5, 5) );&#xD;&#xA;    		tablePanel.add(new JScrollPane( table ), BorderLayout.CENTER);&#xD;&#xA;    		tablePanel.add(tableDelete, BorderLayout.PAGE_END);&#xD;&#xA;    &#xD;&#xA;    		add(listPanel, BorderLayout.LINE_START);&#xD;&#xA;    		add(tablePanel, BorderLayout.LINE_END);&#xD;&#xA;       	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowGUI()&#xD;&#xA;    	{&#xD;&#xA;    		JFrame frame = new JFrame(""""Multiple Item Deletion"""");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add(new ItemDeletion(), BorderLayout.NORTH);&#xD;&#xA;    		frame.setLocationByPlatform( true );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setVisible( true );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowGUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }"
