"Content"
"    - (UIImage*)screenshot &#xD;&#xA;    {&#xD;&#xA;        // Create a graphics context with the target size&#xD;&#xA;        // On iOS 4 and later, use UIGraphicsBeginImageContextWithOptions to take the scale into consideration&#xD;&#xA;        // On iOS prior to 4, fall back to use UIGraphicsBeginImageContext&#xD;&#xA;        CGSize imageSize = [[UIScreen mainScreen] bounds].size;&#xD;&#xA;        if (NULL != UIGraphicsBeginImageContextWithOptions)&#xD;&#xA;            UIGraphicsBeginImageContextWithOptions(imageSize, NO, 0);&#xD;&#xA;        else&#xD;&#xA;            UIGraphicsBeginImageContext(imageSize);&#xD;&#xA;        &#xD;&#xA;        CGContextRef context = UIGraphicsGetCurrentContext();&#xD;&#xA;        &#xD;&#xA;        // Iterate over every window from back to front&#xD;&#xA;        for (UIWindow *window in [[UIApplication sharedApplication] windows]) &#xD;&#xA;        {&#xD;&#xA;            if (![window respondsToSelector:@selector(screen)] || [window screen] == [UIScreen mainScreen])&#xD;&#xA;            {&#xD;&#xA;                // -renderInContext: renders in the coordinate space of the layer,&#xD;&#xA;                // so we must first apply the layer's geometry to the graphics context&#xD;&#xA;                CGContextSaveGState(context);&#xD;&#xA;                // Center the context around the window's anchor point&#xD;&#xA;                CGContextTranslateCTM(context, [window center].x, [window center].y);&#xD;&#xA;                // Apply the window's transform about the anchor point&#xD;&#xA;                CGContextConcatCTM(context, [window transform]);&#xD;&#xA;                // Offset by the portion of the bounds left of and above the anchor point&#xD;&#xA;                CGContextTranslateCTM(context,&#xD;&#xA;                                      -[window bounds].size.width * [[window layer] anchorPoint].x,&#xD;&#xA;                                      -[window bounds].size.height * [[window layer] anchorPoint].y);&#xD;&#xA;                &#xD;&#xA;                // Render the layer hierarchy to the current context&#xD;&#xA;                [[window layer] renderInContext:context];&#xD;&#xA;                &#xD;&#xA;                // Restore the context&#xD;&#xA;                CGContextRestoreGState(context);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        // Retrieve the screenshot image&#xD;&#xA;        UIImage *image = UIGraphicsGetImageFromCurrentImageContext();&#xD;&#xA;        &#xD;&#xA;        UIGraphicsEndImageContext();&#xD;&#xA;        &#xD;&#xA;        return image;&#xD;&#xA;    }"
