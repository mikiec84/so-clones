"Content"
"    private static final int TWO_MINUTES = 1000 * 60 * 2;&#xD;&#xA;    &#xD;&#xA;    /** Determines whether one Location reading is better than the current Location fix&#xD;&#xA;      * @param location  The new Location that you want to evaluate&#xD;&#xA;      * @param currentBestLocation  The current Location fix, to which you want to compare the new one&#xD;&#xA;      */&#xD;&#xA;    protected boolean isBetterLocation(Location location, Location currentBestLocation) {&#xD;&#xA;        if (currentBestLocation == null) {&#xD;&#xA;            // A new location is always better than no location&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Check whether the new location fix is newer or older&#xD;&#xA;        long timeDelta = location.getTime() - currentBestLocation.getTime();&#xD;&#xA;        boolean isSignificantlyNewer = timeDelta > TWO_MINUTES;&#xD;&#xA;        boolean isSignificantlyOlder = timeDelta < -TWO_MINUTES;&#xD;&#xA;        boolean isNewer = timeDelta > 0;&#xD;&#xA;    &#xD;&#xA;        // If it's been more than two minutes since the current location, use the new location&#xD;&#xA;        // because the user has likely moved&#xD;&#xA;        if (isSignificantlyNewer) {&#xD;&#xA;            return true;&#xD;&#xA;        // If the new location is more than two minutes older, it must be worse&#xD;&#xA;        } else if (isSignificantlyOlder) {&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Check whether the new location fix is more or less accurate&#xD;&#xA;        int accuracyDelta = (int) (location.getAccuracy() - currentBestLocation.getAccuracy());&#xD;&#xA;        boolean isLessAccurate = accuracyDelta > 0;&#xD;&#xA;        boolean isMoreAccurate = accuracyDelta < 0;&#xD;&#xA;        boolean isSignificantlyLessAccurate = accuracyDelta > 200;&#xD;&#xA;    &#xD;&#xA;        // Check if the old and new location are from the same provider&#xD;&#xA;        boolean isFromSameProvider = isSameProvider(location.getProvider(),&#xD;&#xA;                currentBestLocation.getProvider());&#xD;&#xA;    &#xD;&#xA;        // Determine location quality using a combination of timeliness and accuracy&#xD;&#xA;        if (isMoreAccurate) {&#xD;&#xA;            return true;&#xD;&#xA;        } else if (isNewer && !isLessAccurate) {&#xD;&#xA;            return true;&#xD;&#xA;        } else if (isNewer && !isSignificantlyLessAccurate && isFromSameProvider) {&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;        return false;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /** Checks whether two providers are the same */&#xD;&#xA;    private boolean isSameProvider(String provider1, String provider2) {&#xD;&#xA;        if (provider1 == null) {&#xD;&#xA;          return provider2 == null;&#xD;&#xA;        }&#xD;&#xA;        return provider1.equals(provider2);&#xD;&#xA;     }"
