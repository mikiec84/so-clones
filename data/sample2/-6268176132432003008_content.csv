"Content"
"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.table.*;&#xD;&#xA;    &#xD;&#xA;    /*&#xD;&#xA;     * The editor button that brings up the dialog.&#xD;&#xA;     */&#xD;&#xA;    //public class TablePopupEditor extends AbstractCellEditor&#xD;&#xA;    public class TablePopupEditor extends DefaultCellEditor&#xD;&#xA;    	implements TableCellEditor&#xD;&#xA;    {&#xD;&#xA;    	private PopupDialog popup;&#xD;&#xA;    	private String currentText = """""""";&#xD;&#xA;    	private JButton editorComponent;&#xD;&#xA;    &#xD;&#xA;    	public TablePopupEditor()&#xD;&#xA;    	{&#xD;&#xA;    		super(new JTextField());&#xD;&#xA;    &#xD;&#xA;    		setClickCountToStart(1);&#xD;&#xA;    &#xD;&#xA;    		//  Use a JButton as the editor component&#xD;&#xA;    &#xD;&#xA;    		editorComponent = new JButton();&#xD;&#xA;    		editorComponent.setBackground(Color.white);&#xD;&#xA;    		editorComponent.setBorderPainted(false);&#xD;&#xA;    		editorComponent.setContentAreaFilled( false );&#xD;&#xA;    &#xD;&#xA;    		// Make sure focus goes back to the table when the dialog is closed&#xD;&#xA;    		editorComponent.setFocusable( false );&#xD;&#xA;    &#xD;&#xA;    		//  Set up the dialog where we do the actual editing&#xD;&#xA;    &#xD;&#xA;    		popup = new PopupDialog();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public Object getCellEditorValue()&#xD;&#xA;    	{&#xD;&#xA;    		return currentText;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public Component getTableCellEditorComponent(&#xD;&#xA;    		JTable table, Object value, boolean isSelected, int row, int column)&#xD;&#xA;    	{&#xD;&#xA;    &#xD;&#xA;    		SwingUtilities.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				popup.setText( currentText );&#xD;&#xA;    //				popup.setLocationRelativeTo( editorComponent );&#xD;&#xA;    				Point p = editorComponent.getLocationOnScreen();&#xD;&#xA;    				popup.setLocation(p.x, p.y + editorComponent.getSize().height);&#xD;&#xA;    				popup.show();&#xD;&#xA;    				fireEditingStopped();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    		currentText = value.toString();&#xD;&#xA;    	   	editorComponent.setText( currentText );&#xD;&#xA;    		return editorComponent;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/*&#xD;&#xA;    	*   Simple dialog containing the actual editing component&#xD;&#xA;    	*/&#xD;&#xA;    	class PopupDialog extends JDialog implements ActionListener&#xD;&#xA;    	{&#xD;&#xA;    		private JTextArea textArea;&#xD;&#xA;    &#xD;&#xA;    		public PopupDialog()&#xD;&#xA;    		{&#xD;&#xA;    			super((Frame)null, """"Change Description"""", true);&#xD;&#xA;    &#xD;&#xA;    			textArea = new JTextArea(5, 20);&#xD;&#xA;    			textArea.setLineWrap( true );&#xD;&#xA;    			textArea.setWrapStyleWord( true );&#xD;&#xA;    			KeyStroke keyStroke = KeyStroke.getKeyStroke(""""ENTER"""");&#xD;&#xA;    			textArea.getInputMap().put(keyStroke, """"none"""");&#xD;&#xA;    			JScrollPane scrollPane = new JScrollPane( textArea );&#xD;&#xA;    			getContentPane().add( scrollPane );&#xD;&#xA;    &#xD;&#xA;    			JButton cancel = new JButton(""""Cancel"""");&#xD;&#xA;    			cancel.addActionListener( this );&#xD;&#xA;    			JButton ok = new JButton(""""Ok"""");&#xD;&#xA;    			ok.setPreferredSize( cancel.getPreferredSize() );&#xD;&#xA;    			ok.addActionListener( this );&#xD;&#xA;    &#xD;&#xA;    			JPanel buttons = new JPanel();&#xD;&#xA;    			buttons.add( ok );&#xD;&#xA;    			buttons.add( cancel );&#xD;&#xA;    			getContentPane().add(buttons, BorderLayout.SOUTH);&#xD;&#xA;    			pack();&#xD;&#xA;    &#xD;&#xA;    			getRootPane().setDefaultButton( ok );&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		public void setText(String text)&#xD;&#xA;    		{&#xD;&#xA;    			textArea.setText( text );&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		/*&#xD;&#xA;    		*   Save the changed text before hiding the popup&#xD;&#xA;    		*/&#xD;&#xA;    		public void actionPerformed(ActionEvent e)&#xD;&#xA;    		{&#xD;&#xA;    			if (""""Ok"""".equals( e.getActionCommand() ) )&#xD;&#xA;    			{&#xD;&#xA;    				currentText = textArea.getText();&#xD;&#xA;    			}&#xD;&#xA;    &#xD;&#xA;    			textArea.requestFocusInWindow();&#xD;&#xA;    			setVisible( false );&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowUI()&#xD;&#xA;    	{&#xD;&#xA;    		String[] columnNames = {""""Item"""", """"Description""""};&#xD;&#xA;    		Object[][] data =&#xD;&#xA;    		{&#xD;&#xA;    			{""""Item 1"""", """"Description of Item 1""""},&#xD;&#xA;    			{""""Item 2"""", """"Description of Item 2""""},&#xD;&#xA;    			{""""Item 3"""", """"Description of Item 3""""}&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		JTable table = new JTable(data, columnNames);&#xD;&#xA;    		table.getColumnModel().getColumn(1).setPreferredWidth(300);&#xD;&#xA;    		table.setPreferredScrollableViewportSize(table.getPreferredSize());&#xD;&#xA;    		JScrollPane scrollPane = new JScrollPane(table);&#xD;&#xA;    &#xD;&#xA;    		// Use the popup editor on the second column&#xD;&#xA;    &#xD;&#xA;    		TablePopupEditor popupEditor = new TablePopupEditor();&#xD;&#xA;    		table.getColumnModel().getColumn(1).setCellEditor( popupEditor );&#xD;&#xA;    &#xD;&#xA;    		JFrame frame = new JFrame(""""Popup Editor Test"""");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add(new JTextField(), BorderLayout.NORTH);&#xD;&#xA;    		frame.add( scrollPane );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setLocationRelativeTo( null );&#xD;&#xA;    		frame.setVisible(true);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    }"
