"Content"
"        public class MyLocation {&#xD;&#xA;        Timer timer1;&#xD;&#xA;        LocationManager lm;&#xD;&#xA;        LocationResult locationResult;&#xD;&#xA;        boolean gps_enabled=false;&#xD;&#xA;        boolean network_enabled=false;&#xD;&#xA;    &#xD;&#xA;        public boolean getLocation(Context context, LocationResult result)&#xD;&#xA;        {&#xD;&#xA;            //I use LocationResult callback class to pass location value from MyLocation to user code.&#xD;&#xA;            locationResult=result;&#xD;&#xA;            if(lm==null)&#xD;&#xA;                lm = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);&#xD;&#xA;    &#xD;&#xA;            //exceptions will be thrown if provider is not permitted.&#xD;&#xA;            try{gps_enabled=lm.isProviderEnabled(LocationManager.GPS_PROVIDER);}catch(Exception ex){}&#xD;&#xA;            try{network_enabled=lm.isProviderEnabled(LocationManager.NETWORK_PROVIDER);}catch(Exception ex){}&#xD;&#xA;    &#xD;&#xA;            //don't start listeners if no provider is enabled&#xD;&#xA;            if(!gps_enabled && !network_enabled)&#xD;&#xA;                return false;&#xD;&#xA;    &#xD;&#xA;            if(gps_enabled)&#xD;&#xA;                lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, locationListenerGps);&#xD;&#xA;            if(network_enabled)&#xD;&#xA;                lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, locationListenerNetwork);&#xD;&#xA;            timer1=new Timer();&#xD;&#xA;            timer1.schedule(new GetLastLocation(), 20000);&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        LocationListener locationListenerGps = new LocationListener() {&#xD;&#xA;            public void onLocationChanged(Location location) {&#xD;&#xA;                timer1.cancel();&#xD;&#xA;                locationResult.gotLocation(location);&#xD;&#xA;                lm.removeUpdates(this);&#xD;&#xA;                lm.removeUpdates(locationListenerNetwork);&#xD;&#xA;            }&#xD;&#xA;            public void onProviderDisabled(String provider) {}&#xD;&#xA;            public void onProviderEnabled(String provider) {}&#xD;&#xA;            public void onStatusChanged(String provider, int status, Bundle extras) {}&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        LocationListener locationListenerNetwork = new LocationListener() {&#xD;&#xA;            public void onLocationChanged(Location location) {&#xD;&#xA;                timer1.cancel();&#xD;&#xA;                locationResult.gotLocation(location);&#xD;&#xA;                lm.removeUpdates(this);&#xD;&#xA;                lm.removeUpdates(locationListenerGps);&#xD;&#xA;            }&#xD;&#xA;            public void onProviderDisabled(String provider) {}&#xD;&#xA;            public void onProviderEnabled(String provider) {}&#xD;&#xA;            public void onStatusChanged(String provider, int status, Bundle extras) {}&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        class GetLastLocation extends TimerTask {&#xD;&#xA;            @Override&#xD;&#xA;            public void run() {&#xD;&#xA;                 lm.removeUpdates(locationListenerGps);&#xD;&#xA;                 lm.removeUpdates(locationListenerNetwork);&#xD;&#xA;    &#xD;&#xA;                 Location net_loc=null, gps_loc=null;&#xD;&#xA;                 if(gps_enabled)&#xD;&#xA;                     gps_loc=lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);&#xD;&#xA;                 if(network_enabled)&#xD;&#xA;                     net_loc=lm.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;    &#xD;&#xA;                 //if there are both values use the latest one&#xD;&#xA;                 if(gps_loc!=null && net_loc!=null){&#xD;&#xA;                     if(gps_loc.getTime()>net_loc.getTime())&#xD;&#xA;                         locationResult.gotLocation(gps_loc);&#xD;&#xA;                     else&#xD;&#xA;                         locationResult.gotLocation(net_loc);&#xD;&#xA;                     return;&#xD;&#xA;                 }&#xD;&#xA;    &#xD;&#xA;                 if(gps_loc!=null){&#xD;&#xA;                     locationResult.gotLocation(gps_loc);&#xD;&#xA;                     return;&#xD;&#xA;                 }&#xD;&#xA;                 if(net_loc!=null){&#xD;&#xA;                     locationResult.gotLocation(net_loc);&#xD;&#xA;                     return;&#xD;&#xA;                 }&#xD;&#xA;                 locationResult.gotLocation(null);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static abstract class LocationResult{&#xD;&#xA;            public abstract void gotLocation(Location location);&#xD;&#xA;        }&#xD;&#xA;       }"
