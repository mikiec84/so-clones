"Content"
"    public class MyFirebaseMessagingService extends FirebaseMessagingService {&#xD;&#xA;    &#xD;&#xA;        private static final String TAG = MyFirebaseMessagingService.class.getSimpleName();&#xD;&#xA;    &#xD;&#xA;        private NotificationUtils notificationUtils;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onMessageReceived(RemoteMessage remoteMessage) {&#xD;&#xA;            Log.e(TAG, """"From: """" + remoteMessage.getFrom());&#xD;&#xA;    &#xD;&#xA;            if (remoteMessage == null)&#xD;&#xA;                return;&#xD;&#xA;    &#xD;&#xA;            // Check if message contains a notification payload.&#xD;&#xA;            if (remoteMessage.getNotification() != null) {&#xD;&#xA;                Log.e(TAG, """"Notification Body: """" + remoteMessage.getNotification().getBody());&#xD;&#xA;                handleNotification(remoteMessage.getNotification().getBody());&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Check if message contains a data payload.&#xD;&#xA;            if (remoteMessage.getData().size() > 0) {&#xD;&#xA;                Log.e(TAG, """"Data Payload: """" + remoteMessage.getData().toString());&#xD;&#xA;    &#xD;&#xA;                try {&#xD;&#xA;                    JSONObject json = new JSONObject(remoteMessage.getData().toString());&#xD;&#xA;                    handleDataMessage(json);&#xD;&#xA;                } catch (Exception e) {&#xD;&#xA;                    Log.e(TAG, """"Exception: """" + e.getMessage());&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void handleNotification(String message) {&#xD;&#xA;            if (!NotificationUtils.isAppIsInBackground(getApplicationContext())) {&#xD;&#xA;                // app is in foreground, broadcast the push message&#xD;&#xA;                Intent pushNotification = new Intent(Config.PUSH_NOTIFICATION);&#xD;&#xA;                pushNotification.putExtra(""""message"""", message);&#xD;&#xA;                LocalBroadcastManager.getInstance(this).sendBroadcast(pushNotification);&#xD;&#xA;    &#xD;&#xA;                // play notification sound&#xD;&#xA;                NotificationUtils notificationUtils = new NotificationUtils(getApplicationContext());&#xD;&#xA;                notificationUtils.playNotificationSound();&#xD;&#xA;            }else{&#xD;&#xA;                // If the app is in background, firebase itself handles the notification&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void handleDataMessage(JSONObject json) {&#xD;&#xA;            Log.e(TAG, """"push json: """" + json.toString());&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                JSONObject data = json.getJSONObject(""""data"""");&#xD;&#xA;    &#xD;&#xA;                String title = data.getString(""""title"""");&#xD;&#xA;                String message = data.getString(""""message"""");&#xD;&#xA;                boolean isBackground = data.getBoolean(""""is_background"""");&#xD;&#xA;                String imageUrl = data.getString(""""image"""");&#xD;&#xA;                String timestamp = data.getString(""""timestamp"""");&#xD;&#xA;                JSONObject payload = data.getJSONObject(""""payload"""");&#xD;&#xA;    &#xD;&#xA;                Log.e(TAG, """"title: """" + title);&#xD;&#xA;                Log.e(TAG, """"message: """" + message);&#xD;&#xA;                Log.e(TAG, """"isBackground: """" + isBackground);&#xD;&#xA;                Log.e(TAG, """"payload: """" + payload.toString());&#xD;&#xA;                Log.e(TAG, """"imageUrl: """" + imageUrl);&#xD;&#xA;                Log.e(TAG, """"timestamp: """" + timestamp);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                if (!NotificationUtils.isAppIsInBackground(getApplicationContext())) {&#xD;&#xA;                    // app is in foreground, broadcast the push message&#xD;&#xA;                    Intent pushNotification = new Intent(Config.PUSH_NOTIFICATION);&#xD;&#xA;                    pushNotification.putExtra(""""message"""", message);&#xD;&#xA;                    LocalBroadcastManager.getInstance(this).sendBroadcast(pushNotification);&#xD;&#xA;    &#xD;&#xA;                    // play notification sound&#xD;&#xA;                    NotificationUtils notificationUtils = new NotificationUtils(getApplicationContext());&#xD;&#xA;                    notificationUtils.playNotificationSound();&#xD;&#xA;                } else {&#xD;&#xA;                    // app is in background, show the notification in notification tray&#xD;&#xA;                    Intent resultIntent = new Intent(getApplicationContext(), MainActivity.class);&#xD;&#xA;                    resultIntent.putExtra(""""message"""", message);&#xD;&#xA;    &#xD;&#xA;                    // check for image attachment&#xD;&#xA;                    if (TextUtils.isEmpty(imageUrl)) {&#xD;&#xA;                        showNotificationMessage(getApplicationContext(), title, message, timestamp, resultIntent);&#xD;&#xA;                    } else {&#xD;&#xA;                        // image is present, show notification with image&#xD;&#xA;                        showNotificationMessageWithBigImage(getApplicationContext(), title, message, timestamp, resultIntent, imageUrl);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            } catch (JSONException e) {&#xD;&#xA;                Log.e(TAG, """"Json Exception: """" + e.getMessage());&#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;                Log.e(TAG, """"Exception: """" + e.getMessage());&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Showing notification with text only&#xD;&#xA;         */&#xD;&#xA;        private void showNotificationMessage(Context context, String title, String message, String timeStamp, Intent intent) {&#xD;&#xA;            notificationUtils = new NotificationUtils(context);&#xD;&#xA;            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#xD;&#xA;            notificationUtils.showNotificationMessage(title, message, timeStamp, intent);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Showing notification with text and image&#xD;&#xA;         */&#xD;&#xA;        private void showNotificationMessageWithBigImage(Context context, String title, String message, String timeStamp, Intent intent, String imageUrl) {&#xD;&#xA;            notificationUtils = new NotificationUtils(context);&#xD;&#xA;            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#xD;&#xA;            notificationUtils.showNotificationMessage(title, message, timeStamp, intent, imageUrl);&#xD;&#xA;        }&#xD;&#xA;    }"
