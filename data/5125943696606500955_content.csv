"Content"
"    function GetDosOutput(CommandLine: string; Work: string = 'C:\'): string;&#xD;&#xA;    var&#xD;&#xA;      SA: TSecurityAttributes;&#xD;&#xA;      SI: TStartupInfo;&#xD;&#xA;      PI: TProcessInformation;&#xD;&#xA;      StdOutPipeRead, StdOutPipeWrite: THandle;&#xD;&#xA;      WasOK: Boolean;&#xD;&#xA;      Buffer: array[0..255] of AnsiChar;&#xD;&#xA;      BytesRead: Cardinal;&#xD;&#xA;      WorkDir: string;&#xD;&#xA;      Handle: Boolean;&#xD;&#xA;    begin&#xD;&#xA;      Result := '';&#xD;&#xA;      with SA do begin&#xD;&#xA;        nLength := SizeOf(SA);&#xD;&#xA;        bInheritHandle := True;&#xD;&#xA;        lpSecurityDescriptor := nil;&#xD;&#xA;      end;&#xD;&#xA;      CreatePipe(StdOutPipeRead, StdOutPipeWrite, @SA, 0);&#xD;&#xA;      try&#xD;&#xA;        with SI do&#xD;&#xA;        begin&#xD;&#xA;          FillChar(SI, SizeOf(SI), 0);&#xD;&#xA;          cb := SizeOf(SI);&#xD;&#xA;          dwFlags := STARTF_USESHOWWINDOW or STARTF_USESTDHANDLES;&#xD;&#xA;          wShowWindow := SW_HIDE;&#xD;&#xA;          hStdInput := GetStdHandle(STD_INPUT_HANDLE); // don't redirect stdin&#xD;&#xA;          hStdOutput := StdOutPipeWrite;&#xD;&#xA;          hStdError := StdOutPipeWrite;&#xD;&#xA;        end;&#xD;&#xA;        WorkDir := Work;&#xD;&#xA;        Handle := CreateProcess(nil, PChar('cmd.exe /C ' + CommandLine),&#xD;&#xA;                                nil, nil, True, 0, nil,&#xD;&#xA;                                PChar(WorkDir), SI, PI);&#xD;&#xA;        CloseHandle(StdOutPipeWrite);&#xD;&#xA;        if Handle then&#xD;&#xA;          try&#xD;&#xA;            repeat&#xD;&#xA;              WasOK := ReadFile(StdOutPipeRead, Buffer, 255, BytesRead, nil);&#xD;&#xA;              if BytesRead > 0 then&#xD;&#xA;              begin&#xD;&#xA;                Buffer[BytesRead] := #0;&#xD;&#xA;                Result := Result + Buffer;&#xD;&#xA;              end;&#xD;&#xA;            until not WasOK or (BytesRead = 0);&#xD;&#xA;            WaitForSingleObject(PI.hProcess, INFINITE);&#xD;&#xA;          finally&#xD;&#xA;            CloseHandle(PI.hThread);&#xD;&#xA;            CloseHandle(PI.hProcess);&#xD;&#xA;          end;&#xD;&#xA;      finally&#xD;&#xA;        CloseHandle(StdOutPipeRead);&#xD;&#xA;      end;&#xD;&#xA;    end;"
