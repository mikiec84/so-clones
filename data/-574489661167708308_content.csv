"Content"
"    using System;&#xD;&#xA;    using System.Collections.Generic;&#xD;&#xA;    using System.IO;&#xD;&#xA;    using System.Linq;&#xD;&#xA;    using System.Windows.Forms;&#xD;&#xA;    public static void PlayBeep(UInt16 frequency, int msDuration, UInt16 volume = 16383)&#xD;&#xA;    {&#xD;&#xA;        var mStrm = new MemoryStream();&#xD;&#xA;        BinaryWriter writer = new BinaryWriter(mStrm);&#xD;&#xA;        const double TAU = 2 * Math.PI;&#xD;&#xA;        int formatChunkSize = 16;&#xD;&#xA;        int headerSize = 8;&#xD;&#xA;        short formatType = 1;&#xD;&#xA;        short tracks = 1;&#xD;&#xA;        int samplesPerSecond = 44100;&#xD;&#xA;        short bitsPerSample = 16;&#xD;&#xA;        short frameSize = (short)(tracks * ((bitsPerSample + 7) / 8));&#xD;&#xA;        int bytesPerSecond = samplesPerSecond * frameSize;&#xD;&#xA;        int waveSize = 4;&#xD;&#xA;        int samples = (int)((decimal)samplesPerSecond * msDuration / 1000);&#xD;&#xA;        int dataChunkSize = samples * frameSize;&#xD;&#xA;        int fileSize = waveSize + headerSize + formatChunkSize + headerSize + dataChunkSize;&#xD;&#xA;        // var encoding = new System.Text.UTF8Encoding();&#xD;&#xA;        writer.Write(0x46464952); // = encoding.GetBytes(""""RIFF"""")&#xD;&#xA;        writer.Write(fileSize);&#xD;&#xA;        writer.Write(0x45564157); // = encoding.GetBytes(""""WAVE"""")&#xD;&#xA;        writer.Write(0x20746D66); // = encoding.GetBytes(""""fmt """")&#xD;&#xA;        writer.Write(formatChunkSize);&#xD;&#xA;        writer.Write(formatType);&#xD;&#xA;        writer.Write(tracks);&#xD;&#xA;        writer.Write(samplesPerSecond);&#xD;&#xA;        writer.Write(bytesPerSecond);&#xD;&#xA;        writer.Write(frameSize);&#xD;&#xA;        writer.Write(bitsPerSample);&#xD;&#xA;        writer.Write(0x61746164); // = encoding.GetBytes(""""data"""")&#xD;&#xA;        writer.Write(dataChunkSize);&#xD;&#xA;        {&#xD;&#xA;            double theta = frequency * TAU / (double)samplesPerSecond;&#xD;&#xA;            // 'volume' is UInt16 with range 0 thru Uint16.MaxValue ( = 65 535)&#xD;&#xA;            // we need 'amp' to have the range of 0 thru Int16.MaxValue ( = 32 767)&#xD;&#xA;            double amp = volume >> 2; // so we simply set amp = volume / 2&#xD;&#xA;            for (int step = 0; step < samples; step++)&#xD;&#xA;            {&#xD;&#xA;                short s = (short)(amp * Math.Sin(theta * (double)step));&#xD;&#xA;                writer.Write(s);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        mStrm.Seek(0, SeekOrigin.Begin);&#xD;&#xA;        new System.Media.SoundPlayer(mStrm).Play();&#xD;&#xA;        writer.Close();&#xD;&#xA;        mStrm.Close();&#xD;&#xA;    } // public static void PlayBeep(UInt16 frequency, int msDuration, UInt16 volume = 16383)"
