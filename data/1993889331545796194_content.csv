"Content"
"      public class CustomVolleyRequest {&#xD;&#xA;    &#xD;&#xA;        private static CustomVolleyRequest customVolleyRequest;&#xD;&#xA;        private static Context context;&#xD;&#xA;        private RequestQueue requestQueue;&#xD;&#xA;        private ImageLoader imageLoader;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private CustomVolleyRequest(Context context) {&#xD;&#xA;            this.context = context;&#xD;&#xA;            this.requestQueue = getRequestQueue();&#xD;&#xA;    &#xD;&#xA;            imageLoader = new ImageLoader(requestQueue,&#xD;&#xA;                    new ImageLoader.ImageCache() {&#xD;&#xA;                        private final LruCache<String, Bitmap>&#xD;&#xA;                                cache = new LruCache<String, Bitmap>(20);&#xD;&#xA;    &#xD;&#xA;                        @Override&#xD;&#xA;                        public Bitmap getBitmap(String url) {&#xD;&#xA;                            return cache.get(url);&#xD;&#xA;                        }&#xD;&#xA;    &#xD;&#xA;                        @Override&#xD;&#xA;                        public void putBitmap(String url, Bitmap bitmap) {&#xD;&#xA;                            cache.put(url, bitmap);&#xD;&#xA;                        }&#xD;&#xA;                    });&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static synchronized CustomVolleyRequest getInstance(Context context) {&#xD;&#xA;            if (customVolleyRequest == null) {&#xD;&#xA;                customVolleyRequest = new CustomVolleyRequest(context);&#xD;&#xA;            }&#xD;&#xA;            return customVolleyRequest;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public RequestQueue getRequestQueue() {&#xD;&#xA;            if (requestQueue == null) {&#xD;&#xA;                Cache cache = new DiskBasedCache(context.getCacheDir(), 10 * 1024 * 1024);&#xD;&#xA;                Network network = new BasicNetwork(new HurlStack());&#xD;&#xA;                requestQueue = new RequestQueue(cache, network);&#xD;&#xA;                requestQueue.start();&#xD;&#xA;            }&#xD;&#xA;            return requestQueue;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public ImageLoader getImageLoader() {&#xD;&#xA;            return imageLoader;&#xD;&#xA;        }&#xD;&#xA;    }"
