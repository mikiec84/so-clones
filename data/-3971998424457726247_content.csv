"Content"
"    private String getDistanceOnRoad(double latitude, double longitude,&#xD;&#xA;			double prelatitute, double prelongitude) {&#xD;&#xA;		String result_in_kms = """""""";&#xD;&#xA;		String url = """"http://maps.google.com/maps/api/directions/xml?origin=""""&#xD;&#xA;				+ latitude + """","""" + longitude + """"&destination="""" + prelatitute&#xD;&#xA;				+ """","""" + prelongitude + """"&sensor=false&units=metric"""";&#xD;&#xA;		String tag[] = { """"text"""" };&#xD;&#xA;		HttpResponse response = null;&#xD;&#xA;		try {&#xD;&#xA;			HttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;			HttpContext localContext = new BasicHttpContext();&#xD;&#xA;			HttpPost httpPost = new HttpPost(url);&#xD;&#xA;			response = httpClient.execute(httpPost, localContext);&#xD;&#xA;			InputStream is = response.getEntity().getContent();&#xD;&#xA;			DocumentBuilder builder = DocumentBuilderFactory.newInstance()&#xD;&#xA;					.newDocumentBuilder();&#xD;&#xA;			Document doc = builder.parse(is);&#xD;&#xA;			if (doc != null) {&#xD;&#xA;				NodeList nl;&#xD;&#xA;				ArrayList args = new ArrayList();&#xD;&#xA;				for (String s : tag) {&#xD;&#xA;					nl = doc.getElementsByTagName(s);&#xD;&#xA;					if (nl.getLength() > 0) {&#xD;&#xA;						Node node = nl.item(nl.getLength() - 1);&#xD;&#xA;						args.add(node.getTextContent());&#xD;&#xA;					} else {&#xD;&#xA;						args.add("""" - """");&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;				result_in_kms = String.format(""""%s"""", args.get(0));&#xD;&#xA;			}&#xD;&#xA;		} catch (Exception e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		}&#xD;&#xA;		return result_in_kms;&#xD;&#xA;	}"
