"Content"
"        public class HeaderAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {&#xD;&#xA;        private static final int TYPE_HEADER = 0;&#xD;&#xA;        private static final int TYPE_ITEM = 1;&#xD;&#xA;        String[] data;&#xD;&#xA;    &#xD;&#xA;        public HeaderAdapter(String[] data) {&#xD;&#xA;            this.data = data;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {&#xD;&#xA;            if (viewType == TYPE_ITEM) {&#xD;&#xA;                //inflate your layout and pass it to view holder&#xD;&#xA;                return new VHItem(null);&#xD;&#xA;            } else if (viewType == TYPE_HEADER) {&#xD;&#xA;                //inflate your layout and pass it to view holder&#xD;&#xA;                return new VHHeader(null);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            throw new RuntimeException(""""there is no type that matches the type """" + viewType + """" + make sure your using types correctly"""");&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {&#xD;&#xA;            if (holder instanceof VHItem) {&#xD;&#xA;                String dataItem = getItem(position);&#xD;&#xA;                //cast holder to VHItem and set data&#xD;&#xA;            } else if (holder instanceof VHHeader) {&#xD;&#xA;                //cast holder to VHHeader and set data for header.&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getItemCount() {&#xD;&#xA;            return data.length + 1;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getItemViewType(int position) {&#xD;&#xA;            if (isPositionHeader(position))&#xD;&#xA;                return TYPE_HEADER;&#xD;&#xA;    &#xD;&#xA;            return TYPE_ITEM;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private boolean isPositionHeader(int position) {&#xD;&#xA;            return position == 0;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private String getItem(int position) {&#xD;&#xA;            return data[position - 1];&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        class VHItem extends RecyclerView.ViewHolder {&#xD;&#xA;            TextView title;&#xD;&#xA;    &#xD;&#xA;            public VHItem(View itemView) {&#xD;&#xA;                super(itemView);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        class VHHeader extends RecyclerView.ViewHolder {&#xD;&#xA;            Button button;&#xD;&#xA;    &#xD;&#xA;            public VHHeader(View itemView) {&#xD;&#xA;                super(itemView);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
