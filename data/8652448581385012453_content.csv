"Content"
"    public static class NetworkDrives&#xD;&#xA;    	{&#xD;&#xA;    		public static bool  MapDrive(string DriveLetter, string Path, string Username, string Password)&#xD;&#xA;    		{&#xD;&#xA;    &#xD;&#xA;    			bool ReturnValue = false;&#xD;&#xA;    &#xD;&#xA;    			if(System.IO.Directory.Exists(DriveLetter + """":\\""""))&#xD;&#xA;    			{&#xD;&#xA;    				DisconnectDrive(DriveLetter);&#xD;&#xA;    			}&#xD;&#xA;    			System.Diagnostics.Process p = new System.Diagnostics.Process();&#xD;&#xA;    			p.StartInfo.UseShellExecute = false;&#xD;&#xA;    			p.StartInfo.CreateNoWindow = true;&#xD;&#xA;    			p.StartInfo.RedirectStandardError = true;&#xD;&#xA;    			p.StartInfo.RedirectStandardOutput = true;&#xD;&#xA;    &#xD;&#xA;    			p.StartInfo.FileName = """"net.exe"""";&#xD;&#xA;    			p.StartInfo.Arguments = """" use """" + DriveLetter + """": """" + '""""' + Path + '""""' + """" """" + Password + """" /user:"""" + Username;&#xD;&#xA;    			p.Start();&#xD;&#xA;    			p.WaitForExit();&#xD;&#xA;    &#xD;&#xA;    			string ErrorMessage = p.StandardError.ReadToEnd();&#xD;&#xA;    			string OuputMessage = p.StandardOutput.ReadToEnd();&#xD;&#xA;    			if (ErrorMessage.Length > 0)&#xD;&#xA;    			{&#xD;&#xA;    				throw new Exception(""""Error:"""" + ErrorMessage);&#xD;&#xA;    			}&#xD;&#xA;    			else&#xD;&#xA;    			{&#xD;&#xA;    				ReturnValue = true;&#xD;&#xA;    			}&#xD;&#xA;    			return ReturnValue;&#xD;&#xA;    		}&#xD;&#xA;    		public static bool DisconnectDrive(string DriveLetter)&#xD;&#xA;    		{&#xD;&#xA;    			bool ReturnValue = false;&#xD;&#xA;    			System.Diagnostics.Process p = new System.Diagnostics.Process();&#xD;&#xA;    			p.StartInfo.UseShellExecute = false;&#xD;&#xA;    			p.StartInfo.CreateNoWindow = true;&#xD;&#xA;    			p.StartInfo.RedirectStandardError = true;&#xD;&#xA;    			p.StartInfo.RedirectStandardOutput = true;&#xD;&#xA;    &#xD;&#xA;    			p.StartInfo.FileName = """"net.exe"""";&#xD;&#xA;    			p.StartInfo.Arguments = """" use """" + DriveLetter + """": /DELETE"""";&#xD;&#xA;    			p.Start();&#xD;&#xA;    			p.WaitForExit();&#xD;&#xA;    &#xD;&#xA;    			string ErrorMessage = p.StandardError.ReadToEnd();&#xD;&#xA;    			string OuputMessage = p.StandardOutput.ReadToEnd();&#xD;&#xA;    			if (ErrorMessage.Length > 0)&#xD;&#xA;    			{&#xD;&#xA;    				throw new Exception(""""Error:"""" + ErrorMessage);&#xD;&#xA;    			}&#xD;&#xA;    			else&#xD;&#xA;    			{&#xD;&#xA;    				ReturnValue = true;&#xD;&#xA;    			}&#xD;&#xA;    			return ReturnValue;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    	}"
