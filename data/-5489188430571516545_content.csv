"Content"
"        public static CookieCollection GetAllCookiesFromHeader(string strHeader, string strHost)&#xD;&#xA;        {&#xD;&#xA;            ArrayList al = new ArrayList();&#xD;&#xA;            CookieCollection cc = new CookieCollection();&#xD;&#xA;            if (strHeader != string.Empty)&#xD;&#xA;            {&#xD;&#xA;                al = ConvertCookieHeaderToArrayList(strHeader);&#xD;&#xA;                cc = ConvertCookieArraysToCookieCollection(al, strHost);&#xD;&#xA;            }&#xD;&#xA;            return cc;&#xD;&#xA;        }&#xD;&#xA;        private static ArrayList ConvertCookieHeaderToArrayList(string strCookHeader)&#xD;&#xA;        {&#xD;&#xA;            strCookHeader = strCookHeader.Replace(""""\r"""", """""""");&#xD;&#xA;            strCookHeader = strCookHeader.Replace(""""\n"""", """""""");&#xD;&#xA;            string[] strCookTemp = strCookHeader.Split(',');&#xD;&#xA;            ArrayList al = new ArrayList();&#xD;&#xA;            int i = 0;&#xD;&#xA;            int n = strCookTemp.Length;&#xD;&#xA;            while (i < n)&#xD;&#xA;            {&#xD;&#xA;                if (strCookTemp[i].IndexOf(""""expires="""", StringComparison.OrdinalIgnoreCase) > 0)&#xD;&#xA;                {&#xD;&#xA;                    al.Add(strCookTemp[i] + """","""" + strCookTemp[i + 1]);&#xD;&#xA;                    i = i + 1;&#xD;&#xA;                }&#xD;&#xA;                else&#xD;&#xA;                {&#xD;&#xA;                    al.Add(strCookTemp[i]);&#xD;&#xA;                }&#xD;&#xA;                i = i + 1;&#xD;&#xA;            }&#xD;&#xA;            return al;&#xD;&#xA;        }&#xD;&#xA;        private static CookieCollection ConvertCookieArraysToCookieCollection(ArrayList al, string strHost)&#xD;&#xA;        {&#xD;&#xA;            CookieCollection cc = new CookieCollection();&#xD;&#xA;            int alcount = al.Count;&#xD;&#xA;            string strEachCook;&#xD;&#xA;            string[] strEachCookParts;&#xD;&#xA;            for (int i = 0; i < alcount; i++)&#xD;&#xA;            {&#xD;&#xA;                strEachCook = al[i].ToString();&#xD;&#xA;                strEachCookParts = strEachCook.Split(';');&#xD;&#xA;                int intEachCookPartsCount = strEachCookParts.Length;&#xD;&#xA;                string strCNameAndCValue = string.Empty;&#xD;&#xA;                string strPNameAndPValue = string.Empty;&#xD;&#xA;                string strDNameAndDValue = string.Empty;&#xD;&#xA;                string[] NameValuePairTemp;&#xD;&#xA;                Cookie cookTemp = new Cookie();&#xD;&#xA;                for (int j = 0; j < intEachCookPartsCount; j++)&#xD;&#xA;                {&#xD;&#xA;                    if (j == 0)&#xD;&#xA;                    {&#xD;&#xA;                        strCNameAndCValue = strEachCookParts[j];&#xD;&#xA;                        if (strCNameAndCValue != string.Empty)&#xD;&#xA;                        {&#xD;&#xA;                            int firstEqual = strCNameAndCValue.IndexOf(""""="""");&#xD;&#xA;                            string firstName = strCNameAndCValue.Substring(0, firstEqual);&#xD;&#xA;                            string allValue = strCNameAndCValue.Substring(firstEqual + 1, strCNameAndCValue.Length - (firstEqual + 1));&#xD;&#xA;                            cookTemp.Name = firstName;&#xD;&#xA;                            cookTemp.Value = allValue;&#xD;&#xA;                        }&#xD;&#xA;                        continue;&#xD;&#xA;                    }&#xD;&#xA;                    if (strEachCookParts[j].IndexOf(""""path"""", StringComparison.OrdinalIgnoreCase) >= 0)&#xD;&#xA;                    {&#xD;&#xA;                        strPNameAndPValue = strEachCookParts[j];&#xD;&#xA;                        if (strPNameAndPValue != string.Empty)&#xD;&#xA;                        {&#xD;&#xA;                            NameValuePairTemp = strPNameAndPValue.Split('=');&#xD;&#xA;                            if (NameValuePairTemp[1] != string.Empty)&#xD;&#xA;                            {&#xD;&#xA;                                cookTemp.Path = NameValuePairTemp[1];&#xD;&#xA;                            }&#xD;&#xA;                            else&#xD;&#xA;                            {&#xD;&#xA;                                cookTemp.Path = """"/"""";&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        continue;&#xD;&#xA;                    }&#xD;&#xA;                   &#xD;&#xA;                    if (strEachCookParts[j].IndexOf(""""domain"""", StringComparison.OrdinalIgnoreCase) >= 0)&#xD;&#xA;                    {&#xD;&#xA;                        strPNameAndPValue = strEachCookParts[j];&#xD;&#xA;                        if (strPNameAndPValue != string.Empty)&#xD;&#xA;                        {&#xD;&#xA;                            NameValuePairTemp = strPNameAndPValue.Split('=');&#xD;&#xA;                            if (NameValuePairTemp[1] != string.Empty)&#xD;&#xA;                            {&#xD;&#xA;                                cookTemp.Domain = NameValuePairTemp[1];&#xD;&#xA;                            }&#xD;&#xA;                            else&#xD;&#xA;                            {&#xD;&#xA;                                cookTemp.Domain = strHost;&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        continue;&#xD;&#xA;                    }                    &#xD;&#xA;                }&#xD;&#xA;                if (cookTemp.Path == string.Empty)&#xD;&#xA;                {&#xD;&#xA;                    cookTemp.Path = """"/"""";&#xD;&#xA;                }&#xD;&#xA;                if (cookTemp.Domain == string.Empty)&#xD;&#xA;                {&#xD;&#xA;                    cookTemp.Domain = strHost;&#xD;&#xA;                }&#xD;&#xA;                cc.Add(cookTemp);&#xD;&#xA;            }&#xD;&#xA;            return cc;&#xD;&#xA;        }"
