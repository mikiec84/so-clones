"Content"
"		public class ExpandableListAdapter extends BaseExpandableListAdapter {&#xD;&#xA;			private Context _context;&#xD;&#xA;			private List<String> _listDataHeader; // header titles&#xD;&#xA;			// child data in format of header title, child title&#xD;&#xA;			private HashMap<String, List<String>> _listDataChild;&#xD;&#xA;			public ExpandableListAdapter(Context context,&#xD;&#xA;					List<String> listDataHeader,&#xD;&#xA;					HashMap<String, List<String>> listChildData) {&#xD;&#xA;				this._context = context;&#xD;&#xA;				this._listDataHeader = listDataHeader;&#xD;&#xA;				this._listDataChild = listChildData;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public Object getChild(int groupPosition, int childPosititon) {&#xD;&#xA;				return this._listDataChild.get(&#xD;&#xA;						this._listDataHeader.get(groupPosition)).get(&#xD;&#xA;						childPosititon);&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public long getChildId(int groupPosition, int childPosition) {&#xD;&#xA;				return childPosition;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public View getChildView(int groupPosition,&#xD;&#xA;					final int childPosition, boolean isLastChild,&#xD;&#xA;					View convertView, ViewGroup parent) {&#xD;&#xA;				final String childText = (String) getChild(groupPosition,&#xD;&#xA;						childPosition);&#xD;&#xA;				if (convertView == null) {&#xD;&#xA;					LayoutInflater infalInflater = (LayoutInflater) this._context&#xD;&#xA;							.getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;					convertView = infalInflater.inflate(R.layout.list_item,&#xD;&#xA;							null);&#xD;&#xA;				}&#xD;&#xA;				TextView txtListChild = (TextView) convertView&#xD;&#xA;						.findViewById(R.id.lblListItem);&#xD;&#xA;				txtListChild.setText(childText);&#xD;&#xA;				return convertView;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public int getChildrenCount(int groupPosition) {&#xD;&#xA;				return this._listDataChild.get(&#xD;&#xA;						this._listDataHeader.get(groupPosition)).size();&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public Object getGroup(int groupPosition) {&#xD;&#xA;				return this._listDataHeader.get(groupPosition);&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public int getGroupCount() {&#xD;&#xA;				return this._listDataHeader.size();&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public long getGroupId(int groupPosition) {&#xD;&#xA;				return groupPosition;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public View getGroupView(int groupPosition, boolean isExpanded,&#xD;&#xA;					View convertView, ViewGroup parent) {&#xD;&#xA;				String headerTitle = (String) getGroup(groupPosition);&#xD;&#xA;				if (convertView == null) {&#xD;&#xA;					LayoutInflater infalInflater = (LayoutInflater) this._context&#xD;&#xA;							.getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;					convertView = infalInflater.inflate(R.layout.list_group,&#xD;&#xA;							null);&#xD;&#xA;				}&#xD;&#xA;				TextView lblListHeader = (TextView) convertView&#xD;&#xA;						.findViewById(R.id.lblListHeader);&#xD;&#xA;				lblListHeader.setTypeface(null, Typeface.BOLD);&#xD;&#xA;				lblListHeader.setText(headerTitle);&#xD;&#xA;				return convertView;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public boolean hasStableIds() {&#xD;&#xA;				return false;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public boolean isChildSelectable(int groupPosition,&#xD;&#xA;					int childPosition) {&#xD;&#xA;				return true;&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;	"
