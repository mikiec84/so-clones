"Content"
"        // Create a UIImage from sample buffer data&#xD;&#xA;    - (UIImage *) imageFromSampleBuffer:(CMSampleBufferRef) sampleBuffer&#xD;&#xA;    {&#xD;&#xA;        // Get a CMSampleBuffer's Core Video image buffer for the media data&#xD;&#xA;        CVImageBufferRef imageBuffer = CMSampleBufferGetImageBuffer(sampleBuffer);&#xD;&#xA;        // Lock the base address of the pixel buffer&#xD;&#xA;        CVPixelBufferLockBaseAddress(imageBuffer, 0);&#xD;&#xA;        &#xD;&#xA;        // Get the number of bytes per row for the pixel buffer&#xD;&#xA;        void *baseAddress = CVPixelBufferGetBaseAddress(imageBuffer);&#xD;&#xA;        &#xD;&#xA;        // Get the number of bytes per row for the pixel buffer&#xD;&#xA;        size_t bytesPerRow = CVPixelBufferGetBytesPerRow(imageBuffer);&#xD;&#xA;        // Get the pixel buffer width and height&#xD;&#xA;        size_t width = CVPixelBufferGetWidth(imageBuffer);&#xD;&#xA;        size_t height = CVPixelBufferGetHeight(imageBuffer);&#xD;&#xA;        &#xD;&#xA;        // Create a device-dependent RGB color space&#xD;&#xA;        CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();&#xD;&#xA;        &#xD;&#xA;        // Create a bitmap graphics context with the sample buffer data&#xD;&#xA;        CGContextRef context = CGBitmapContextCreate(baseAddress, width, height, 8,&#xD;&#xA;                                                     bytesPerRow, colorSpace, kCGBitmapByteOrder32Little | kCGImageAlphaPremultipliedFirst);&#xD;&#xA;        // Create a Quartz image from the pixel data in the bitmap graphics context&#xD;&#xA;        CGImageRef quartzImage = CGBitmapContextCreateImage(context);&#xD;&#xA;        // Unlock the pixel buffer&#xD;&#xA;        CVPixelBufferUnlockBaseAddress(imageBuffer,0);&#xD;&#xA;        &#xD;&#xA;        // Free up the context and color space&#xD;&#xA;        CGContextRelease(context);&#xD;&#xA;        CGColorSpaceRelease(colorSpace);&#xD;&#xA;        &#xD;&#xA;        // Create an image object from the Quartz image&#xD;&#xA;        UIImage *image = [UIImage imageWithCGImage:quartzImage];&#xD;&#xA;        &#xD;&#xA;        // Release the Quartz image&#xD;&#xA;        CGImageRelease(quartzImage);&#xD;&#xA;        &#xD;&#xA;        return image;&#xD;&#xA;        }"
