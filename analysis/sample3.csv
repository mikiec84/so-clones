"Sample","ContentNormalizedHash","ThreadCount","PostCount","ParentIds","PostIds","OwnerUserIds","CreationDates","Scores","LineCount","Java","JavaScript","PHP","HTMLCSS","CSharp","Python","SQL","Swift","CPP","ObjectiveC","C","Ruby","VBA","R","Content"
"Java","4958601720365984832",2,2,"49466236;33406527","49466236;33408920","4601149;192373","2018-03-24 15:05:41;2015-10-29 08:10:38","0;10",25,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,"	static jclass java_util_ArrayList;&#xD;&#xA;	static jmethodID java_util_ArrayList_;&#xD;&#xA;	jmethodID java_util_ArrayList_size;&#xD;&#xA;	jmethodID java_util_ArrayList_get;&#xD;&#xA;	jmethodID java_util_ArrayList_add;&#xD;&#xA;	static thread_local JNIEnv* env;&#xD;&#xA;	void init() {&#xD;&#xA;		java_util_ArrayList      = static_cast<jclass>(env->NewGlobalRef(env->FindClass(""""java/util/ArrayList"""")));&#xD;&#xA;		java_util_ArrayList_     = env->GetMethodID(java_util_ArrayList, """"<init>"""", """"(I)V"""");&#xD;&#xA;		java_util_ArrayList_size = env->GetMethodID (java_util_ArrayList, """"size"""", """"()I"""");&#xD;&#xA;		java_util_ArrayList_get  = env->GetMethodID(java_util_ArrayList, """"get"""", """"(I)Ljava/lang/Object;"""");&#xD;&#xA;		java_util_ArrayList_add  = env->GetMethodID(java_util_ArrayList, """"add"""", """"(Ljava/lang/Object;)Z"""");&#xD;&#xA;	}&#xD;&#xA;	std::vector<std::string> java2cpp(jobject arrayList) {&#xD;&#xA;		jint len = env->CallIntMethod(arrayList, java_util_ArrayList_size);&#xD;&#xA;		std::vector<std::string> result;&#xD;&#xA;		result.reserve(len);&#xD;&#xA;		for (jint i = 0; i < len; i++) {&#xD;&#xA;			jstring element = static_cast<jstring>(env->CallObjectMethod(arrayList, java_util_ArrayList_get, i));&#xD;&#xA;			const char* pchars = env->GetStringUTFChars(element, nullptr);&#xD;&#xA;			result.emplace_back(pchars);&#xD;&#xA;			env->ReleaseStringUTFChars(element, pchars);&#xD;&#xA;			env->DeleteLocalRef(element);&#xD;&#xA;		}&#xD;&#xA;	}"
"Java","-7062081005185602493",9,9,"34006525;33359312;30520735;44940685;23931593;36249157;23480154;19217835;18933617","34006525;33359312;30520735;44940685;23931593;36249319;23480154;19218578;18933617","4554245;5447527;4910764;6711645;3585072;2754688;2887183;2063833;N/A","2015-11-30 19:35:25;2015-10-27 03:08:57;2015-05-29 03:41:29;2017-07-06 05:47:38;2014-05-29 10:49:12;2016-03-27 15:49:46;2014-05-05 19:22:56;2013-10-07 06:46:48;2013-09-21 14:14:08","1;2;0;-7;0;-1;-3;65;0",44,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"        public class JSONfunctions {&#xD;&#xA;    &#xD;&#xA;    	public static JSONObject getJSONfromURL(String url) {&#xD;&#xA;    		InputStream is = null;&#xD;&#xA;    		String result = """""""";&#xD;&#xA;    		JSONObject jArray = null;&#xD;&#xA;    &#xD;&#xA;    		// Download JSON data from URL&#xD;&#xA;    		try {&#xD;&#xA;    			HttpClient httpclient = new DefaultHttpClient();&#xD;&#xA;    			HttpPost httppost = new HttpPost(url);&#xD;&#xA;    			HttpResponse response = httpclient.execute(httppost);&#xD;&#xA;    			HttpEntity entity = response.getEntity();&#xD;&#xA;    			is = entity.getContent();&#xD;&#xA;    &#xD;&#xA;    		} catch (Exception e) {&#xD;&#xA;    			Log.e(""""log_tag"""", """"Error in http connection """" + e.toString());&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		// Convert response to string&#xD;&#xA;    		try {&#xD;&#xA;    			BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;    					is, """"iso-8859-1""""), 8);&#xD;&#xA;    			StringBuilder sb = new StringBuilder();&#xD;&#xA;    			String line = null;&#xD;&#xA;    			while ((line = reader.readLine()) != null) {&#xD;&#xA;    				sb.append(line + """"\n"""");&#xD;&#xA;    			}&#xD;&#xA;    			is.close();&#xD;&#xA;    			result = sb.toString();&#xD;&#xA;    		} catch (Exception e) {&#xD;&#xA;    			Log.e(""""log_tag"""", """"Error converting result """" + e.toString());&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		try {&#xD;&#xA;    &#xD;&#xA;    			jArray = new JSONObject(result);&#xD;&#xA;    		} catch (JSONException e) {&#xD;&#xA;    			Log.e(""""log_tag"""", """"Error parsing data """" + e.toString());&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return jArray;&#xD;&#xA;    	}&#xD;&#xA;    }"
"Java","6066322210166683218",2,2,"27391390;23946075","27391390;23946075","3602519;3663255","2014-12-10 00:23:53;2014-05-30 02:24:37","0;0",99,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    public class JSONParser {&#xD;&#xA;      static InputStream is = null;&#xD;&#xA;      static JSONObject jObj = null;&#xD;&#xA;      static String json = """""""";&#xD;&#xA;      // constructor&#xD;&#xA;      public JSONParser() {&#xD;&#xA;      }&#xD;&#xA;      public JSONObject getJSONFromUrl(String url) {&#xD;&#xA;        // Making HTTP request&#xD;&#xA;        try {&#xD;&#xA;          // defaultHttpClient&#xD;&#xA;          DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;          HttpPost httpPost = new HttpPost(url);&#xD;&#xA;          HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;          HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;          is = httpEntity.getContent();&#xD;&#xA;        } catch (UnsupportedEncodingException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        } catch (ClientProtocolException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        } catch (IOException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA;        try {&#xD;&#xA;          BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;            is, """"iso-8859-1""""), 8);&#xD;&#xA;          StringBuilder sb = new StringBuilder();&#xD;&#xA;          String line = null;&#xD;&#xA;          while ((line = reader.readLine()) != null) {&#xD;&#xA;            sb.append(line + """"\n"""");&#xD;&#xA;          }&#xD;&#xA;          is.close();&#xD;&#xA;          json = sb.toString();&#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;          Log.e(""""Buffer Error"""", """"Error converting result """" + e.toString());&#xD;&#xA;        }&#xD;&#xA;        // try parse the string to a JSON object&#xD;&#xA;        try {&#xD;&#xA;          jObj = new JSONObject(json);&#xD;&#xA;        } catch (JSONException e) {&#xD;&#xA;          Log.e(""""JSON Parser"""", """"Error parsing data """" + e.toString());&#xD;&#xA;        }&#xD;&#xA;        // return JSON String&#xD;&#xA;        return jObj;&#xD;&#xA;      }&#xD;&#xA;      public JSONObject makeHttpRequest(String url, String method,&#xD;&#xA;        List < NameValuePair > params) {&#xD;&#xA;        // Making HTTP request&#xD;&#xA;        try {&#xD;&#xA;          // check for request method&#xD;&#xA;          if (method == """"POST"""") {&#xD;&#xA;            // request method is POST&#xD;&#xA;            // defaultHttpClient&#xD;&#xA;            DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;            HttpPost httpPost = new HttpPost(url);&#xD;&#xA;            httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA;            HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;            HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;            is = httpEntity.getContent();&#xD;&#xA;          } else if (method == """"GET"""") {&#xD;&#xA;            // request method is GET&#xD;&#xA;            DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;            String paramString = URLEncodedUtils.format(params, """"utf-8"""");&#xD;&#xA;            url += """"?"""" + paramString;&#xD;&#xA;            HttpGet httpGet = new HttpGet(url);&#xD;&#xA;            HttpResponse httpResponse = httpClient.execute(httpGet);&#xD;&#xA;            HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;            is = httpEntity.getContent();&#xD;&#xA;          }&#xD;&#xA;        } catch (UnsupportedEncodingException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        } catch (ClientProtocolException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        } catch (IOException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA;        try {&#xD;&#xA;          BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;            is, """"iso-8859-1""""), 8);&#xD;&#xA;          StringBuilder sb = new StringBuilder();&#xD;&#xA;          String line = null;&#xD;&#xA;          while ((line = reader.readLine()) != null) {&#xD;&#xA;            sb.append(line + """"\n"""");&#xD;&#xA;          }&#xD;&#xA;          is.close();&#xD;&#xA;          json = sb.toString();&#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;          Log.e(""""Buffer Error"""", """"Error converting result """" + e.toString());&#xD;&#xA;        }&#xD;&#xA;        // try parse the string to a JSON object&#xD;&#xA;        try {&#xD;&#xA;          jObj = new JSONObject(json);&#xD;&#xA;        } catch (JSONException e) {&#xD;&#xA;          Log.e(""""JSON Parser"""", """"Error parsing data """" + e.toString());&#xD;&#xA;        }&#xD;&#xA;        // return JSON String&#xD;&#xA;        return jObj;&#xD;&#xA;      }&#xD;&#xA;    }"
"Java","-8138563732055489830",2,2,"29332789;29334845","29332789;29334845","4360364;4360364","2015-03-29 18:02:58;2015-03-29 21:07:29","1;0",24,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    <com.commonsware.android.test1.ZoomInZoomOut&#xD;&#xA;        android:id=""""@+id/IMAGEID""""&#xD;&#xA;        android:layout_width=""""fill_parent""""&#xD;&#xA;        android:layout_height=""""fill_parent""""&#xD;&#xA;        android:layout_alignParentTop=""""true""""&#xD;&#xA;        android:layout_alignParentLeft=""""true""""&#xD;&#xA;        android:layout_alignParentStart=""""true""""/>&#xD;&#xA;    <com.commonsware.android.test1.DrawView&#xD;&#xA;        android:id=""""@+id/IMAGEID2""""&#xD;&#xA;        android:layout_width=""""fill_parent""""&#xD;&#xA;        android:layout_height=""""fill_parent""""&#xD;&#xA;        android:layout_alignParentTop=""""true""""&#xD;&#xA;        android:layout_alignParentLeft=""""true""""&#xD;&#xA;        android:layout_alignParentStart=""""true""""/>&#xD;&#xA;    <Button&#xD;&#xA;        style=""""?android:attr/buttonStyleSmall""""&#xD;&#xA;        android:layout_width=""""wrap_content""""&#xD;&#xA;        android:layout_height=""""wrap_content""""&#xD;&#xA;        android:text=""""AddCircle""""&#xD;&#xA;        android:id=""""@+id/button1""""&#xD;&#xA;        android:layout_alignParentBottom=""""true""""&#xD;&#xA;        android:layout_alignParentLeft=""""true""""&#xD;&#xA;        android:layout_alignParentStart=""""true""""&#xD;&#xA;        android:onClick=""""sendMessage""""/>"
"Java","8107174351293990059",2,2,"38170742;38169991","38170742;38169991","6528059;6528059","2016-07-03 14:06:24;2016-07-03 12:34:47","1;1",59,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    package com.searcher.controller;&#xD;&#xA;    &#xD;&#xA;    import javax.persistence.EntityManager;&#xD;&#xA;    import javax.persistence.EntityManagerFactory;&#xD;&#xA;    import javax.persistence.Persistence;&#xD;&#xA;    &#xD;&#xA;    import org.hibernate.SessionFactory;&#xD;&#xA;    import org.springframework.beans.factory.annotation.Autowired;&#xD;&#xA;    import org.springframework.beans.factory.annotation.Qualifier;&#xD;&#xA;    import org.springframework.stereotype.Controller;&#xD;&#xA;    import org.springframework.web.bind.annotation.RequestMapping;&#xD;&#xA;    import org.springframework.web.servlet.ModelAndView;&#xD;&#xA;    &#xD;&#xA;    import com.searcher.entity.EcommerceEntity;&#xD;&#xA;    import com.searcher.service.EcommerceService;&#xD;&#xA;    import com.searcher.service.EcommerceServiceImp;&#xD;&#xA;    &#xD;&#xA;    @Controller&#xD;&#xA;    public class MainSearcherController {&#xD;&#xA;    &#xD;&#xA;    	@Autowired&#xD;&#xA;    	private EcommerceService ecommerceService;&#xD;&#xA;    	&#xD;&#xA;    	@RequestMapping(""""/welcome"""")&#xD;&#xA;    	public ModelAndView helloWorld() {&#xD;&#xA;     &#xD;&#xA;    		String message = """"<br><div style='text-align:center;'>""""&#xD;&#xA;    				+ """"<h3>********** Hello World, Spring MVC Tutorial</h3>This message is coming from MainSearcherController.java **********</div><br><br>"""";&#xD;&#xA;    		String strEndList = """""""";&#xD;&#xA;    		&#xD;&#xA;    		try {&#xD;&#xA;    			//ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(""""searcher-servlet.xml"""");&#xD;&#xA;    			//EcommerceDAO ecommerceDAO = context.getBean(EcommerceDAO.class);&#xD;&#xA;    			&#xD;&#xA;    			//EntityManagerFactory entityManagerFactory = Persistence.createEntityManagerFactory(""""hibernate5AnnotatedSessionFactory"""");&#xD;&#xA;    	        //EntityManager entityManager = entityManagerFactory.createEntityManager();&#xD;&#xA;    			&#xD;&#xA;    			&#xD;&#xA;    			// Creating ImageService object&#xD;&#xA;    			EcommerceEntity ecommerceEntity = new EcommerceEntity();&#xD;&#xA;    			&#xD;&#xA;    			//ecommerceEntity.setId(4564564);&#xD;&#xA;    			ecommerceEntity.setName(""""Ebay"""");&#xD;&#xA;    			ecommerceEntity.setPath(""""www.ebay.com"""");&#xD;&#xA;    			&#xD;&#xA;    			this.ecommerceService.add(ecommerceEntity);&#xD;&#xA;    			&#xD;&#xA;    			&#xD;&#xA;    			//strEndList = """"<br/><br/>"""" + ecommerceService.getAllEcommerce().toString() + """"<br/><br/>"""";&#xD;&#xA;    			&#xD;&#xA;    		} catch (Exception e) {&#xD;&#xA;    			throw e;&#xD;&#xA;    		}&#xD;&#xA;    			&#xD;&#xA;    		&#xD;&#xA;    		return new ModelAndView(""""welcome"""", """"message"""", message + strEndList);&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    }"
"JavaScript","-119194885155001883",3,3,"41396945;50168134;25737310","50168086;50168134;50168042","5426199;5426199;5426199","2018-05-04 05:57:41;2018-05-04 06:00:54;2018-05-04 05:53:48","0;0;0",45,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    <script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>&#xD;&#xA;    	&#xD;&#xA;    	<script>&#xD;&#xA;    	var expanded = false;&#xD;&#xA;    	function showCheckBoxes(){&#xD;&#xA;    	&#xD;&#xA;    	var checkboxes = document.getElementById(""""checkboxes"""");&#xD;&#xA;    	if(!expanded){&#xD;&#xA;    		checkboxes.style.display = """"block"""";&#xD;&#xA;    		expanded = true;&#xD;&#xA;    	&#xD;&#xA;    	}else{&#xD;&#xA;    		checkboxes.style.display = """"none"""";&#xD;&#xA;    		expanded = false;&#xD;&#xA;    	&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    </script>&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    	<script>&#xD;&#xA;                function getcategory() {&#xD;&#xA;                    $.ajax({&#xD;&#xA;                        type: """"GET"""",&#xD;&#xA;                        url: 'https://jsonplaceholder.typicode.com/posts',&#xD;&#xA;                        contentType: """"application/json; charset=utf-8"""",&#xD;&#xA;                        dataType: """"json"""",&#xD;&#xA;                        cache: false,&#xD;&#xA;                        success: function (data) {&#xD;&#xA;    						var checkboxes = document.getElementById(""""checkboxes"""");&#xD;&#xA;                            for (var i = 0; i < data.length; i++) {&#xD;&#xA;    							&#xD;&#xA;    							var node = document.createElement('div');        &#xD;&#xA;    							node.innerHTML = '<label id=""""'+ data[i].id +'""""><input type=""""checkbox""""  id=""""'+ data[i].id +'""""/>'+data[i].id +'</label>';       &#xD;&#xA;    						    document.getElementById('checkboxes').appendChild(node);&#xD;&#xA;                            }&#xD;&#xA;                        },&#xD;&#xA;                        error: function (msg) {&#xD;&#xA;                            alert(""""error"""" + msg);&#xD;&#xA;                        }&#xD;&#xA;                    });&#xD;&#xA;                }&#xD;&#xA;            </script>  "
"JavaScript","4857898283221968561",2,2,"50778002;50780254","50778002;50780254","9422887;8675342","2018-06-09 19:56:05;2018-06-10 03:07:49","-1;0",43,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"        <form id=""""form6"""" name=""""form6"""" method=""""post"""">&#xD;&#xA;      <div class=""""row"""">&#xD;&#xA;        <h4 style=""""font-size: 16px;padding-left: 15px;""""><b>Benefits Delivered by Local People from Plantation Felling:</b></h4><br>&#xD;&#xA;        <div class=""""col-sm-6"""">&#xD;&#xA;          <div align=""""right"""" style=""""padding-right: 10px;"""">&#xD;&#xA;            <label style=""""font-weight:300;font-size: 15px;margin-top:5px; """">Dependence of Local People on the Site:&#xD;&#xA;            </label>&#xD;&#xA;            <select name=""""dependence_of_local_people"""" id=""""dependence_of_local_people"""" style=""""width:30%;height: 30px; margin-left: 10px; border-radius: 5px;margin-top:5px; """">&#xD;&#xA;              <option value=""""1"""">1</option>&#xD;&#xA;              <option value=""""2"""">2</option>&#xD;&#xA;              <option value=""""3"""">3</option>&#xD;&#xA;            </select><br><br>&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;        <div class=""""col-sm-4"""">&#xD;&#xA;          <div align=""""right"""" style=""""padding-right: 10px;"""">&#xD;&#xA;            <label style=""""font-weight:300;font-size: 15px;"""">Wage Income:</label>&#xD;&#xA;            <input type=""""text"""" name=""""wage_income"""" id=""""wage_income"""" style=""""width:50%;height: 30px; margin-left: 10px; border-radius: 5px;""""><br>&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;        <div class=""""col-sm-2"""">&#xD;&#xA;          <div align=""""right"""" style=""""padding-right: 0px;"""">&#xD;&#xA;            <input class=""""btn btn-info btn-submit6"""" type=""""submit"""" name=""""submit5"""" value=""""Update"""" onclick=""""move5()"""">&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;      </div>&#xD;&#xA;    </form>&#xD;&#xA;    <script>&#xD;&#xA;        jQuery(document).ready(function() {&#xD;&#xA;            $('.btn-submit6').click(function(e) {&#xD;&#xA;                e.preventDefault();&#xD;&#xA;                $.ajax({&#xD;&#xA;                    url:""""modify_func.php"""",&#xD;&#xA;                    method:""""POST"""",&#xD;&#xA;                    data:$('#form6').serialize(),&#xD;&#xA;                    success:function(data)&#xD;&#xA;                    {&#xD;&#xA;                        document.getElementById(""""form6"""").reset();&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;            });&#xD;&#xA;        });&#xD;&#xA;    </script>"
"JavaScript","-4136101606128056771",2,2,"43631286;43665749","43631286;43665749","7409294;7409294","2017-04-26 10:16:29;2017-04-27 18:46:41","2;3",88,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"        <!DOCTYPE html>&#xD;&#xA;    <html lang=""""en"""" xmlns=""""http://www.w3.org/1999/xhtml"""">&#xD;&#xA;    <head>&#xD;&#xA;        <meta charset=""""utf-8"""" />&#xD;&#xA;        <title>Highcharts data from JSON Response</title>&#xD;&#xA;    		<style>&#xD;&#xA;    		body{&#xD;&#xA;    			margin-top: 30px;&#xD;&#xA;    			margin-left:10px;&#xD;&#xA;    		}&#xD;&#xA;    		</style>&#xD;&#xA;    	<script type=""""text/javascript"""" src=""""http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js""""></script>		&#xD;&#xA;    	<script src=""""http://code.highcharts.com/highcharts.js""""></script>&#xD;&#xA;    	<script type=""""text/javascript"""">&#xD;&#xA;            $(function () {&#xD;&#xA;                    var processed_json = new Array();   //TS1&#xD;&#xA;    				var processed_json1 = new Array();  //TS2 &#xD;&#xA;    				var processed_json2 = new Array();  //TS3&#xD;&#xA;    				var processed_json3 = new Array();  //Processing Delay&#xD;&#xA;    				var processed_json4 = new Array();  //Input-Output Delay				&#xD;&#xA;                    $.getJSON('http://localhost:8080/charts_demo/new4.json', function(data) {&#xD;&#xA;                        // Populate series&#xD;&#xA;                        for (i = 0; i < data.length; i++){&#xD;&#xA;    					&#xD;&#xA;           &#xD;&#xA;    					processed_json.push([data[i].timestamp1, data[i].val]);&#xD;&#xA;    					processed_json1.push([data[i].timestamp2, data[i].val]);&#xD;&#xA;    					processed_json2.push([data[i].timestamp3, data[i].val]);&#xD;&#xA;    					processed_json3.push([((data[i].timestamp3)-(data[i].timestamp2)), data[i].val]);&#xD;&#xA;    					processed_json4.push([((data[i].timestamp3)-(data[i].timestamp1)), data[i].val]);&#xD;&#xA;                        }&#xD;&#xA;                     &#xD;&#xA;                        // draw chart&#xD;&#xA;                        $('#container').highcharts({&#xD;&#xA;                        chart: {&#xD;&#xA;                            type: """"line""""&#xD;&#xA;                        },&#xD;&#xA;                        title: {&#xD;&#xA;                            text: """"Streaming Flink Data""""&#xD;&#xA;                        },&#xD;&#xA;                        xAxis: {&#xD;&#xA;                            type: 'category',&#xD;&#xA;                            allowDecimals: true,&#xD;&#xA;                            title: {&#xD;&#xA;                                text: """"Timestamps""""&#xD;&#xA;                            }&#xD;&#xA;                        },&#xD;&#xA;                        yAxis: {&#xD;&#xA;                            title: {&#xD;&#xA;                                text: """"Steps""""&#xD;&#xA;                            }&#xD;&#xA;                        },&#xD;&#xA;    					&#xD;&#xA;                        series: [{&#xD;&#xA;    	                    name: 'Timestamp1',&#xD;&#xA;                            data: processed_json&#xD;&#xA;                        },&#xD;&#xA;    						{&#xD;&#xA;    							name: 'Timestamp2',&#xD;&#xA;    							data: processed_json1&#xD;&#xA;    					} ,&#xD;&#xA;    						{&#xD;&#xA;    	                    name: 'Timestamp3',&#xD;&#xA;                            data: processed_json2,&#xD;&#xA;                        },&#xD;&#xA;    						{&#xD;&#xA;    	                    name: 'Processing Delay',&#xD;&#xA;                            data: processed_json3,&#xD;&#xA;                        },&#xD;&#xA;    						{&#xD;&#xA;    	                    name: 'Input-Output Delay',&#xD;&#xA;                            data: processed_json4,&#xD;&#xA;                        }&#xD;&#xA;    					&#xD;&#xA;    					]&#xD;&#xA;                    }); &#xD;&#xA;                });&#xD;&#xA;            });&#xD;&#xA;        </script>&#xD;&#xA;    </head>&#xD;&#xA;    <body>&#xD;&#xA;       <div style=""""width: 800px; margin: 2em auto; padding: 1em; border: 1px solid red; border-radius: 0.5em"""">&#xD;&#xA;    	Highcharts data load from a JSON using manual JSON Processing&#xD;&#xA;    	</div>&#xD;&#xA;        <div id=""""container"""" style=""""height: 400px""""></div>&#xD;&#xA;        &#xD;&#xA;    </body>&#xD;&#xA;    </html>"
"JavaScript","7015065989833815753",2,2,"31890569;31915733","31890569;31915733","5201474;5209720","2015-08-08 06:58:27;2015-08-10 09:13:26","2;1",329,FALSE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"     <script type=""""text/javascript"""">&#xD;&#xA;    	var min_jumbo_down_payment_1=""""<?php echo $min_jumbo_down_payment_1?>"""";&#xD;&#xA;    	var min_jumbo_down_payment_2=""""<?php echo $min_jumbo_down_payment_2?>"""";&#xD;&#xA;    	var min_fha_down_payment=""""<?php echo $min_fha_down_payment?>"""";&#xD;&#xA;    	var max_fha_loan=""""<?php echo $max_fha_loan?>"""";&#xD;&#xA;    	var max_va_loan=""""<?php echo $max_va_loan?>"""";&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    	function isNumeric(strString)&#xD;&#xA;    	   //  check for valid numeric strings	&#xD;&#xA;    	   {&#xD;&#xA;     &#xD;&#xA;    	   var strValidChars = """"0123456789.-"""";&#xD;&#xA;    	   var strChar;&#xD;&#xA;    	   var blnResult = true;&#xD;&#xA;    &#xD;&#xA;    	   if (strString.length == 0) return false;&#xD;&#xA;    &#xD;&#xA;    	   //  test strString consists of valid characters listed above&#xD;&#xA;    	   for (i = 0; i < strString.length && blnResult == true; i++)&#xD;&#xA;    		  {&#xD;&#xA;    		  strChar = strString.charAt(i);&#xD;&#xA;    		  if (strValidChars.indexOf(strChar) == -1)&#xD;&#xA;    			 {&#xD;&#xA;    			  blnResult = false;&#xD;&#xA;    			 }&#xD;&#xA;    		  }&#xD;&#xA;    	   return blnResult;&#xD;&#xA;    	   }&#xD;&#xA;    &#xD;&#xA;        function ficoChanged()&#xD;&#xA;    	{&#xD;&#xA;    	  //setDownPayment();&#xD;&#xA;    	  &#xD;&#xA;          getMIP(""""hh"""");&#xD;&#xA;    	  &#xD;&#xA;    	}&#xD;&#xA;      &#xD;&#xA;        function loanTypeChanged()&#xD;&#xA;    	{&#xD;&#xA;    		&#xD;&#xA;    	  setDownPayment();&#xD;&#xA;    	  getMIP(""""loantype""""); //it must be set to loantype &#xD;&#xA;    	 alert(loantype);&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	//always called by either change in loantype or change in fico &#xD;&#xA;    	function setDownPayment()&#xD;&#xA;    	{&#xD;&#xA;    &#xD;&#xA;    		if (userChangedDownPaymentPc_==true  || userChangedDownPaymentAmt_==true)&#xD;&#xA;    		{&#xD;&#xA;    			return;&#xD;&#xA;    		}&#xD;&#xA;    	    //1. get selected loan type&#xD;&#xA;    		for (i=0;i<4;i++ )&#xD;&#xA;    		{&#xD;&#xA;    		  if (document.forms['frmCalculator'].elements['loantype'][i].checked==true)&#xD;&#xA;    			{&#xD;&#xA;    			  var loantype_=document.forms['frmCalculator'].elements.loantype[i].value;&#xD;&#xA;    			  break;&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;              &#xD;&#xA;    		if (loantype_==""""usda"""" || loantype_==""""va"""")&#xD;&#xA;    		{&#xD;&#xA;    			document.forms['frmCalculator'].elements.downpaymentpc.value=0;&#xD;&#xA;    		} 		&#xD;&#xA;    		else if (loantype_==""""fha"""")&#xD;&#xA;    		{&#xD;&#xA;    			document.forms['frmCalculator'].elements.downpaymentpc.value=min_fha_down_payment;&#xD;&#xA;    		}&#xD;&#xA;    		else if (loantype_==""""jumbo"""")&#xD;&#xA;    		{&#xD;&#xA;    			var ficorange_=document.forms['frmCalculator'].elements['ficorange'].value;&#xD;&#xA;    			var arr=ficorange_.split(""""-"""");&#xD;&#xA;    			if(arr[1] >= 720)&#xD;&#xA;    			document.forms['frmCalculator'].elements.downpaymentpc.value=min_jumbo_down_payment_1;&#xD;&#xA;    			else&#xD;&#xA;    			document.forms['frmCalculator'].elements.downpaymentpc.value=min_jumbo_down_payment_2;&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	&#xD;&#xA;    	  function purchasePriceAmountChanged(fromuser_)&#xD;&#xA;    	  {&#xD;&#xA;    		  getMIP(""""hh"""");&#xD;&#xA;    		  document.forms['frmCalculator'].elements.monthlypayment.value="""""""";&#xD;&#xA;    	  }&#xD;&#xA;    &#xD;&#xA;          function monthlyPaymentChanged(fromuser_)&#xD;&#xA;    	  {&#xD;&#xA;    		 &#xD;&#xA;    		  document.forms['frmCalculator'].elements.purchaseprice.value="""""""";&#xD;&#xA;    		  document.forms['frmCalculator'].elements.upfrontmippc.value="""""""";&#xD;&#xA;    		  document.forms['frmCalculator'].elements.upfrontmipamt.value="""""""";&#xD;&#xA;    		  document.forms['frmCalculator'].elements.monthlymippc.value="""""""";&#xD;&#xA;    		  document.forms['frmCalculator'].elements.monthlymipamt.value="""""""";&#xD;&#xA;    		  document.forms['frmCalculator'].elements.ssmonthlymippc.value="""""""";&#xD;&#xA;    		  document.forms['frmCalculator'].elements.ssmonthlymipamt.value="""""""";&#xD;&#xA;     &#xD;&#xA;    	  }&#xD;&#xA;    	 &#xD;&#xA;    	  function downPaymentAmountChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  {&#xD;&#xA;    		  alert(""""ok"""");&#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.downpaymentamt.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.downpaymentpc.value="""""""";         &#xD;&#xA;    		 getMIP(""""hh"""");&#xD;&#xA;    	    }&#xD;&#xA;    	  }&#xD;&#xA;    &#xD;&#xA;    	  function downPaymentPcChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  {&#xD;&#xA;    		  &#xD;&#xA;           alert(""""ok 1"""");&#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.downpaymentpc.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    			 alert(""""ok 2"""");&#xD;&#xA;    		 document.forms['frmCalculator'].elements.downpaymentamt.value="""""""";         &#xD;&#xA;    		 getMIP(""""hh"""");&#xD;&#xA;    		 &#xD;&#xA;    	    }&#xD;&#xA;    	  }&#xD;&#xA;          &#xD;&#xA;         //	  todo : CHANGE IT, ITS NOT WORKING ANYMORE&#xD;&#xA;    	  function getLoanAmount()&#xD;&#xA;    	  {&#xD;&#xA;    	    var purchaseprice_=0;&#xD;&#xA;    		var downpayment_=0;&#xD;&#xA;    		var loanamount_=-1;&#xD;&#xA;    	    var hasloan=false;&#xD;&#xA;    		if(document.forms['frmCalculator'].elements.downpaymentamt.value!="""""""")&#xD;&#xA;    		  {&#xD;&#xA;    		    downpayment_=document.forms['frmCalculator'].elements.downpaymentamt.value;&#xD;&#xA;    		  }&#xD;&#xA;    		else&#xD;&#xA;    		  {&#xD;&#xA;    			  hasloan=true;&#xD;&#xA;    		  }&#xD;&#xA;    		if (document.forms['frmCalculator'].elements.purchaseprice.value!="""""""")&#xD;&#xA;    		  {&#xD;&#xA;    			 purchaseprice_=document.forms['frmCalculator'].elements.purchaseprice.value;&#xD;&#xA;    		  }&#xD;&#xA;    		else&#xD;&#xA;    		  {&#xD;&#xA;    			hasloan=true;&#xD;&#xA;    		  }&#xD;&#xA;    		  &#xD;&#xA;    	   if (hasloan==false)&#xD;&#xA;    		  {&#xD;&#xA;    			loanamount_= purchaseprice_ - downpayment_ ;&#xD;&#xA;    		  }&#xD;&#xA;    		  &#xD;&#xA;    		  return loanamount_;&#xD;&#xA;    	  }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;          function getPurchasePrice()&#xD;&#xA;    	  {&#xD;&#xA;    	  	 if (document.forms['frmCalculator'].elements.purchaseprice.value!="""""""")&#xD;&#xA;    		  {&#xD;&#xA;    			 purchaseprice_=document.forms['frmCalculator'].elements.purchaseprice.value;&#xD;&#xA;    		  }&#xD;&#xA;    		  else&#xD;&#xA;    		  {&#xD;&#xA;    		     purchaseprice_=-1;&#xD;&#xA;    		  }&#xD;&#xA;    		return purchaseprice_;&#xD;&#xA;    	  }&#xD;&#xA;    &#xD;&#xA;    	  function upfrontMIPPcChanged(fromuser_)//true (if user changed  it) else false&#xD;&#xA;    	  {&#xD;&#xA;    		  &#xD;&#xA;    		  alert(""""ok"""");&#xD;&#xA;    		userChangedUpfrontMIP=fromuser_;&#xD;&#xA;    		if (document.forms['frmCalculator'].elements.upfrontmippc.value !="""""""")&#xD;&#xA;    		  {&#xD;&#xA;    		   document.forms['frmCalculator'].elements.upfrontmipamt.value="""""""";&#xD;&#xA;    		  }&#xD;&#xA;    	  }&#xD;&#xA;       &#xD;&#xA;    	  function upfrontMIPAmountChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  {&#xD;&#xA;    		 userChangedUpfrontMIP=fromuser_;&#xD;&#xA;    		 if (document.forms['frmCalculator'].elements.upfrontmipamt.value !="""""""")&#xD;&#xA;    		  {&#xD;&#xA;    		   document.forms['frmCalculator'].elements.upfrontmippc.value="""""""";&#xD;&#xA;    		  }&#xD;&#xA;    	  }&#xD;&#xA;    &#xD;&#xA;    	  function monthlyMIPPcChanged(fromuser_)//true (if user changed  it) else false&#xD;&#xA;    	  {&#xD;&#xA;    		 userChangedMonthlyMIP=fromuser_;&#xD;&#xA;    		 if (document.forms['frmCalculator'].elements.monthlymippc.value !="""""""")&#xD;&#xA;    		  {&#xD;&#xA;    		   document.forms['frmCalculator'].elements.monthlymipamt.value="""""""";&#xD;&#xA;    		  }&#xD;&#xA;    	  }&#xD;&#xA;    &#xD;&#xA;    	  function monthlyMIPAmountChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  {&#xD;&#xA;    		 userChangedMonthlyMIP=fromuser_;&#xD;&#xA;    		 if (document.forms['frmCalculator'].elements.monthlymipamt.value !="""""""")&#xD;&#xA;    		  {&#xD;&#xA;    		   document.forms['frmCalculator'].elements.monthlymippc.value="""""""";&#xD;&#xA;    		  }&#xD;&#xA;    	  }&#xD;&#xA;    &#xD;&#xA;    	  function ssmonthlyMIPPcChanged(fromuser_)//true (if user changed  it) else false&#xD;&#xA;    	  {&#xD;&#xA;    		 userChangedSSMonthlyMIP=fromuser_;&#xD;&#xA;    		 if (document.forms['frmCalculator'].elements.ssmonthlymippc.value !="""""""")&#xD;&#xA;    		  {&#xD;&#xA;    		   document.forms['frmCalculator'].elements.ssmonthlymipamt.value="""""""";&#xD;&#xA;    		  }&#xD;&#xA;    	  }&#xD;&#xA;    &#xD;&#xA;    	  function ssmonthlyMIPAmountChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  {&#xD;&#xA;    		 userChangedSSMonthlyMIP=fromuser_;&#xD;&#xA;    		 if (document.forms['frmCalculator'].elements.ssmonthlymipamt.value !="""""""")&#xD;&#xA;    		  {&#xD;&#xA;    		   document.forms['frmCalculator'].elements.ssmonthlymippc.value="""""""";&#xD;&#xA;    		  }&#xD;&#xA;    	  }&#xD;&#xA;    &#xD;&#xA;    	 function propertyTaxPcChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  {&#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.propertytaxpc.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.propertytaxamt.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  }&#xD;&#xA;    	 &#xD;&#xA;      &#xD;&#xA;    	 function propertyTaxAmountChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  { &#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.propertytaxamt.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.propertytaxpc.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  }&#xD;&#xA;    	  &#xD;&#xA;    	 function hazardInsurancePcChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  {&#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.hazardinsurancepc.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.hazardinsuranceamt.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  }&#xD;&#xA;    &#xD;&#xA;      	 function hazardInsuranceAmountChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  { &#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.hazardinsuranceamt.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.hazardinsurancepc.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  }&#xD;&#xA;      &#xD;&#xA;    	 function melloRoosAmountChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  { &#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.melloroosfeeamt.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.melloroosfeepc.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  }  &#xD;&#xA;    	&#xD;&#xA;    	 function melloRoosPcChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  { &#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.melloroosfeepc.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.melloroosfeeamt.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  } 	&#xD;&#xA;    	&#xD;&#xA;    	 function other1PcChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  { &#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.other1pc.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.other1amt.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  } &#xD;&#xA;    &#xD;&#xA;    	 function other1AmountChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  { &#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.other1amt.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.other1pc.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  } 	  &#xD;&#xA;    &#xD;&#xA;    	 function other2PcChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  { &#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.other2pc.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.other2amt.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  } &#xD;&#xA;    	 &#xD;&#xA;    	 function other2AmountChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  { &#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.other2amt.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.other2pc.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  }&#xD;&#xA;    	 &#xD;&#xA;    	 function other3PcChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  { &#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.other3pc.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.other3amt.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  } &#xD;&#xA;    	&#xD;&#xA;    	 function other3AmountChanged(fromuser_)//true (if user changed  it) or false&#xD;&#xA;    	  { &#xD;&#xA;    	    if (document.forms['frmCalculator'].elements.other3amt.value!="""""""")&#xD;&#xA;    	    {&#xD;&#xA;    		 document.forms['frmCalculator'].elements.other3pc.value="""""""";&#xD;&#xA;    	    }&#xD;&#xA;    	  }&#xD;&#xA;    &#xD;&#xA;    	  function secondsChanged()&#xD;&#xA;    	  {&#xD;&#xA;    	    getMIP(""""hh"""");&#xD;&#xA;    	  }"
"JavaScript","-2070583899748222372",2,2,"44742293;44828726","44742293;44828726","7739331;7739331","2017-06-25 01:08:10;2017-06-29 15:01:10","2;0",21,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    <html>&#xD;&#xA;        <body>&#xD;&#xA;            <ul class=""""MyList"""">&#xD;&#xA;                <li class=""""globalList color1"""">&#xD;&#xA;                    <div>Menu1</div>&#xD;&#xA;                    <ul class=""""sub"""">&#xD;&#xA;                        <li class=""""Sub1""""><div>Sublist1</div></li>&#xD;&#xA;                        <li class=""""Sub2""""><div>Sublist2</div></li>&#xD;&#xA;                    </ul>&#xD;&#xA;                </li>&#xD;&#xA;                 <li>&#xD;&#xA;                     <div>Menu2</div>&#xD;&#xA;                     <ul>&#xD;&#xA;                        <li></li>&#xD;&#xA;                        <li></li>&#xD;&#xA;                     </ul>&#xD;&#xA;                &#xD;&#xA;                 </li>&#xD;&#xA;              </ul>&#xD;&#xA;        </body>&#xD;&#xA;    </html>"
"PHP","-5623933583271114657",2,2,"13576370;13556220","13576370;13556220","1819709;1819709","2012-11-27 02:09:23;2012-11-25 22:26:10","0;0",99,FALSE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"           <?php&#xD;&#xA;    &#xD;&#xA;    // connect to the database&#xD;&#xA;    include('connect.php');&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /* check connection */&#xD;&#xA;    if (mysqli_connect_errno()) {&#xD;&#xA;        printf(""""Connect failed: %s\n"""", mysqli_connect_error());&#xD;&#xA;        die();&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    $sql = """"SELECT CourseId, CourseNo, CourseName FROM Course ORDER BY CourseId""""; &#xD;&#xA;    &#xD;&#xA;    $sqlstmt=$mysqli->prepare($sql);&#xD;&#xA;    &#xD;&#xA;    $sqlstmt->execute(); &#xD;&#xA;    &#xD;&#xA;    $sqlstmt->bind_result($dbCourseId, $dbCourseNo, $dbCourseName);&#xD;&#xA;    &#xD;&#xA;    $courses = array(); // easier if you don't use generic names for data &#xD;&#xA;    &#xD;&#xA;    $courseHTML = """""""";  &#xD;&#xA;    $courseHTML .= '<select name=""""courses"""" id=""""coursesDrop"""">' . PHP_EOL; &#xD;&#xA;    $courseHTML .= '<option value="""""""">Please Select</option>' . PHP_EOL;  &#xD;&#xA;    &#xD;&#xA;    $outputcourse = """""""";&#xD;&#xA;    &#xD;&#xA;    while($sqlstmt->fetch()) &#xD;&#xA;    {&#xD;&#xA;    &#xD;&#xA;        $course = $dbCourseId;&#xD;&#xA;        $courseno = $dbCourseNo;&#xD;&#xA;        $coursename = $dbCourseName; &#xD;&#xA;    &#xD;&#xA;        $courseHTML .= """"<option value='"""" . $course . """"'>"""" . $courseno . """" - """" . $coursename . """"</option>"""" . PHP_EOL;  &#xD;&#xA;    &#xD;&#xA;        if (isset($_POST['courses']) && ($_POST['courses'] == $course)) {&#xD;&#xA;            $outputcourse = """"<p><strong>Course:</strong> """" . $courseno .  """" - """"  . $coursename . """"</p>"""";&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    } &#xD;&#xA;    &#xD;&#xA;    $courseHTML .= '</select>'; &#xD;&#xA;    &#xD;&#xA;    ?>&#xD;&#xA;    &#xD;&#xA;    <form action=""""<?php echo htmlentities($_SERVER['PHP_SELF']); ?>"""" method=""""post"""" onsubmit=""""return validation();"""">&#xD;&#xA;        <table>&#xD;&#xA;            <tr>&#xD;&#xA;                <th>Course: <?php echo $courseHTML; ?></th>&#xD;&#xA;            </tr>&#xD;&#xA;        </table>&#xD;&#xA;        <p>&#xD;&#xA;            <input id=""""moduleSubmit"""" type=""""submit"""" value=""""Submit Course and Module"""" name=""""moduleSubmit"""" />&#xD;&#xA;        </p>&#xD;&#xA;        <div id=""""moduleAlert""""></div>&#xD;&#xA;        <div id=""""targetdiv""""></div>&#xD;&#xA;    </form>&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    <?php&#xD;&#xA;    &#xD;&#xA;    if (isset($_POST['moduleSubmit'])) {    &#xD;&#xA;    &#xD;&#xA;        $sessionquery = """"&#xD;&#xA;        SELECT SessionId, SessionName, SessionDate, SessionTime, CourseId, SessionActive&#xD;&#xA;        FROM Session&#xD;&#xA;        WHERE (CourseId = ? AND SessionActive = ?)&#xD;&#xA;        ORDER BY SessionName &#xD;&#xA;        """";&#xD;&#xA;    &#xD;&#xA;        $active = 1;&#xD;&#xA;    &#xD;&#xA;        $sessionqrystmt=$mysqli->prepare($sessionquery);&#xD;&#xA;        // You only need to call bind_param once&#xD;&#xA;        $sessionqrystmt->bind_param(""""si"""",$course, $active);&#xD;&#xA;        // get result and assign variables (prefix with db)&#xD;&#xA;    &#xD;&#xA;        $sessionqrystmt->execute(); &#xD;&#xA;    &#xD;&#xA;        $sessionqrystmt->bind_result($dbSessionId,$dbSessionName,$dbSessionDate,$dbSessionTime, $dbCourseId, $dbSessionActive);&#xD;&#xA;    &#xD;&#xA;        $sessionqrystmt->store_result();&#xD;&#xA;    &#xD;&#xA;        $sessionnum = $sessionqrystmt->num_rows();   &#xD;&#xA;    &#xD;&#xA;        if($sessionnum == 0) {&#xD;&#xA;            echo """"<p><span style='color: red'>Sorry, You have No Assessments under this Module</span></p>"""";&#xD;&#xA;        } &#xD;&#xA;        else &#xD;&#xA;        { &#xD;&#xA;            echo """""""";&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        ...&#xD;&#xA;    &#xD;&#xA;    }"
"PHP","-5834620191504518893",2,2,"18979037;18953885","18981421;18989450","1775700;1775700","2013-09-24 12:18:02;2013-09-24 18:38:18","0;0",101,FALSE,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    function grafice()&#xD;&#xA;    {     &#xD;&#xA;    /* pChart library inclusions */&#xD;&#xA;    include(""""../class/pData.class.php"""");&#xD;&#xA;    include(""""../class/pDraw.class.php"""");&#xD;&#xA;    include(""""../class/pImage.class.php"""");&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /* Create and populate the pData object */&#xD;&#xA;    &#xD;&#xA;    $MyData = new pData();  &#xD;&#xA;    &#xD;&#xA;    $MyData->addPoints(array(10,5,7,8), """"Probe 1"""");&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    $MyData->setSerieWeight(""""Probe 1"""",2);&#xD;&#xA;    &#xD;&#xA;    $MyData->setAxisName(0,""""Media Generala"""");&#xD;&#xA;    &#xD;&#xA;    $MyData->addPoints(array(""""Ian"""",""""Feb"""",""""Mar"""",""""Apr"""",""""Mai"""",""""Iun""""),""""Labels"""");&#xD;&#xA;    &#xD;&#xA;    $MyData->setSerieDescription(""""Labels"""",""""Luni"""");&#xD;&#xA;    &#xD;&#xA;    $MyData->setAbscissa(""""Labels"""");&#xD;&#xA;     $serieSettings = array(""""R""""=>255,""""G""""=>185,""""B""""=>11);&#xD;&#xA;     $MyData->setPalette(""""Probe 1"""",$serieSettings);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /* Create the pChart object */&#xD;&#xA;    &#xD;&#xA;    $myPicture = new pImage(500,230,$MyData);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /* Draw the background */&#xD;&#xA;    &#xD;&#xA;    $Settings = array(""""R""""=>248, """"G""""=>226, """"B""""=>174, """"Dash""""=>1, """"DashR""""=>190, """"DashG""""=>203, """"DashB""""=>107);&#xD;&#xA;    &#xD;&#xA;    $myPicture->drawFilledRectangle(0,0,700,230,$Settings);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /* Overlay with a gradient */&#xD;&#xA;    &#xD;&#xA;    $Settings = array(""""StartR""""=>238, """"StartG""""=>216, """"StartB""""=>174, """"EndR""""=>238, """"EndG""""=>216, """"EndB""""=>174, """"Alpha""""=>50);&#xD;&#xA;    &#xD;&#xA;    $myPicture->drawGradientArea(0,0,700,230,DIRECTION_VERTICAL,$Settings);&#xD;&#xA;    &#xD;&#xA;    $myPicture->drawGradientArea(0,0,700,20,DIRECTION_VERTICAL,array(""""StartR""""=>0,""""StartG""""=>0,""""StartB""""=>0,""""EndR""""=>50,""""EndG""""=>50,""""EndB""""=>50,""""Alpha""""=>80));&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /* Add a border to the picture */&#xD;&#xA;    &#xD;&#xA;    $myPicture->drawRectangle(0,0,499,229,array(""""R""""=>0,""""G""""=>0,""""B""""=>0));&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /* Write the picture title */ &#xD;&#xA;    &#xD;&#xA;    $myPicture->setFontProperties(array(""""FontName""""=>""""../fonts/Silkscreen.ttf"""",""""FontSize""""=>6));&#xD;&#xA;    &#xD;&#xA;    $myPicture->drawText(10,13,""""Evolutia Mediei Generale"""",array(""""R""""=>255,""""G""""=>255,""""B""""=>255));&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /* Write the chart title */ &#xD;&#xA;    &#xD;&#xA;    $myPicture->setFontProperties(array(""""FontName""""=>""""../fonts/Forgotte.ttf"""",""""FontSize""""=>11));&#xD;&#xA;    &#xD;&#xA;    $myPicture->drawText(250,55,""""Media Generala"""",array(""""FontSize""""=>20,""""Align""""=>TEXT_ALIGN_BOTTOMMIDDLE));&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /* Draw the scale and the 1st chart */&#xD;&#xA;    &#xD;&#xA;    $AxisBoundaries = array(0=>array(""""Min""""=>0,""""Max""""=>10));&#xD;&#xA;    $scaleSettings  = array(""""DrawSubTicks""""=>TRUE,""""Mode""""=>SCALE_MODE_MANUAL, """"ManualScale""""=>$AxisBoundaries);&#xD;&#xA;    &#xD;&#xA;    $myPicture->setGraphArea(60,60,450,190);&#xD;&#xA;    &#xD;&#xA;    $myPicture->drawFilledRectangle(60,60,450,190,array(""""R""""=>0,""""G""""=>0,""""B""""=>0,""""Surrounding""""=>-200,""""Alpha""""=>10));&#xD;&#xA;    &#xD;&#xA;    $myPicture->drawScale($scaleSettings);&#xD;&#xA;    &#xD;&#xA;    $myPicture->setShadow(TRUE,array(""""X""""=>1,""""Y""""=>1,""""R""""=>0,""""G""""=>0,""""B""""=>0,""""Alpha""""=>10));&#xD;&#xA;    &#xD;&#xA;    $myPicture->setFontProperties(array(""""FontName""""=>""""../fonts/pf_arma_five.ttf"""",""""FontSize""""=>10,""""R""""=>0,""""G""""=>0,""""B""""=>0));&#xD;&#xA;    &#xD;&#xA;    $myPicture->drawLineChart(array(""""DisplayValues""""=>TRUE,""""DisplayR""""=>0, """"DisplayG""""=>0, """"DisplayB""""=>0, """"DisplayOffset""""=>10));&#xD;&#xA;    &#xD;&#xA;    $myPicture->setShadow(FALSE);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /* Render the picture (choose the best way) */&#xD;&#xA;    &#xD;&#xA;    /* $myPicture->**( I DELETED ThIS)--> autoOutput <---** (""""pictures/example.drawLineChart.png""""); and added */&#xD;&#xA;     $myPicture->render(""""pictures/example.drawLineChart.png"""");&#xD;&#xA;    }"
"PHP","-3731282850840207788",2,2,"36173190;36157656","36173670;36279361","1237603;5821949","2016-03-23 08:59:19;2016-03-29 08:40:11","0;0",39,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"        <?php&#xD;&#xA;            $previous = false;&#xD;&#xA;            while ($val = mysqli_fetch_array($result)) {&#xD;&#xA;    &#xD;&#xA;                // when group is changing, end previous and start new&#xD;&#xA;                if ($previous <> $val['pub_year']) {&#xD;&#xA;    &#xD;&#xA;                    // end previous group html markup&#xD;&#xA;                    if ($previous !== false) {&#xD;&#xA;                        echo '</div>';&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    $previous = $val['pub_year'];&#xD;&#xA;                    $year = $previous;&#xD;&#xA;    &#xD;&#xA;                    echo '<button type=""""button"""" class=""""btn btn-info"""" data-toggle=""""collapse"""" data-target=""""#' . $year . '>' . $year . '</button>';&#xD;&#xA;                    echo '<div id=""""' . $year . '"""" class=""""collapse"""">';&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                // always output data inside group&#xD;&#xA;                $Temp = highlight(""""person1"""",$val['pub_publi'],""""0000FF"""");&#xD;&#xA;                $Temp = highlight(""""person2"""",$Temp,""""0000FF"""");&#xD;&#xA;                $Temp = highlight(""""person3"""",$Temp,""""0000FF"""");&#xD;&#xA;                $Temp = highlight(""""person4"""",$Temp,""""0000FF"""");&#xD;&#xA;                $Temp = highlight(""""person5"""",$Temp,""""0000FF"""");&#xD;&#xA;                $Temp = highlight(""""person6"""",$Temp,""""0000FF"""");&#xD;&#xA;                $Temp = highlight(""""person7"""",$Temp,""""0000FF"""");&#xD;&#xA;                $Temp = highlight(""""person8"""",$Temp,""""0000FF"""");&#xD;&#xA;                $Temp = highlight(""""person9"""",$Temp,""""0000FF"""");&#xD;&#xA;                $Temp = highlight(""""person10"""",$Temp,""""0000FF"""");&#xD;&#xA;    &#xD;&#xA;                echo $Temp . '<br>';&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // end last group html markup&#xD;&#xA;            if ($previous !== false) {&#xD;&#xA;                echo '</div>';&#xD;&#xA;            }&#xD;&#xA;    ?>"
"PHP","1553789537228872134",3,3,"45715916;49863285;45037405","48290327;49863285;45041602","9226374;8047947;3730754","2018-01-16 21:46:03;2018-04-16 17:41:35;2017-07-11 17:59:48","0;2;4",60,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"	add_filter( 'woocommerce_variation_option_name', 'customizing_variations_terms_name', 10, 1 );&#xD;&#xA;	function customizing_variations_terms_name( $term_name ){&#xD;&#xA;	&#xD;&#xA;		if(is_admin())&#xD;&#xA;			return $term_name;&#xD;&#xA;	&#xD;&#xA;		global $product;&#xD;&#xA;		$second_loop_stoped = false;&#xD;&#xA;	&#xD;&#xA;		// Get available product variations&#xD;&#xA;		$product_variations = $product->get_available_variations();&#xD;&#xA;	&#xD;&#xA;		// Iterating through each available product variation&#xD;&#xA;		foreach($product_variations as $variation){&#xD;&#xA;	&#xD;&#xA;			$variation_id = $variation['variation_id'];&#xD;&#xA;			$variation_obj = new WC_Product_Variation( $variation_id );&#xD;&#xA;	&#xD;&#xA;			## WOOCOMMERCE RETRO COMPATIBILITY ##&#xD;&#xA;			if ( version_compare( WC_VERSION, '3.0', '<' ) ) # BEFORE Version 3 (older)&#xD;&#xA;			{&#xD;&#xA;				$stock_status = $variation_obj->stock_status;&#xD;&#xA;				$stock_qty = intval($variation_obj->stock);&#xD;&#xA;	&#xD;&#xA;				// The attributes WC slug key and slug value for this variation&#xD;&#xA;				$attributes_arr = $variation_obj->get_variation_attributes();&#xD;&#xA;			}&#xD;&#xA;			else # For newest verions: 3.0+ (and Up)&#xD;&#xA;			{&#xD;&#xA;	    		$stock_status = $variation_obj->get_stock_status();&#xD;&#xA;				$stock_qty = $variation_obj->get_stock_quantity();&#xD;&#xA;	&#xD;&#xA;				// The attributes taxonomy key and slug value for this variation&#xD;&#xA;				$attributes_arr = $variation_obj->get_attributes();&#xD;&#xA;			}&#xD;&#xA;	&#xD;&#xA;			if(count($attributes_arr) != 1) // Works only for 1 attribute set in the product&#xD;&#xA;				return $term_name;&#xD;&#xA;	&#xD;&#xA;			// Get the terms for this attribute&#xD;&#xA;			foreach( $attributes_arr as $attr_key => $term_slug){&#xD;&#xA;				// Get the attribute taxonomy&#xD;&#xA;				$term_key = str_replace('attribute_', '', $attr_key );&#xD;&#xA;	&#xD;&#xA;				// get the corresponding term object&#xD;&#xA;				$term_obj = get_term_by( 'slug', $term_slug, $term_key );&#xD;&#xA;				if( $term_obj->name == $term_name ){ // If the term name matches we stop the loops&#xD;&#xA;					$second_loop_stoped = true;&#xD;&#xA;					break;&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;			if($second_loop_stoped)&#xD;&#xA;				break;&#xD;&#xA;		}&#xD;&#xA;		if( $stock_qty>0 )&#xD;&#xA;			return $term_name .= ' - ' . $stock_status . ' ('.$stock_qty.')';&#xD;&#xA;		else&#xD;&#xA;			return $term_name .= ' - ' . $stock_status;&#xD;&#xA;	&#xD;&#xA;	}"
"PHP","-462359779758181380",2,2,"46047527;46050841","46047527;46050841","8561514;8561514","2017-09-05 05:26:00;2017-09-05 08:53:31","0;0",122,FALSE,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    /*----------------- START OF FORM -----------------     */    &#xD;&#xA;        &#xD;&#xA;        @import url(http://fonts.googleapis.com/css?family=Open+Sans:400italic,400,300,600);&#xD;&#xA;    * {&#xD;&#xA;    	margin:0;&#xD;&#xA;    	padding:0;&#xD;&#xA;    	box-sizing:border-box;&#xD;&#xA;    	-webkit-box-sizing:border-box;&#xD;&#xA;    	-moz-box-sizing:border-box;&#xD;&#xA;    	-webkit-font-smoothing:antialiased;&#xD;&#xA;    	-moz-font-smoothing:antialiased;&#xD;&#xA;    	-o-font-smoothing:antialiased;&#xD;&#xA;    	font-smoothing:antialiased;&#xD;&#xA;    	text-rendering:optimizeLegibility;&#xD;&#xA;    }&#xD;&#xA;    body {&#xD;&#xA;    	font-family:""""Open Sans"""", Helvetica, Arial, sans-serif;&#xD;&#xA;    	font-weight:300;&#xD;&#xA;    	font-size: 12px;&#xD;&#xA;    	line-height:30px;&#xD;&#xA;    	color:#777;&#xD;&#xA;    /*	background:#0CF;*/&#xD;&#xA;    }&#xD;&#xA;    .error {&#xD;&#xA;        color: red;&#xD;&#xA;    }&#xD;&#xA;    .success {&#xD;&#xA;        color: #ff9966;&#xD;&#xA;        text-align: center;&#xD;&#xA;        font-weight: bold;&#xD;&#xA;        font-size: 14px;&#xD;&#xA;    }&#xD;&#xA;    .container5 {&#xD;&#xA;    	max-width:500px;&#xD;&#xA;    	width:100%;&#xD;&#xA;    	margin:0 auto;&#xD;&#xA;    	position:relative;&#xD;&#xA;        float: left;&#xD;&#xA;    }&#xD;&#xA;    #contact input[type=""""text""""], #contact input[type=""""email""""], #contact input[type=""""tel""""], #contact input[type=""""url""""], #contact textarea, #contact button[type=""""submit""""] { font:400 12px/16px """"Open Sans"""", Helvetica, Arial, sans-serif; }&#xD;&#xA;    #contact {&#xD;&#xA;    	background:#F9F9F9;&#xD;&#xA;    	padding:25px;&#xD;&#xA;    	margin: 0;&#xD;&#xA;    }&#xD;&#xA;    #contact h3 {&#xD;&#xA;    	color: #F96;&#xD;&#xA;    	display: block;&#xD;&#xA;    	font-size: 30px;&#xD;&#xA;    	font-weight: 400;&#xD;&#xA;    }&#xD;&#xA;    #contact h4 {&#xD;&#xA;    	margin:5px 0 15px;&#xD;&#xA;    	display:block;&#xD;&#xA;    	font-size:13px;&#xD;&#xA;    }&#xD;&#xA;    fieldset {&#xD;&#xA;    	border: medium none !important;&#xD;&#xA;    	margin: 0 0 10px;&#xD;&#xA;    	min-width: 100%;&#xD;&#xA;    	padding: 0;&#xD;&#xA;    	width: 100%;&#xD;&#xA;    }&#xD;&#xA;    #contact input[type=""""text""""], #contact input[type=""""email""""], #contact input[type=""""tel""""], #contact input[type=""""url""""], #contact textarea {&#xD;&#xA;    	width:100%;&#xD;&#xA;    	border:1px solid #CCC;&#xD;&#xA;    	background:#FFF;&#xD;&#xA;    	margin:0 0 5px;&#xD;&#xA;    	padding:10px;&#xD;&#xA;    }&#xD;&#xA;    #contact input[type=""""text""""]:hover, #contact input[type=""""email""""]:hover, #contact input[type=""""tel""""]:hover, #contact input[type=""""url""""]:hover, #contact textarea:hover {&#xD;&#xA;    	-webkit-transition:border-color 0.3s ease-in-out;&#xD;&#xA;    	-moz-transition:border-color 0.3s ease-in-out;&#xD;&#xA;    	transition:border-color 0.3s ease-in-out;&#xD;&#xA;    	border:1px solid #AAA;&#xD;&#xA;    }&#xD;&#xA;    #contact textarea {&#xD;&#xA;    	height:100px;&#xD;&#xA;    	max-width:100%;&#xD;&#xA;      resize:none;&#xD;&#xA;    }&#xD;&#xA;    #contact button[type=""""submit""""] {&#xD;&#xA;    	cursor:pointer;&#xD;&#xA;    	width:100%;&#xD;&#xA;    	border:none;&#xD;&#xA;    	background:#0CF;&#xD;&#xA;    	color:#FFF;&#xD;&#xA;    	margin:0 0 5px;&#xD;&#xA;    	padding:10px;&#xD;&#xA;    	font-size:15px;&#xD;&#xA;    }&#xD;&#xA;    #contact button[type=""""submit""""]:hover {&#xD;&#xA;    	background:#09C;&#xD;&#xA;    	-webkit-transition:background 0.3s ease-in-out;&#xD;&#xA;    	-moz-transition:background 0.3s ease-in-out;&#xD;&#xA;    	transition:background-color 0.3s ease-in-out;&#xD;&#xA;    }&#xD;&#xA;    #contact button[type=""""submit""""]:active { box-shadow:inset 0 1px 3px rgba(0, 0, 0, 0.5); }&#xD;&#xA;    #contact input:focus, #contact textarea:focus {&#xD;&#xA;    	outline:0;&#xD;&#xA;    	border:1px solid #999;&#xD;&#xA;    }&#xD;&#xA;    ::-webkit-input-placeholder {&#xD;&#xA;     color:#888;&#xD;&#xA;    }&#xD;&#xA;    :-moz-placeholder {&#xD;&#xA;     color:#888;&#xD;&#xA;    }&#xD;&#xA;    ::-moz-placeholder {&#xD;&#xA;     color:#888;&#xD;&#xA;    }&#xD;&#xA;    :-ms-input-placeholder {&#xD;&#xA;     color:#888;&#xD;&#xA;    }&#xD;&#xA;    #sendButton{&#xD;&#xA;        background-color: rgba(204, 204, 204, 0.52);&#xD;&#xA;        color: black;&#xD;&#xA;        width: 60px;&#xD;&#xA;        font-weight: bold;&#xD;&#xA;    }&#xD;&#xA;        &#xD;&#xA;    /*----------------- END OF FORM -----------------     */  "
"HTMLCSS","8348020811665799924",2,2,"51897969;51941548","51897969;51941548","10136948;10136948","2018-08-17 14:52:38;2018-08-21 04:24:44","0;-1",61,FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    {% extends """"projects/test.html"""" %}&#xD;&#xA;    &#xD;&#xA;    {% block javascript %}&#xD;&#xA;    &#xD;&#xA;    <form action=""""{% url 'create_post:create_projects' %}"""" method=""""POST"""" enctype=""""multipart/form-data"""">&#xD;&#xA;      &#xD;&#xA;        {% csrf_token %}  &#xD;&#xA;    &#xD;&#xA;        {% for hidden in project_form.hidden_fields %}&#xD;&#xA;        {{ hidden }}&#xD;&#xA;        {% endfor %}&#xD;&#xA;    &#xD;&#xA;        {% for field in project_form %}&#xD;&#xA;        {{ field.errors }}&#xD;&#xA;        {{ field }} <br />&#xD;&#xA;        {% endfor %}&#xD;&#xA;    &#xD;&#xA;        <input type=""""submit"""" value=""""OK"""">&#xD;&#xA;        &#xD;&#xA;    {% load static %}&#xD;&#xA;    &#xD;&#xA;    {# JQUERY FILE UPLOAD SCRIPTS #}&#xD;&#xA;    <script src=""""{% static 'projects/js/jquery-file-upload/vendor/jquery.ui.widget.js' %}""""></script>&#xD;&#xA;    <script src=""""{% static 'projects/js/jquery-file-upload/jquery.iframe-transport.js' %}""""></script>&#xD;&#xA;    <script src=""""{% static 'projects/js/jquery-file-upload/jquery.fileupload.js' %}""""></script>&#xD;&#xA;    &#xD;&#xA;    {# PHOTOS PAGE SCRIPTS #}&#xD;&#xA;    <script src=""""{% static 'projects/js/basic-upload.js' %}""""></script>&#xD;&#xA;    &#xD;&#xA;    {# 1. BUTTON TO TRIGGER THE ACTION #}&#xD;&#xA;    <button type=""""button"""" class=""""btn btn-primary js-upload-photos"""">&#xD;&#xA;      <span class=""""glyphicon glyphicon-cloud-upload""""></span> Upload photos&#xD;&#xA;    </button>&#xD;&#xA;    &#xD;&#xA;    {# 2. FILE INPUT TO BE USED BY THE PLUG-IN #}&#xD;&#xA;    <input id=""""fileupload"""" type=""""file"""" name=""""p_file"""" multiple&#xD;&#xA;           style=""""display: none;""""&#xD;&#xA;           data-url=""""{% url 'create_post:create_projects' %}""""&#xD;&#xA;           data-form-data='{""""csrfmiddlewaretoken"""": """"{{ csrf_token }}""""}'>&#xD;&#xA;    &#xD;&#xA;    {# 3. TABLE TO DISPLAY THE UPLOADED PHOTOS #}&#xD;&#xA;    <table id=""""gallery"""" class=""""table table-bordered"""">&#xD;&#xA;      <thead>&#xD;&#xA;        <tr>&#xD;&#xA;          <th>Photo</th>&#xD;&#xA;        </tr>&#xD;&#xA;      </thead>&#xD;&#xA;      <tbody>&#xD;&#xA;        {% for p_photo in p_photos %}&#xD;&#xA;          <tr>&#xD;&#xA;            <td><a href=""""{{ p_photo.file.url }}"""">{{ p_photo.file.name }}</a></td>&#xD;&#xA;          </tr>&#xD;&#xA;        {% endfor %}&#xD;&#xA;      </tbody>&#xD;&#xA;    </table>&#xD;&#xA;    &#xD;&#xA;        <h1>hahahaha</h1>&#xD;&#xA;    &#xD;&#xA;    </form>&#xD;&#xA;    &#xD;&#xA;    {% endblock %}"
"HTMLCSS","-1524339498175334164",2,2,"46539290;37270835","46539290;41635851","7131133;6565832","2017-10-03 07:28:47;2017-01-13 13:34:24","0;3",36,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    @font-face {&#xD;&#xA;       font-family: 'Material Icons';&#xD;&#xA;       font-style: normal;&#xD;&#xA;       font-weight: 400;&#xD;&#xA;       src: url(MaterialIcons-Regular.eot); /* For IE6-8 */&#xD;&#xA;       src: local('Material Icons'),&#xD;&#xA;            local('MaterialIcons-Regular'),&#xD;&#xA;            url(MaterialIcons-Regular.woff2) format('woff2'),&#xD;&#xA;            url(MaterialIcons-Regular.woff) format('woff'),&#xD;&#xA;            url(MaterialIcons-Regular.ttf) format('truetype');&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .material-icons {&#xD;&#xA;      font-family: 'Material Icons';&#xD;&#xA;      font-weight: normal;&#xD;&#xA;      font-style: normal;&#xD;&#xA;      font-size: 24px;  /* Preferred icon size */&#xD;&#xA;      display: inline-block;&#xD;&#xA;      line-height: 1;&#xD;&#xA;      text-transform: none;&#xD;&#xA;      letter-spacing: normal;&#xD;&#xA;      word-wrap: normal;&#xD;&#xA;      white-space: nowrap;&#xD;&#xA;      direction: ltr;&#xD;&#xA;    &#xD;&#xA;      /* Support for all WebKit browsers. */&#xD;&#xA;      -webkit-font-smoothing: antialiased;&#xD;&#xA;      /* Support for Safari and Chrome. */&#xD;&#xA;      text-rendering: optimizeLegibility;&#xD;&#xA;    &#xD;&#xA;      /* Support for Firefox. */&#xD;&#xA;      -moz-osx-font-smoothing: grayscale;&#xD;&#xA;    &#xD;&#xA;      /* Support for IE. */&#xD;&#xA;      font-feature-settings: 'liga';&#xD;&#xA;    }"
"HTMLCSS","6326766648642247144",2,2,"44880746;44878322","44880746;44878322","3521315;3521315","2017-07-03 08:17:09;2017-07-03 05:26:02","0;0",60,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    body {&#xD;&#xA;      width: 960px;&#xD;&#xA;      margin: 0 auto 0 auto;&#xD;&#xA;      box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .container {&#xD;&#xA;    	margin: auto;&#xD;&#xA;    	padding-left: 10px;&#xD;&#xA;    	padding-right: 10px;&#xD;&#xA;    }&#xD;&#xA;    /* HOME PAGE */&#xD;&#xA;    &#xD;&#xA;    section#home {&#xD;&#xA;    &#xD;&#xA;    	height: 400px;&#xD;&#xA;    	max-width: 100%;&#xD;&#xA;    	background: url(../images/homepagemain.jpg) center center no-repeat;&#xD;&#xA;    	background-size: 960px;&#xD;&#xA;    	background-position: center;&#xD;&#xA;    	overflow: hidden;&#xD;&#xA;    	&#xD;&#xA;    	position: relative;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    .showreel {&#xD;&#xA;      height: 50px;&#xD;&#xA;      width: 960px;&#xD;&#xA;      position: absolute;&#xD;&#xA;      background-color: black;&#xD;&#xA;      bottom: 0;&#xD;&#xA;      padding: 0 30px;&#xD;&#xA;      justify-content: space-between;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .showreel, .showreel > div {&#xD;&#xA;      display: flex;&#xD;&#xA;      align-items: center;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .showreel p {&#xD;&#xA;      font-size: 15px;&#xD;&#xA;      font-weight: normal;&#xD;&#xA;      margin: 0;&#xD;&#xA;      color: #ffffff;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .showreel i {&#xD;&#xA;      color: #ffffff;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .seemore i {&#xD;&#xA;      margin-right: 30px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .seeour i {&#xD;&#xA;      margin-left: 30px;&#xD;&#xA;    }"
"HTMLCSS","823674188452616841",2,2,"32785157;32783284","32785157;32783284","5376040;5321822","2015-09-25 15:02:05;2015-09-25 13:25:39","-3;0",51,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    $(document).ready(function() {&#xD;&#xA;      $(""""#type :checkbox"""").click(function() {&#xD;&#xA;        $(""""td"""").parent().hide();&#xD;&#xA;        $(""""#type :checkbox:checked"""").each(function() {&#xD;&#xA;          $(""""."""" + $(this).val()).parent().show();&#xD;&#xA;        });&#xD;&#xA;      });&#xD;&#xA;      $(""""#fee :checkbox"""").click(function() {&#xD;&#xA;        $(""""td"""").parent().hide();&#xD;&#xA;        $(""""#fee :checkbox:checked"""").each(function() {&#xD;&#xA;          $(""""."""" + $(this).val()).parent().show();&#xD;&#xA;        });&#xD;&#xA;      });&#xD;&#xA;    });&#xD;&#xA;    var repayment = function() {&#xD;&#xA;    };&#xD;&#xA;    window.onload = function() {&#xD;&#xA;      document.repaymentcalc.homevalue.onchange = repayment;&#xD;&#xA;      document.repaymentcalc.loanamount.onchange = repayment;&#xD;&#xA;      document.repaymentcalc.numberpayments.onchange = function() {&#xD;&#xA;        $('#years').html(this.value + ' years');&#xD;&#xA;      };&#xD;&#xA;      makeSomething();&#xD;&#xA;    };&#xD;&#xA;    function makeSomething() {&#xD;&#xA;      $('tbody tr').each(function(idx, row) {&#xD;&#xA;        var $row = $(row);&#xD;&#xA;        var initialRateCell = $row.find('td')[2];&#xD;&#xA;        var repaymentCell = $row.find('td').last()&#xD;&#xA;        var rate = parseFloat($(initialRateCell).html());&#xD;&#xA;        var repaymentVal = computeRepayment(rate);&#xD;&#xA;        $(repaymentCell).html(repaymentVal.repayment);&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;    $(""""#myForm :input"""").change(function() {&#xD;&#xA;      makeSomething();&#xD;&#xA;    });&#xD;&#xA;    function computeRepayment(rate) {&#xD;&#xA;      var x = parseInt(document.repaymentcalc.loanamount.value, 10);&#xD;&#xA;      var y = parseInt(rate * 100, 10) / 120000;&#xD;&#xA;      var z = parseInt(document.repaymentcalc.numberpayments.value, 10) * 12;&#xD;&#xA;      var h = parseInt(document.repaymentcalc.homevalue.value, 10);&#xD;&#xA;      var repayment = y * x * Math.pow((1 + y), z) / (Math.pow((1 + y), z) - 1);&#xD;&#xA;      var loantovalue = x / h * 100;&#xD;&#xA;      var year = z / 12;&#xD;&#xA;      return {&#xD;&#xA;        repayment: repayment.toFixed(2),&#xD;&#xA;        loantovalue: loantovalue,&#xD;&#xA;        year: year&#xD;&#xA;      }&#xD;&#xA;    }"
"HTMLCSS","8830973722861729642",2,2,"38941150;40436863","38941150;40436976","1063287;1561164","2016-08-14 10:07:05;2016-11-05 10:10:00","0;0",53,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    /* SQUARED THREE */&#xD;&#xA;    .squaredThree {&#xD;&#xA;    	width: 20px;	&#xD;&#xA;    	margin: 20px auto;&#xD;&#xA;    	position: relative;&#xD;&#xA;    }&#xD;&#xA;    .squaredThree label {&#xD;&#xA;    	cursor: pointer;&#xD;&#xA;    	position: absolute;&#xD;&#xA;    	width: 20px;&#xD;&#xA;    	height: 20px;&#xD;&#xA;    	top: 0;&#xD;&#xA;    	border-radius: 4px;&#xD;&#xA;    	-webkit-box-shadow: inset 0px 1px 1px rgba(0,0,0,0.5), 0px 1px 0px rgba(255,255,255,.4);&#xD;&#xA;    	-moz-box-shadow: inset 0px 1px 1px rgba(0,0,0,0.5), 0px 1px 0px rgba(255,255,255,.4);&#xD;&#xA;    	box-shadow: inset 0px 1px 1px rgba(0,0,0,0.5), 0px 1px 0px rgba(255,255,255,.4);&#xD;&#xA;    	background: -webkit-linear-gradient(top, #222 0%, #45484d 100%);&#xD;&#xA;    	background: -moz-linear-gradient(top, #222 0%, #45484d 100%);&#xD;&#xA;    	background: -o-linear-gradient(top, #222 0%, #45484d 100%);&#xD;&#xA;    	background: -ms-linear-gradient(top, #222 0%, #45484d 100%);&#xD;&#xA;    	background: linear-gradient(top, #222 0%, #45484d 100%);&#xD;&#xA;    	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#222', endColorstr='#45484d',GradientType=0 );&#xD;&#xA;    }&#xD;&#xA;    .squaredThree label:after {&#xD;&#xA;    	-ms-filter: """"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"""";&#xD;&#xA;    	filter: alpha(opacity=0);&#xD;&#xA;    	opacity: 0;&#xD;&#xA;    	content: '';&#xD;&#xA;    	position: absolute;&#xD;&#xA;    	width: 9px;&#xD;&#xA;    	height: 5px;&#xD;&#xA;    	background: transparent;&#xD;&#xA;    	top: 4px;&#xD;&#xA;    	left: 4px;&#xD;&#xA;    	border: 3px solid #fcfff4;&#xD;&#xA;    	border-top: none;&#xD;&#xA;    	border-right: none;&#xD;&#xA;    	-webkit-transform: rotate(-45deg);&#xD;&#xA;    	-moz-transform: rotate(-45deg);&#xD;&#xA;    	-o-transform: rotate(-45deg);&#xD;&#xA;    	-ms-transform: rotate(-45deg);&#xD;&#xA;    	transform: rotate(-45deg);&#xD;&#xA;    }&#xD;&#xA;    .squaredThree label:hover::after {&#xD;&#xA;    	-ms-filter: """"progid:DXImageTransform.Microsoft.Alpha(Opacity=30)"""";&#xD;&#xA;    	filter: alpha(opacity=30);&#xD;&#xA;    	opacity: 0.3;&#xD;&#xA;    }&#xD;&#xA;    .squaredThree input[type=checkbox]:checked + label:after {&#xD;&#xA;    	-ms-filter: """"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)"""";&#xD;&#xA;    	filter: alpha(opacity=100);&#xD;&#xA;    	opacity: 1;&#xD;&#xA;    }"
"CSharp","-9090919791131675536",2,2,"17051368;45578242","45634394;45584476","6074376;6074376","2017-08-11 11:43:14;2017-08-09 07:41:33","0;1",45,FALSE,FALSE,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    public void createPdf(String src, String dest, String resources) throws IOException {&#xD;&#xA;        try {&#xD;&#xA;            FileOutputStream outputStream = new FileOutputStream(dest);&#xD;&#xA; &#xD;&#xA;            WriterProperties writerProperties = new WriterProperties();&#xD;&#xA;            //Add metadata&#xD;&#xA;            writerProperties.addXmpMetadata();&#xD;&#xA; &#xD;&#xA;            PdfWriter pdfWriter = new PdfWriter(outputStream, writerProperties);&#xD;&#xA; &#xD;&#xA;            PdfDocument pdfDoc = new PdfDocument(pdfWriter);&#xD;&#xA;            pdfDoc.getCatalog().setLang(new PdfString(""""en-US""""));&#xD;&#xA;            //Set the document to be tagged&#xD;&#xA;            pdfDoc.setTagged();&#xD;&#xA;            pdfDoc.getCatalog().setViewerPreferences(new PdfViewerPreferences().setDisplayDocTitle(true));&#xD;&#xA; &#xD;&#xA;            //Set meta tags&#xD;&#xA;            PdfDocumentInfo pdfMetaData = pdfDoc.getDocumentInfo();&#xD;&#xA;            pdfMetaData.setAuthor(""""Samuel Huylebroeck"""");&#xD;&#xA;            pdfMetaData.addCreationDate();&#xD;&#xA;            pdfMetaData.getProducer();&#xD;&#xA;            pdfMetaData.setCreator(""""iText Software"""");&#xD;&#xA;            pdfMetaData.setKeywords(""""example, accessibility"""");&#xD;&#xA;            pdfMetaData.setSubject(""""PDF accessibility"""");&#xD;&#xA;            //Title is derived from html&#xD;&#xA; &#xD;&#xA;            // pdf conversion&#xD;&#xA;            ConverterProperties props = new ConverterProperties();&#xD;&#xA;            FontProvider fp = new FontProvider();&#xD;&#xA;            fp.addStandardPdfFonts();&#xD;&#xA;            fp.addDirectory(resources);//The noto-nashk font file (.ttf extension) is placed in the resources&#xD;&#xA; &#xD;&#xA;            props.setFontProvider(fp);&#xD;&#xA;            props.setBaseUri(resources);&#xD;&#xA;            //Setup custom tagworker factory for better tagging of headers&#xD;&#xA;            DefaultTagWorkerFactory tagWorkerFactory = new AccessibilityTagWorkerFactory();&#xD;&#xA;            props.setTagWorkerFactory(tagWorkerFactory);&#xD;&#xA; &#xD;&#xA;            HtmlConverter.convertToPdf(new FileInputStream(src), pdfDoc, props);&#xD;&#xA;            pdfDoc.close();&#xD;&#xA; &#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA;    }"
"CSharp","-4232678236605313742",2,2,"19235599;19234915","19235599;19234915","2217201;2217201","2013-10-07 22:04:42;2013-10-07 21:14:17","0;-1",71,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    using System;&#xD;&#xA;    using System.Collections.Generic;&#xD;&#xA;    using System.ComponentModel;&#xD;&#xA;    using System.Data;&#xD;&#xA;    using System.Drawing;&#xD;&#xA;    using System.Linq;&#xD;&#xA;    using System.Text;&#xD;&#xA;    using System.Windows.Forms;&#xD;&#xA;    namespace CatAndMouse&#xD;&#xA;    {&#xD;&#xA;        class Cat: Moveable&#xD;&#xA;        {&#xD;&#xA;            Random myCLoc = new Random();&#xD;&#xA;            private Moveable myCatMove;&#xD;&#xA;            public Point p = new Point(100, 100);&#xD;&#xA;            int dir = 0;&#xD;&#xA;    &#xD;&#xA;            public void Move(int n)&#xD;&#xA;            {&#xD;&#xA;                if (dir == 0)&#xD;&#xA;                {&#xD;&#xA;                    p.Y = p.Y - n;&#xD;&#xA;                }&#xD;&#xA;                if (dir == 1)&#xD;&#xA;                {&#xD;&#xA;                    p.X = p.X + n;&#xD;&#xA;                }&#xD;&#xA;                if (dir == 2)&#xD;&#xA;                {&#xD;&#xA;                    p.Y = p.Y + n;&#xD;&#xA;                }&#xD;&#xA;                if (dir == 3)&#xD;&#xA;                {&#xD;&#xA;                    p.X = p.X - n;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            private void KeyDown(KeyEventArgs e)&#xD;&#xA;            {&#xD;&#xA;                if (e.KeyCode == Keys.Up)&#xD;&#xA;                {&#xD;&#xA;                    dir = 0;&#xD;&#xA;                }&#xD;&#xA;                if (e.KeyCode == Keys.Right)&#xD;&#xA;                {&#xD;&#xA;                    dir = 1;&#xD;&#xA;                }&#xD;&#xA;                if (e.KeyCode == Keys.Down)&#xD;&#xA;                {&#xD;&#xA;                    dir = 2;&#xD;&#xA;                }&#xD;&#xA;                if (e.KeyCode == Keys.Left)&#xD;&#xA;                {&#xD;&#xA;                    dir = 3;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            public void changeDirection()&#xD;&#xA;            {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            public Point getLocation()&#xD;&#xA;            {&#xD;&#xA;                return p;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            public void paint(PaintEventArgs e)&#xD;&#xA;            {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
"CSharp","345905145643070774",2,2,"1427484;9830090","35171113;35171050","1805776;1805776","2016-02-03 07:40:03;2016-02-03 07:36:24","1;0",144,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    public static class Helper&#xD;&#xA;    {&#xD;&#xA;        &#xD;&#xA;        public static List<T> DataTableToList<T>(this DataTable dataTable) where T : new()&#xD;&#xA;        {&#xD;&#xA;            var dataList = new List<T>();&#xD;&#xA;            //Define what attributes to be read from the class&#xD;&#xA;            const System.Reflection.BindingFlags flags = System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance;&#xD;&#xA;            //Read Attribute Names and Types&#xD;&#xA;            var objFieldNames = typeof(T).GetProperties(flags).Cast<System.Reflection.PropertyInfo>().&#xD;&#xA;                Select(item => new&#xD;&#xA;                {&#xD;&#xA;                    Name = item.Name,&#xD;&#xA;                    Type = Nullable.GetUnderlyingType(item.PropertyType) ?? item.PropertyType&#xD;&#xA;                }).ToList();&#xD;&#xA;            //Read Datatable column names and types&#xD;&#xA;            var dtlFieldNames = dataTable.Columns.Cast<DataColumn>().&#xD;&#xA;                Select(item => new&#xD;&#xA;                {&#xD;&#xA;                    Name = item.ColumnName,&#xD;&#xA;                    Type = item.DataType&#xD;&#xA;                }).ToList();&#xD;&#xA;            foreach (DataRow dataRow in dataTable.AsEnumerable().ToList())&#xD;&#xA;            {&#xD;&#xA;                var classObj = new T();&#xD;&#xA;                foreach (var dtField in dtlFieldNames)&#xD;&#xA;                {&#xD;&#xA;                    System.Reflection.PropertyInfo propertyInfos = classObj.GetType().GetProperty(dtField.Name);&#xD;&#xA;                    var field = objFieldNames.Find(x => x.Name == dtField.Name);&#xD;&#xA;                    if (field != null)&#xD;&#xA;                    {&#xD;&#xA;                        &#xD;&#xA;                        if (propertyInfos.PropertyType == typeof(DateTime))&#xD;&#xA;                        {&#xD;&#xA;                            propertyInfos.SetValue&#xD;&#xA;                            (classObj, convertToDateTime(dataRow[dtField.Name]), null);&#xD;&#xA;                        }&#xD;&#xA;                        else if (propertyInfos.PropertyType == typeof(Nullable<DateTime>))&#xD;&#xA;                        {&#xD;&#xA;                            propertyInfos.SetValue&#xD;&#xA;                            (classObj, convertToDateTime(dataRow[dtField.Name]), null);&#xD;&#xA;                        }&#xD;&#xA;                        else if (propertyInfos.PropertyType == typeof(int))&#xD;&#xA;                        {&#xD;&#xA;                            propertyInfos.SetValue&#xD;&#xA;                            (classObj, ConvertToInt(dataRow[dtField.Name]), null);&#xD;&#xA;                        }&#xD;&#xA;                        else if (propertyInfos.PropertyType == typeof(long))&#xD;&#xA;                        {&#xD;&#xA;                            propertyInfos.SetValue&#xD;&#xA;                            (classObj, ConvertToLong(dataRow[dtField.Name]), null);&#xD;&#xA;                        }&#xD;&#xA;                        else if (propertyInfos.PropertyType == typeof(decimal))&#xD;&#xA;                        {&#xD;&#xA;                            propertyInfos.SetValue&#xD;&#xA;                            (classObj, ConvertToDecimal(dataRow[dtField.Name]), null);&#xD;&#xA;                        }&#xD;&#xA;                        else if (propertyInfos.PropertyType == typeof(String))&#xD;&#xA;                        {&#xD;&#xA;                            if (dataRow[dtField.Name].GetType() == typeof(DateTime))&#xD;&#xA;                            {&#xD;&#xA;                                propertyInfos.SetValue&#xD;&#xA;                                (classObj, ConvertToDateString(dataRow[dtField.Name]), null);&#xD;&#xA;                            }&#xD;&#xA;                            else&#xD;&#xA;                            {&#xD;&#xA;                                propertyInfos.SetValue&#xD;&#xA;                                (classObj, ConvertToString(dataRow[dtField.Name]), null);&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        else&#xD;&#xA;                        {&#xD;&#xA;                             &#xD;&#xA;                            propertyInfos.SetValue&#xD;&#xA;                                (classObj, Convert.ChangeType(dataRow[dtField.Name], propertyInfos.PropertyType), null);&#xD;&#xA;                             &#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                dataList.Add(classObj);&#xD;&#xA;            }&#xD;&#xA;            return dataList;&#xD;&#xA;        }&#xD;&#xA;        private static string ConvertToDateString(object date)&#xD;&#xA;        {&#xD;&#xA;            if (date == null)&#xD;&#xA;                return string.Empty;&#xD;&#xA;            return date == null ? string.Empty : Convert.ToDateTime(date).ConvertDate();&#xD;&#xA;        }&#xD;&#xA;        private static string ConvertToString(object value)&#xD;&#xA;        {&#xD;&#xA;            return Convert.ToString(ReturnEmptyIfNull(value));&#xD;&#xA;        }&#xD;&#xA;        private static int ConvertToInt(object value)&#xD;&#xA;        {&#xD;&#xA;            return Convert.ToInt32(ReturnZeroIfNull(value));&#xD;&#xA;        }&#xD;&#xA;        private static long ConvertToLong(object value)&#xD;&#xA;        {&#xD;&#xA;            return Convert.ToInt64(ReturnZeroIfNull(value));&#xD;&#xA;        }&#xD;&#xA;        private static decimal ConvertToDecimal(object value)&#xD;&#xA;        {&#xD;&#xA;            return Convert.ToDecimal(ReturnZeroIfNull(value));&#xD;&#xA;        }&#xD;&#xA;        private static DateTime convertToDateTime(object date)&#xD;&#xA;        {&#xD;&#xA;            return Convert.ToDateTime(ReturnDateTimeMinIfNull(date));&#xD;&#xA;        }&#xD;&#xA;        public static string ConvertDate(this DateTime datetTime, bool excludeHoursAndMinutes = false)&#xD;&#xA;        {&#xD;&#xA;            if (datetTime != DateTime.MinValue)&#xD;&#xA;            {&#xD;&#xA;                if (excludeHoursAndMinutes)&#xD;&#xA;                    return datetTime.ToString(""""yyyy-MM-dd"""");&#xD;&#xA;                return datetTime.ToString(""""yyyy-MM-dd HH:mm:ss.fff"""");&#xD;&#xA;            }&#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;        public static object ReturnEmptyIfNull(this object value)&#xD;&#xA;        {&#xD;&#xA;            if (value == DBNull.Value)&#xD;&#xA;                return string.Empty;&#xD;&#xA;            if (value == null)&#xD;&#xA;                return string.Empty;&#xD;&#xA;            return value;&#xD;&#xA;        }&#xD;&#xA;        public static object ReturnZeroIfNull(this object value)&#xD;&#xA;        {&#xD;&#xA;            if (value == DBNull.Value)&#xD;&#xA;                return 0;&#xD;&#xA;            if (value == null)&#xD;&#xA;                return 0;&#xD;&#xA;            return value;&#xD;&#xA;        }&#xD;&#xA;        public static object ReturnDateTimeMinIfNull(this object value)&#xD;&#xA;        {&#xD;&#xA;            if (value == DBNull.Value)&#xD;&#xA;                return DateTime.MinValue;&#xD;&#xA;            if (value == null)&#xD;&#xA;                return DateTime.MinValue;&#xD;&#xA;            return value;&#xD;&#xA;        }&#xD;&#xA;    }"
"CSharp","38658189878964978",2,2,"9838379;917688","12209480;921660","1483348;56692","2012-08-31 05:39:41;2009-05-28 15:56:31","3;7",30,FALSE,TRUE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    <case match=""""^Mozilla/5\.0 \([^)]*\) (Gecko/[-\d]+)(?'VendorProductToken' (?'type'[^/\d]*)([\d]*)/(?'version'(?'major'\d+)(?'minor'\.\d+)(?'letters'\w*)))?"""">&#xD;&#xA;    				browser=Gecko&#xD;&#xA;    				<filter>&#xD;&#xA;    					<case match=""""(Gecko/[-\d]+)(?'VendorProductToken' (?'type'[^/\d]*)([\d]*)/(?'version'(?'major'\d+)(?'minor'\.\d+)(?'letters'\w*)))"""">&#xD;&#xA;    						type=${type}&#xD;&#xA;    					</case>&#xD;&#xA;    					<case> <!-- plain Mozilla if no VendorProductToken found -->&#xD;&#xA;    						type=Mozilla&#xD;&#xA;    					</case>&#xD;&#xA;    				</filter>&#xD;&#xA;    				frames=true&#xD;&#xA;    				tables=true&#xD;&#xA;    				cookies=true&#xD;&#xA;    				javascript=true&#xD;&#xA;    				javaapplets=true&#xD;&#xA;    				ecmascriptversion=1.5&#xD;&#xA;    				w3cdomversion=1.0&#xD;&#xA;    				css1=true&#xD;&#xA;    				css2=true&#xD;&#xA;    				xml=true&#xD;&#xA;    				tagwriter=System.Web.UI.HtmlTextWriter&#xD;&#xA;    				<case match=""""rv:(?'version'(?'major'\d+)(?'minor'\.\d+)(?'letters'\w*))"""">&#xD;&#xA;    					version=${version}&#xD;&#xA;    					majorversion=0${major}&#xD;&#xA;    					minorversion=0${minor}&#xD;&#xA;    					<case match=""""^b"""" with=""""${letters}"""">&#xD;&#xA;    						beta=true&#xD;&#xA;    					</case>&#xD;&#xA;    				</case>&#xD;&#xA;    			</case>"
"CSharp","-6414322555671911792",3,3,"1273552;5870202;951401","1273552;5870202;951401","N/A;648372;6158","2009-08-13 17:49:13;2011-05-03 13:28:58;2009-06-04 15:48:05","0;0;6",30,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    SET ANSI_NULLS ON&#xD;&#xA;    GO&#xD;&#xA;    SET QUOTED_IDENTIFIER ON&#xD;&#xA;    GO&#xD;&#xA;    ALTER FUNCTION [dbo].[Split] (@String varchar(8000), @Delimiter char(1))     &#xD;&#xA;       returns @temptable TABLE (items varchar(8000))       &#xD;&#xA;       as       &#xD;&#xA;       begin       &#xD;&#xA;           declare @idx int       &#xD;&#xA;            declare @slice varchar(8000)       &#xD;&#xA;             &#xD;&#xA;            select @idx = 1       &#xD;&#xA;                if len(@String)<1 or @String is null  return       &#xD;&#xA;             &#xD;&#xA;           while @idx!= 0       &#xD;&#xA;           begin       &#xD;&#xA;               set @idx = charindex(@Delimiter,@String)       &#xD;&#xA;               if @idx!=0       &#xD;&#xA;                   set @slice = left(@String,@idx - 1)       &#xD;&#xA;               else       &#xD;&#xA;                  set @slice = @String       &#xD;&#xA;                 &#xD;&#xA;               if(len(@slice)>0)  &#xD;&#xA;                   insert into @temptable(Items) values(@slice)       &#xD;&#xA;         &#xD;&#xA;               set @String = right(@String,len(@String) - @idx)       &#xD;&#xA;               if len(@String) = 0 break       &#xD;&#xA;           end   &#xD;&#xA;       return       &#xD;&#xA;       end  "
"Python","-1391778936814526703",2,2,"51041225;7546050","51041225;49325719","8701393;3357935","2018-06-26 10:58:17;2018-03-16 16:42:28","0;10",44,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    # Multi-frame tkinter application v2.2&#xD;&#xA;    import tkinter as tk&#xD;&#xA;    class SampleApp(tk.Tk):&#xD;&#xA;        def __init__(self):&#xD;&#xA;            tk.Tk.__init__(self)&#xD;&#xA;            self._frame = None&#xD;&#xA;            self.switch_frame(StartPage)&#xD;&#xA;        def switch_frame(self, frame_class):&#xD;&#xA;            """"""""""""Destroys current frame and replaces it with a new one.""""""""""""&#xD;&#xA;            new_frame = frame_class(self)&#xD;&#xA;            if self._frame is not None:&#xD;&#xA;                self._frame.destroy()&#xD;&#xA;            self._frame = new_frame&#xD;&#xA;            self._frame.pack()&#xD;&#xA;    class StartPage(tk.Frame):&#xD;&#xA;        def __init__(self, master):&#xD;&#xA;            tk.Frame.__init__(self, master)&#xD;&#xA;            start_label = tk.Label(self, text=""""This is the start page"""")&#xD;&#xA;            page_1_button = tk.Button(self, text=""""Open page one"""",&#xD;&#xA;                                      command=lambda: master.switch_frame(PageOne))&#xD;&#xA;            page_2_button = tk.Button(self, text=""""Open page two"""",&#xD;&#xA;                                      command=lambda: master.switch_frame(PageTwo))&#xD;&#xA;            start_label.pack(side=""""top"""", fill=""""x"""", pady=10)&#xD;&#xA;            page_1_button.pack()&#xD;&#xA;            page_2_button.pack()&#xD;&#xA;    class PageOne(tk.Frame):&#xD;&#xA;        def __init__(self, master):&#xD;&#xA;            tk.Frame.__init__(self, master)&#xD;&#xA;            page_1_label = tk.Label(self, text=""""This is page one"""")&#xD;&#xA;            start_button = tk.Button(self, text=""""Return to start page"""",&#xD;&#xA;                                     command=lambda: master.switch_frame(StartPage))&#xD;&#xA;            page_1_label.pack(side=""""top"""", fill=""""x"""", pady=10)&#xD;&#xA;            start_button.pack()&#xD;&#xA;    class PageTwo(tk.Frame):&#xD;&#xA;        def __init__(self, master):&#xD;&#xA;            tk.Frame.__init__(self, master)&#xD;&#xA;            page_2_label = tk.Label(self, text=""""This is page two"""")&#xD;&#xA;            start_button = tk.Button(self, text=""""Return to start page"""",&#xD;&#xA;                                     command=lambda: master.switch_frame(StartPage))&#xD;&#xA;            page_2_label.pack(side=""""top"""", fill=""""x"""", pady=10)&#xD;&#xA;            start_button.pack()&#xD;&#xA;    if __name__ == """"__main__"""":&#xD;&#xA;        app = SampleApp()&#xD;&#xA;        app.mainloop()"
"Python","7362734013479075769",2,2,"43662113;43668346","43662113;43668346","4938020;4938020","2017-04-27 15:34:26;2017-04-27 21:38:05","1;0",25,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    table2 = pd.DataFrame({&#xD;&#xA;            'Product Type': ['A', 'B', 'C', 'D'],&#xD;&#xA;            'State_1_Value': [10, 11, 12, 13],&#xD;&#xA;    	'State_2_Value': [20, 21, 22, 23],&#xD;&#xA;    	'State_3_Value': [30, 31, 32, 33],&#xD;&#xA;    	'State_4_Value': [40, 41, 42, 43],&#xD;&#xA;    	'State_5_Value': [50, 51, 52, 53],&#xD;&#xA;    	'State_6_Value': [60, 61, 62, 63],&#xD;&#xA;    	'Lower_Bound': [-1, 1, .5, 5],&#xD;&#xA;    	'Upper_Bound': [1, 2, .625, 15],&#xD;&#xA;    	'sim_1': [0, 0, .61, 7],&#xD;&#xA;    	'sim_2': [1, 1.5, .7, 9],&#xD;&#xA;    	})&#xD;&#xA;    >>> table2&#xD;&#xA;       Lower_Bound Product Type  State_1_Value  State_2_Value  State_3_Value  \&#xD;&#xA;    0         -1.0            A             10             20             30   &#xD;&#xA;    1          1.0            B             11             21             31   &#xD;&#xA;    2          0.5            C             12             22             32   &#xD;&#xA;    3          5.0            D             13             23             33   &#xD;&#xA;    &#xD;&#xA;       State_4_Value  State_5_Value  State_6_Value  Upper_Bound  sim_1  sim_2  &#xD;&#xA;    0             40             50             60        1.000    0.0    1.0  &#xD;&#xA;    1             41             51             61        2.000    0.0    1.5  &#xD;&#xA;    2             42             52             62        0.625    0.61    0.7  &#xD;&#xA;    3             43             53             63       15.000    7.0    9.0  "
"Python","285302079640883798",2,2,"49543928;49527159","49543928;49527159","8234464;8234464","2018-03-28 20:49:47;2018-03-28 06:01:54","1;2",34,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    from keras.models import Sequential&#xD;&#xA;    from keras.layers.convolutional import Conv3D&#xD;&#xA;    from keras.layers.convolutional_recurrent import ConvLSTM2D&#xD;&#xA;    from keras.layers.normalization import BatchNormalization&#xD;&#xA;    import numpy as np&#xD;&#xA;    import pylab as plt&#xD;&#xA;    from keras import layers&#xD;&#xA;    &#xD;&#xA;    # We create a layer which take as input movies of shape&#xD;&#xA;    # (n_frames, width, height, channels) and returns a movie&#xD;&#xA;    # of identical shape.&#xD;&#xA;    &#xD;&#xA;    model = Sequential()&#xD;&#xA;    model.add(ConvLSTM2D(filters=40, kernel_size=(3, 3),&#xD;&#xA;                       input_shape=(None, 64, 64, 1),&#xD;&#xA;                       padding='same', return_sequences=True))&#xD;&#xA;    model.add(BatchNormalization())&#xD;&#xA;    &#xD;&#xA;    model.add(ConvLSTM2D(filters=40, kernel_size=(3, 3),&#xD;&#xA;                       padding='same', return_sequences=True))&#xD;&#xA;    model.add(BatchNormalization())&#xD;&#xA;    &#xD;&#xA;    model.add(ConvLSTM2D(filters=40, kernel_size=(3, 3),&#xD;&#xA;                       padding='same', return_sequences=True))&#xD;&#xA;    model.add(BatchNormalization())&#xD;&#xA;    &#xD;&#xA;    model.add(ConvLSTM2D(filters=40, kernel_size=(3, 3),&#xD;&#xA;                       padding='same', return_sequences=True))&#xD;&#xA;    model.add(BatchNormalization())&#xD;&#xA;    &#xD;&#xA;    model.add(Conv3D(filters=1, kernel_size=(3, 3, 3),&#xD;&#xA;                   activation='sigmoid',&#xD;&#xA;                   padding='same', data_format='channels_last'))&#xD;&#xA;    model.compile(loss='binary_crossentropy', optimizer='adadelta')"
"Python","6787837843436061221",2,2,"13366293;36287536","13366433;36287632","324389;4356889","2012-11-13 18:22:28;2016-03-29 14:45:15","5;2",38,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    if (PyTuple_Size(args) <= 1) {&#xD;&#xA;        if (!PyArg_UnpackTuple(args, """"range"""", 1, 1, &stop))&#xD;&#xA;            return NULL;&#xD;&#xA;        stop = PyNumber_Index(stop);&#xD;&#xA;        if (!stop)&#xD;&#xA;            return NULL;&#xD;&#xA;        start = PyLong_FromLong(0);&#xD;&#xA;        if (!start) {&#xD;&#xA;            Py_DECREF(stop);&#xD;&#xA;            return NULL;&#xD;&#xA;        }&#xD;&#xA;        step = PyLong_FromLong(1);&#xD;&#xA;        if (!step) {&#xD;&#xA;            Py_DECREF(stop);&#xD;&#xA;            Py_DECREF(start);&#xD;&#xA;            return NULL;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    else {&#xD;&#xA;        if (!PyArg_UnpackTuple(args, """"range"""", 2, 3,&#xD;&#xA;                               &start, &stop, &step))&#xD;&#xA;            return NULL;&#xD;&#xA;        /* Convert borrowed refs to owned refs */&#xD;&#xA;        start = PyNumber_Index(start);&#xD;&#xA;        if (!start)&#xD;&#xA;            return NULL;&#xD;&#xA;        stop = PyNumber_Index(stop);&#xD;&#xA;        if (!stop) {&#xD;&#xA;            Py_DECREF(start);&#xD;&#xA;            return NULL;&#xD;&#xA;        }&#xD;&#xA;        step = validate_step(step);    /* Caution, this can clear exceptions */&#xD;&#xA;        if (!step) {&#xD;&#xA;            Py_DECREF(start);&#xD;&#xA;            Py_DECREF(stop);&#xD;&#xA;            return NULL;&#xD;&#xA;        }&#xD;&#xA;    }"
"Python","-7051678711245348546",2,2,"35422578;35426444","35422578;35426444","67405;67405","2016-02-16 02:24:34;2016-02-16 07:35:28","0;3",46,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    import numpy as np&#xD;&#xA;    from numpy import array&#xD;&#xA;    from scipy.optimize import nnls&#xD;&#xA;    &#xD;&#xA;    def by_nnls(A=None, B=None):&#xD;&#xA;        """""""""""" Linear programming by NNLS """"""""""""&#xD;&#xA;        #print """"NOF row = """", A.shape[0]&#xD;&#xA;        A = np.nan_to_num(A)&#xD;&#xA;        B = np.nan_to_num(B)&#xD;&#xA;    &#xD;&#xA;        x, rnorm = nnls(A,B)&#xD;&#xA;        x = x / x.sum()&#xD;&#xA;        # print repr(x)&#xD;&#xA;        return x&#xD;&#xA;    &#xD;&#xA;    B1 = array([  22.133,  197.087,   84.344,    1.466,    3.974,    0.435,&#xD;&#xA;              8.291,   45.059,    5.755,    0.519,    0.   ,   30.272,&#xD;&#xA;             24.92 ,   10.095])&#xD;&#xA;    A1 = array([[   46.35,    80.58,    48.8 ,    80.31,   489.01,    40.98,&#xD;&#xA;               29.98,    44.3 ,  5882.96],&#xD;&#xA;           [ 2540.73,    49.53,    26.78,    30.49,    48.51,    20.88,&#xD;&#xA;               19.92,    21.05,    19.39],&#xD;&#xA;           [ 2540.73,    49.53,    26.78,    30.49,    48.51,    20.88,&#xD;&#xA;               19.92,    21.05,    19.39],&#xD;&#xA;           [   30.95,  1482.24,   100.48,    35.98,    35.1 ,    38.65,&#xD;&#xA;               31.57,    87.38,    33.39],&#xD;&#xA;           [   30.95,  1482.24,   100.48,    35.98,    35.1 ,    38.65,&#xD;&#xA;               31.57,    87.38,    33.39],&#xD;&#xA;           [   30.95,  1482.24,   100.48,    35.98,    35.1 ,    38.65,&#xD;&#xA;               31.57,    87.38,    33.39],&#xD;&#xA;           [   15.99,   223.27,   655.79,  1978.2 ,    18.21,    20.51,&#xD;&#xA;               19.  ,    16.19,    15.91],&#xD;&#xA;           [   15.99,   223.27,   655.79,  1978.2 ,    18.21,    20.51,&#xD;&#xA;               19.  ,    16.19,    15.91],&#xD;&#xA;           [   16.49,    20.56,    19.08,    18.65,  4568.97,    20.7 ,&#xD;&#xA;               17.4 ,    17.62,    25.51],&#xD;&#xA;           [   33.84,    26.58,    18.69,    40.88,    19.17,  5247.84,&#xD;&#xA;               29.39,    25.55,    18.9 ],&#xD;&#xA;           [   42.66,    83.59,    99.58,    52.11,    46.84,    64.93,&#xD;&#xA;               43.8 ,  7610.12,    47.13],&#xD;&#xA;           [   42.66,    83.59,    99.58,    52.11,    46.84,    64.93,&#xD;&#xA;               43.8 ,  7610.12,    47.13],&#xD;&#xA;           [   41.63,   204.32,  4170.37,    86.95,    49.92,    87.15,&#xD;&#xA;               51.88,    45.38,    42.89],&#xD;&#xA;           [   81.34,    60.16,   357.92,    43.48,    36.92,    39.13,&#xD;&#xA;             1772.07,    68.43,    38.07]])"
"SQL","823678479731080077",2,2,"37686803;37552311","37686803;37552311","3585595;3585595","2016-06-07 18:34:06;2016-05-31 17:40:22","0;-2",70,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    DROP PROCEDURE IF EXISTS testlink.PR_SEL_RELAT_PRODUTIVIDADE;&#xD;&#xA;    CREATE PROCEDURE testlink.`PR_SEL_RELAT_PRODUTIVIDADE`(&#xD;&#xA;       idProjetoTestLink INT,&#xD;&#xA;       idPlanoTeste      INT,&#xD;&#xA;       DataReferencia    VARCHAR(10),&#xD;&#xA;       idProjetoMantis   INT)&#xD;&#xA;    BEGIN&#xD;&#xA;          DECLARE vDataReferencia   DATE;&#xD;&#xA;          DECLARE vIdQuery          char(36);&#xD;&#xA;    &#xD;&#xA;          /* Carrega os dias Testes na tabela Tempor?ria */&#xD;&#xA;          SELECT FN_SELECIONA_CASO_TESTES(idProjetoTestLink, idPlanoTeste)&#xD;&#xA;            INTO vIdQuery;&#xD;&#xA;    &#xD;&#xA;          SELECT DATE(DataReferencia)&#xD;&#xA;            INTO vDataReferencia;&#xD;&#xA;    &#xD;&#xA;    SELECT a.username,&#xD;&#xA;           a.realname,&#xD;&#xA;           sum(a.falha) falha,&#xD;&#xA;           sum(a.passou) passou,&#xD;&#xA;           SUM(a.bloqueado) bloqueado,&#xD;&#xA;           sum(a.EmExecucao) EmExecucao,&#xD;&#xA;           sum(a.DefeitosFechados) DefeitosFechados,&#xD;&#xA;           sum(a.DefeitosReabertos) DefeitosReabertos&#xD;&#xA;      FROM (SELECT X.LOGIN_TESTER username,&#xD;&#xA;                   X.NOME_TESTER realname,&#xD;&#xA;                   CASE STATUS WHEN 'f' THEN 1 ELSE 0 END Falha,&#xD;&#xA;                   CASE STATUS WHEN 'p' THEN 1 ELSE 0 END Passou,&#xD;&#xA;                   CASE STATUS WHEN 'b' THEN 1 ELSE 0 END Bloqueado,&#xD;&#xA;                   0 EmExecucao,&#xD;&#xA;                   0 DefeitosFechados,&#xD;&#xA;                   0 DefeitosReabertos&#xD;&#xA;              FROM testlink.tmp_result_report X&#xD;&#xA;             WHERE X.ID_QUERY = vIdQuery&#xD;&#xA;                   AND X.DATA_EXECUCAO = vDataReferencia&#xD;&#xA;            UNION ALL&#xD;&#xA;            SELECT X.LOGIN_TESTER username,&#xD;&#xA;                   X.NOME_TESTER realname,&#xD;&#xA;                   0 Falha,&#xD;&#xA;                   0 Passou,&#xD;&#xA;                   0 Bloqueado,&#xD;&#xA;                   CASE STATUS WHEN 'r' THEN 1 ELSE 0 END EmExecucao,&#xD;&#xA;                   0 DefeitosFechados,&#xD;&#xA;                   0 DefeitosReabertos&#xD;&#xA;              FROM testlink.tmp_result_report X&#xD;&#xA;             WHERE X.ID_QUERY = vIdQuery&#xD;&#xA;            UNION ALL&#xD;&#xA;            SELECT user.username,&#xD;&#xA;                   user.realname,&#xD;&#xA;                   0 Falha,&#xD;&#xA;                   0 Passou,&#xD;&#xA;                   0 Bloqueado,&#xD;&#xA;                   0 EmExecucao,&#xD;&#xA;                   CASE WHEN bug.resolution <> 30 THEN 1 ELSE 0 END&#xD;&#xA;                      DefeitosFechados,&#xD;&#xA;                   CASE WHEN bug.resolution = 30 THEN 1 ELSE 0 END&#xD;&#xA;                      DefeitosReabertos&#xD;&#xA;              FROM mantis.mantis_bug_table bug,&#xD;&#xA;                   mantis.mantis_category_table categ,&#xD;&#xA;                   mantis.mantis_user_table user&#xD;&#xA;             WHERE     bug.project_id = idProjetoMantis&#xD;&#xA;                   AND bug.category_id = categ.id&#xD;&#xA;                   AND bug.status = 90      -- Fechado&#xD;&#xA;                   AND bug.resolution <> 10 -- Aberto&#xD;&#xA;                   AND date(FROM_UNIXTIME(bug.last_updated)) = vDataReferencia&#xD;&#xA;                   AND bug.reporter_id = user.id) a&#xD;&#xA;      WHERE a.username IS NOT NULL&#xD;&#xA;    GROUP BY a.username;&#xD;&#xA;    END;"
"SQL","-3727000032724279060",2,2,"38390745;38368654","38390745;38368654","1665465;1665465","2016-07-15 07:53:31;2016-07-14 08:01:13","0;-3",45,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    <?php&#xD;&#xA;           session_start();&#xD;&#xA;	       require """"init.php"""";&#xD;&#xA;		   header('Content-type: application/json');&#xD;&#xA;           &#xD;&#xA;     &#xD;&#xA;           $user_name = $_POST['user_name'];&#xD;&#xA;           $user_pass = $_POST['user_pass'];&#xD;&#xA;		   $passwordEncrypted = sha1($user_pass);&#xD;&#xA;           &#xD;&#xA;		     		   &#xD;&#xA;		   &#xD;&#xA;		   if($user_name && $user_pass){&#xD;&#xA;			    &#xD;&#xA;				$sql_query = """"select * from user_info where user_name ='"""".mysqli_real_escape_string($con, $user_name).""""' and user_pass='"""".mysqli_real_escape_string($con, $passwordEncrypted).""""' LIMIT 1"""";		&#xD;&#xA;				&#xD;&#xA;				$result = mysqli_query($con,$sql_query);&#xD;&#xA;		&#xD;&#xA;		        $row = mysqli_fetch_array($result);&#xD;&#xA;		    &#xD;&#xA;			     &#xD;&#xA;		&#xD;&#xA;				if($row){&#xD;&#xA;			&#xD;&#xA;					&#xD;&#xA;					$don = array('result' =>'success','message'=>'You are logged in');&#xD;&#xA;					$_SESSION['id'] = $row['id'];&#xD;&#xA;			    &#xD;&#xA;				}else{&#xD;&#xA;			&#xD;&#xA;					$don = array('result' =>'fail','message'=>'User could not be found');&#xD;&#xA;				}&#xD;&#xA;			}else if(!user_name){&#xD;&#xA;			  &#xD;&#xA;				$don = array('result' =>""""fail"""",""""message""""=>""""Please enter your name"""");       	       &#xD;&#xA;			&#xD;&#xA;				&#xD;&#xA;			}else if(!$user_pass){&#xD;&#xA;			 &#xD;&#xA;			 $don = array('result' =>""""fail"""",""""message""""=>""""Please enter your password"""");&#xD;&#xA;			&#xD;&#xA;			}&#xD;&#xA;			&#xD;&#xA;			echo json_encode($don);&#xD;&#xA;      ?>"
"SQL","-7084009160264564981",2,2,"42270571;43385508","42270571;43385508","7574116;6174449","2017-02-16 10:00:03;2017-04-13 06:57:32","0;3",65,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    CREATE PROC SearchAllTables&#xD;&#xA;    (&#xD;&#xA;        @SearchStr nvarchar(100)&#xD;&#xA;    )&#xD;&#xA;    AS&#xD;&#xA;    BEGIN&#xD;&#xA;    &#xD;&#xA;    -- Copyright © 2002 Narayana Vyas Kondreddi. All rights reserved.&#xD;&#xA;    -- Purpose: To search all columns of all tables for a given search string&#xD;&#xA;    -- Written by: Narayana Vyas Kondreddi&#xD;&#xA;    -- Site: http://vyaskn.tripod.com&#xD;&#xA;    -- Tested on: SQL Server 7.0 and SQL Server 2000&#xD;&#xA;    -- Date modified: 28th July 2002 22:50 GMT&#xD;&#xA;    &#xD;&#xA;    DECLARE @Results TABLE(ColumnName nvarchar(370), ColumnValue nvarchar(3630))&#xD;&#xA;    &#xD;&#xA;    SET NOCOUNT ON&#xD;&#xA;    &#xD;&#xA;    DECLARE @TableName nvarchar(256), @ColumnName nvarchar(128), @SearchStr2 nvarchar(110)&#xD;&#xA;    SET  @TableName = ''&#xD;&#xA;    SET @SearchStr2 = QUOTENAME('%' + @SearchStr + '%','''')&#xD;&#xA;    &#xD;&#xA;    WHILE @TableName IS NOT NULL&#xD;&#xA;    BEGIN&#xD;&#xA;        SET @ColumnName = ''&#xD;&#xA;        SET @TableName = &#xD;&#xA;        (&#xD;&#xA;            SELECT MIN(QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME))&#xD;&#xA;            FROM    INFORMATION_SCHEMA.TABLES&#xD;&#xA;            WHERE       TABLE_TYPE = 'BASE TABLE'&#xD;&#xA;                AND QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME) > @TableName&#xD;&#xA;                AND OBJECTPROPERTY(&#xD;&#xA;                        OBJECT_ID(&#xD;&#xA;                            QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME)&#xD;&#xA;                             ), 'IsMSShipped'&#xD;&#xA;                               ) = 0&#xD;&#xA;        )&#xD;&#xA;    &#xD;&#xA;        WHILE (@TableName IS NOT NULL) AND (@ColumnName IS NOT NULL)&#xD;&#xA;        BEGIN&#xD;&#xA;            SET @ColumnName =&#xD;&#xA;            (&#xD;&#xA;                SELECT MIN(QUOTENAME(COLUMN_NAME))&#xD;&#xA;                FROM    INFORMATION_SCHEMA.COLUMNS&#xD;&#xA;                WHERE       TABLE_SCHEMA    = PARSENAME(@TableName, 2)&#xD;&#xA;                    AND TABLE_NAME  = PARSENAME(@TableName, 1)&#xD;&#xA;                    AND DATA_TYPE IN ('char', 'varchar', 'nchar', 'nvarchar')&#xD;&#xA;                    AND QUOTENAME(COLUMN_NAME) > @ColumnName&#xD;&#xA;            )&#xD;&#xA;    &#xD;&#xA;            IF @ColumnName IS NOT NULL&#xD;&#xA;            BEGIN&#xD;&#xA;                INSERT INTO @Results&#xD;&#xA;                EXEC&#xD;&#xA;                (&#xD;&#xA;                    'SELECT ''' + @TableName + '.' + @ColumnName + ''', LEFT(' + @ColumnName + ', 3630) &#xD;&#xA;                    FROM ' + @TableName + ' (NOLOCK) ' +&#xD;&#xA;                    ' WHERE ' + @ColumnName + ' LIKE ' + @SearchStr2&#xD;&#xA;                )&#xD;&#xA;            END&#xD;&#xA;        END &#xD;&#xA;    END&#xD;&#xA;    &#xD;&#xA;    SELECT ColumnName, ColumnValue FROM @Results&#xD;&#xA;    END"
"SQL","-6652240785205538448",2,2,"1372366;26833291","1382158;26833291","163177;1567212","2009-09-05 01:27:48;2014-11-09 21:02:20","7;0",32,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,"    def tree_from_set(set) #set must be in order&#xD;&#xA;      buf = START_TAG(set[0])&#xD;&#xA;      stack = []&#xD;&#xA;      stack.push set[0]&#xD;&#xA;      set[1..-1].each do |node|&#xD;&#xA;        if stack.last.lft < node.lft < stack.last.rgt&#xD;&#xA;          if node.leaf? #(node.rgt - node.lft == 1)&#xD;&#xA;            buf << NODE_TAG(node)&#xD;&#xA;          else&#xD;&#xA;            buf << START_TAG(node)&#xD;&#xA;            stack.push(node)&#xD;&#xA;          end&#xD;&#xA;        else#&#xD;&#xA;          buf << END_TAG&#xD;&#xA;          stack.pop&#xD;&#xA;          retry&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;      buf <<END_TAG&#xD;&#xA;    end&#xD;&#xA;    &#xD;&#xA;    def START_TAG(node) #for example&#xD;&#xA;      """"<li><p>#{node.name}</p><ul>""""&#xD;&#xA;    end&#xD;&#xA;    &#xD;&#xA;    def NODE_TAG(node)&#xD;&#xA;      """"<li><p>#{node.name}</p></li>""""&#xD;&#xA;    end&#xD;&#xA;    &#xD;&#xA;    def END_TAG&#xD;&#xA;      """"</li></ul>""""&#xD;&#xA;    end "
"SQL","-150118792865273985",2,2,"10651387;10596947","10651387;10597801","N/A;829194","2012-05-18 10:59:29;2012-05-15 09:25:37","0;1",32,FALSE,TRUE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    <?php&#xD;&#xA;    $q=$_GET[""""q""""]; &#xD;&#xA;   &#xD;&#xA;    $con = mysql_connect('localhost', 'root', '');&#xD;&#xA;    if (!$con)&#xD;&#xA;      {&#xD;&#xA;      die('Could not connect: ' . mysql_error());&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;    mysql_select_db(""""security_software"""", $con);&#xD;&#xA;    &#xD;&#xA;    $sql=""""SELECT * FROM internet_security ORDER by `"""".$q.""""` DESC"""" ;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    $result = mysql_query($sql);&#xD;&#xA;    $response = array();&#xD;&#xA;    $i=0;&#xD;&#xA;    while($row = mysql_fetch_array($result))&#xD;&#xA;      {&#xD;&#xA;      $response[$i]['id']           =$row['id'];&#xD;&#xA;      $response[$i]['title']        = $row['title'];&#xD;&#xA;      $response[$i]['image']        = $row['image'];&#xD;&#xA;      $response[$i]['description']  = $row['description'];&#xD;&#xA;      $response[$i]['rating']       = $row['rating'];&#xD;&#xA;      $response[$i]['download']     = $row['download'];  &#xD;&#xA;      $response[$i]['buy']          = $row['buy'];&#xD;&#xA;      $i++;&#xD;&#xA;      }&#xD;&#xA;    mysql_close($con); &#xD;&#xA;   &#xD;&#xA;    echo json_encode($response);&#xD;&#xA;    ?>"
"Swift","-2127672398705085829",2,2,"43815622;31285850","43815730;31289609","2529025;3098255","2017-05-06 01:15:22;2015-07-08 10:12:32","1;3",36,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    import AssetsLibrary&#xD;&#xA;    &#xD;&#xA;    ...&#xD;&#xA;    ...&#xD;&#xA;    &#xD;&#xA;    func downloadVideoToCameraRoll() {&#xD;&#xA;    // Local variable pointing to the local file path for the downloaded video&#xD;&#xA;    var localFileUrl: String?&#xD;&#xA;    // A closure for generating the local file path for the downloaded video. This will be pointing to the Documents directory with a unique UDID file name.&#xD;&#xA;    let destination: (NSURL, NSHTTPURLResponse) -> (NSURL) = {&#xD;&#xA;        (temporaryURL, response) in&#xD;&#xA;        if let directoryURL = NSFileManager.defaultManager().URLsForDirectory(.DocumentDirectory, inDomains: .UserDomainMask)[0] as? NSURL {&#xD;&#xA;            let finalPath = directoryURL.URLByAppendingPathComponent(""""\(NSUUID()).\(response.suggestedFilename!)"""")&#xD;&#xA;            localFileUrl = finalPath.absoluteString&#xD;&#xA;            return finalPath&#xD;&#xA;        }&#xD;&#xA;        return temporaryURL&#xD;&#xA;    }&#xD;&#xA;    // The media post which should be downloaded&#xD;&#xA;    let postURL = NSURL(string: """"https://api.instagram.com/v1/media/"""" + """"952201134785549382_250131908"""" + """"?access_token="""" + InstagramEngine.sharedEngine().accessToken)!&#xD;&#xA;    // Then some magic happens that turns the postURL into the videoURL, which is the actual url of the video media:&#xD;&#xA;    let videoURL = NSURL(string: """"https://scontent.cdninstagram.com/hphotos-xfp1/t50.2886-16/11104555_1603400416544760_416259564_s.mp4"""")!&#xD;&#xA;    // Download starts&#xD;&#xA;    let request = Alamofire.download(.GET, videoURL, destination)&#xD;&#xA;    // Completion handler for the download&#xD;&#xA;    request.response { (request, response, data, error) -> Void in&#xD;&#xA;        if let path = localFileUrl {&#xD;&#xA;            let isVideoCompatible = UIVideoAtPathIsCompatibleWithSavedPhotosAlbum(path)&#xD;&#xA;            println(""""bool: \(isVideoCompatible)"""") // This logs out """"bool: false""""&#xD;&#xA;            let library = ALAssetsLibrary()&#xD;&#xA;            library.writeVideoAtPathToSavedPhotosAlbum(NSURL(string: path), completionBlock: { (url, error) -> Void in&#xD;&#xA;                // Done! Go check your camera roll&#xD;&#xA;            })&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    }"
"Swift","-1956914579435156353",2,2,"25513106;25488162","25513335;25489618","451475;451475","2014-08-26 19:01:55;2014-08-25 15:44:44","4;2",58,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    import Security&#xD;&#xA;    class ZLKeychainService: NSObject {&#xD;&#xA;        var service = """"Service""""&#xD;&#xA;        var keychainQuery :[NSString: AnyObject]! = nil&#xD;&#xA;        func save(name name: NSString, value: NSString) -> OSStatus? {&#xD;&#xA;            let statusAdd :OSStatus?&#xD;&#xA;            guard let dataFromString: NSData = value.dataUsingEncoding(NSUTF8StringEncoding) else {&#xD;&#xA;                return nil&#xD;&#xA;            }&#xD;&#xA;            keychainQuery = [&#xD;&#xA;                kSecClass       : kSecClassGenericPassword,&#xD;&#xA;                kSecAttrService : service,&#xD;&#xA;                kSecAttrAccount : name,&#xD;&#xA;                kSecValueData   : dataFromString]&#xD;&#xA;            if keychainQuery == nil {&#xD;&#xA;                return nil&#xD;&#xA;            }&#xD;&#xA;            SecItemDelete(keychainQuery as CFDictionaryRef)&#xD;&#xA;            statusAdd = SecItemAdd(keychainQuery! as CFDictionaryRef, nil)&#xD;&#xA;            return statusAdd;&#xD;&#xA;        }&#xD;&#xA;        func load(name name: NSString) -> String? {&#xD;&#xA;            var contentsOfKeychain :String?&#xD;&#xA;            keychainQuery = [&#xD;&#xA;                kSecClass       : kSecClassGenericPassword,&#xD;&#xA;                kSecAttrService : service,&#xD;&#xA;                kSecAttrAccount : name,&#xD;&#xA;                kSecReturnData  : kCFBooleanTrue,&#xD;&#xA;                kSecMatchLimit  : kSecMatchLimitOne]&#xD;&#xA;            if keychainQuery == nil {&#xD;&#xA;                return nil&#xD;&#xA;            }&#xD;&#xA;            var dataTypeRef: AnyObject?&#xD;&#xA;            let status: OSStatus = SecItemCopyMatching(keychainQuery, &dataTypeRef)&#xD;&#xA;            if (status == errSecSuccess) {&#xD;&#xA;                let retrievedData: NSData? = dataTypeRef as? NSData&#xD;&#xA;                if let result = NSString(data: retrievedData!, encoding: NSUTF8StringEncoding) {&#xD;&#xA;                    contentsOfKeychain = result as String&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            else {&#xD;&#xA;                print(""""Nothing was retrieved from the keychain. Status code \(status)"""")&#xD;&#xA;            }&#xD;&#xA;            return contentsOfKeychain&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    //Test:&#xD;&#xA;    let userName = """"TestUser""""&#xD;&#xA;    let userValue: NSString = """"TestValue""""&#xD;&#xA;    print(""""userName: '\(userName)'"""")&#xD;&#xA;    print(""""userValue: '\(userValue)'"""")&#xD;&#xA;    let kcs = ZLKeychainService()&#xD;&#xA;    kcs.save(name:userName, value: userValue)&#xD;&#xA;    print(""""Keychain Query \(kcs.keychainQuery)"""")&#xD;&#xA;    if let recoveredToken = kcs.load(name:userName) {&#xD;&#xA;        print(""""Recovered Value: '\(recoveredToken)'"""")&#xD;&#xA;    }"
"Swift","-6418776236427697230",2,2,"30708073;7578788","30708158;7578936","4910767;714578","2015-06-08 11:37:40;2011-09-28 05:58:29","2;4",36,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,"    - (MKCoordinateSpan)coordinateSpanWithMapView:(MKMapView *)mapView&#xD;&#xA;							 centerCoordinate:(CLLocationCoordinate2D)centerCoordinate&#xD;&#xA;								 andZoomLevel:(NSUInteger)zoomLevel&#xD;&#xA;    {&#xD;&#xA;    // convert center coordiate to pixel space&#xD;&#xA;    double centerPixelX = [self longitudeToPixelSpaceX:centerCoordinate.longitude];&#xD;&#xA;    double centerPixelY = [self latitudeToPixelSpaceY:centerCoordinate.latitude];&#xD;&#xA;    &#xD;&#xA;    // determine the scale value from the zoom level&#xD;&#xA;    NSInteger zoomExponent = 20 - zoomLevel;&#xD;&#xA;    double zoomScale = pow(2, zoomExponent);&#xD;&#xA;    &#xD;&#xA;    // scale the map’s size in pixel space&#xD;&#xA;    CGSize mapSizeInPixels = mapView.bounds.size;&#xD;&#xA;    double scaledMapWidth = mapSizeInPixels.width * zoomScale;&#xD;&#xA;    double scaledMapHeight = mapSizeInPixels.height * zoomScale;&#xD;&#xA;    &#xD;&#xA;    // figure out the position of the top-left pixel&#xD;&#xA;    double topLeftPixelX = centerPixelX - (scaledMapWidth / 2);&#xD;&#xA;    double topLeftPixelY = centerPixelY - (scaledMapHeight / 2);&#xD;&#xA;    &#xD;&#xA;    // find delta between left and right longitudes&#xD;&#xA;    CLLocationDegrees minLng = [self pixelSpaceXToLongitude:topLeftPixelX];&#xD;&#xA;    CLLocationDegrees maxLng = [self pixelSpaceXToLongitude:topLeftPixelX + scaledMapWidth];&#xD;&#xA;    CLLocationDegrees longitudeDelta = maxLng - minLng;&#xD;&#xA;    &#xD;&#xA;    // find delta between top and bottom latitudes&#xD;&#xA;    CLLocationDegrees minLat = [self pixelSpaceYToLatitude:topLeftPixelY];&#xD;&#xA;    CLLocationDegrees maxLat = [self pixelSpaceYToLatitude:topLeftPixelY + scaledMapHeight];&#xD;&#xA;    CLLocationDegrees latitudeDelta = -1 * (maxLat - minLat);&#xD;&#xA;    &#xD;&#xA;    // create and return the lat/lng span&#xD;&#xA;    MKCoordinateSpan span = MKCoordinateSpanMake(latitudeDelta, longitudeDelta);&#xD;&#xA;    return span;&#xD;&#xA;    }&#xD;&#xA;  "
"Swift","552323204309160446",2,2,"30381779;30971558","30381779;30971558","4695876;5034624","2015-05-21 18:36:43;2015-06-22 02:58:50","-1;0",74,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"     class FirstTableViewController: UITableViewController {&#xD;&#xA;    &#xD;&#xA;       &#xD;&#xA;        let aSport:[Sport] = {&#xD;&#xA;            var basketball = Sport()&#xD;&#xA;            basketball.name = """"Basketball""""&#xD;&#xA;            basketball.sportCategories = {&#xD;&#xA;                var temp = [""""International Basketball"""",""""Wheelchair Basketball"""",""""Beach Basketball"""",""""Deaf Basketball"""",""""Dwarf Basketball""""]&#xD;&#xA;                temp.sort(<)&#xD;&#xA;                return temp&#xD;&#xA;                }()&#xD;&#xA;            &#xD;&#xA;            var golf = Sport()&#xD;&#xA;            golf.name = """"Golf""""&#xD;&#xA;            golf.sportCategories = {&#xD;&#xA;                var temp = [""""Miniature Golf"""",""""Dart Golf"""",""""Sholf"""",""""Disc Golf"""",""""Footgolf""""]&#xD;&#xA;                temp.sort(<)&#xD;&#xA;                return temp&#xD;&#xA;                }()&#xD;&#xA;            &#xD;&#xA;            var football = Sport()&#xD;&#xA;            football.name = """"Football""""&#xD;&#xA;            football.sportCategories = {&#xD;&#xA;                var temp = [""""Flag Football"""",""""Indoor Football"""",""""Arena Football"""",""""Non-Tackle Football"""",""""Paper Football""""]&#xD;&#xA;                temp.sort(<)&#xD;&#xA;                return temp&#xD;&#xA;                }()&#xD;&#xA;            &#xD;&#xA;            var swimming = Sport()&#xD;&#xA;            swimming.name = """"Swimming""""&#xD;&#xA;            swimming.sportCategories = {&#xD;&#xA;                var temp = [""""Competitive Swimming"""",""""Synchronized Swimming"""",""""Duo Swimming"""",""""Relay Swimming""""]&#xD;&#xA;                temp.sort(<)&#xD;&#xA;                return temp&#xD;&#xA;                }()&#xD;&#xA;            &#xD;&#xA;            return  [basketball,golf,football,swimming]&#xD;&#xA;            }()&#xD;&#xA;        &#xD;&#xA;        override func numberOfSectionsInTableView(tableView: UITableView) -> Int {&#xD;&#xA;            &#xD;&#xA;            return 1&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {&#xD;&#xA;            &#xD;&#xA;            return aSport.count&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell&#xD;&#xA;        {&#xD;&#xA;            let cell = tableView.dequeueReusableCellWithIdentifier(""""Cell"""", forIndexPath: indexPath) as! UITableViewCell&#xD;&#xA;            cell.textLabel?.text = aSport[indexPath.row].name&#xD;&#xA;            return cell&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {&#xD;&#xA;            let cell = sender as! UITableViewCell&#xD;&#xA;            let row = tableView.indexPathForCell(cell)?.row&#xD;&#xA;            let detail = segue.destinationViewController as! SecondTableViewController&#xD;&#xA;            detail.selectedSport = aSport[row!]&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    class Sport {&#xD;&#xA;        &#xD;&#xA;        var name: String = """"sport name""""&#xD;&#xA;        var sportCategories: NSArray = [""""variations of selected sport""""]&#xD;&#xA;        var detailText: NSArray = [""""little description of sport""""]&#xD;&#xA;        &#xD;&#xA;    }"
"Swift","-7840575039831060030",2,2,"39158840;31468868","39158840;38928692","2007490;2486234","2016-08-26 05:26:59;2016-08-13 02:43:33","4;12",88,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    //  ViewController.swift&#xD;&#xA;    //  SwiftPHPMySQL&#xD;&#xA;    //&#xD;&#xA;    //  Created by Belal Khan on 12/08/16.&#xD;&#xA;    //  Copyright © 2016 Belal Khan. All rights reserved.&#xD;&#xA;    //&#xD;&#xA;    import UIKit&#xD;&#xA;    class ViewController: UIViewController {&#xD;&#xA;   &#xD;&#xA;    //URL to our web service&#xD;&#xA;    let URL_SAVE_TEAM = """"http://192.168.1.103/MyWebService/api/createteam.php""""&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    //TextFields declarations&#xD;&#xA;    @IBOutlet weak var textFieldName: UITextField!&#xD;&#xA;    @IBOutlet weak var textFieldMember: UITextField!&#xD;&#xA;   &#xD;&#xA;    &#xD;&#xA;    //Button action method&#xD;&#xA;    @IBAction func buttonSave(sender: UIButton) {&#xD;&#xA;        &#xD;&#xA;        //created NSURL&#xD;&#xA;        let requestURL = NSURL(string: URL_SAVE_TEAM)&#xD;&#xA;        &#xD;&#xA;        //creating NSMutableURLRequest&#xD;&#xA;        let request = NSMutableURLRequest(URL: requestURL!)&#xD;&#xA;        &#xD;&#xA;        //setting the method to post&#xD;&#xA;        request.HTTPMethod = """"POST""""&#xD;&#xA;        &#xD;&#xA;        //getting values from text fields&#xD;&#xA;        let teamName=textFieldName.text&#xD;&#xA;        let memberCount = textFieldMember.text&#xD;&#xA;        &#xD;&#xA;        //creating the post parameter by concatenating the keys and values from text field&#xD;&#xA;        let postParameters = """"name=""""+teamName!+""""&member=""""+memberCount!;&#xD;&#xA;        &#xD;&#xA;        //adding the parameters to request body&#xD;&#xA;        request.HTTPBody = postParameters.dataUsingEncoding(NSUTF8StringEncoding)&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        //creating a task to send the post request&#xD;&#xA;        let task = NSURLSession.sharedSession().dataTaskWithRequest(request){&#xD;&#xA;            data, response, error in&#xD;&#xA;            &#xD;&#xA;            if error != nil{&#xD;&#xA;                print(""""error is \(error)"""")&#xD;&#xA;                return;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            //parsing the response&#xD;&#xA;            do {&#xD;&#xA;                //converting resonse to NSDictionary&#xD;&#xA;                let myJSON =  try NSJSONSerialization.JSONObjectWithData(data!, options: .MutableContainers) as? NSDictionary&#xD;&#xA;                &#xD;&#xA;                //parsing the json&#xD;&#xA;                if let parseJSON = myJSON {&#xD;&#xA;                    &#xD;&#xA;                    //creating a string&#xD;&#xA;                    var msg : String!&#xD;&#xA;                    &#xD;&#xA;                    //getting the json response&#xD;&#xA;                    msg = parseJSON[""""message""""] as! String?&#xD;&#xA;                    &#xD;&#xA;                    //printing the response&#xD;&#xA;                    print(msg)&#xD;&#xA;                    &#xD;&#xA;                }&#xD;&#xA;            } catch {&#xD;&#xA;                print(error)&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;        }&#xD;&#xA;        //executing the task&#xD;&#xA;        task.resume()&#xD;&#xA;        &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    override func viewDidLoad() {&#xD;&#xA;        super.viewDidLoad()&#xD;&#xA;        // Do any additional setup after loading the view, typically from a nib.&#xD;&#xA;    }&#xD;&#xA;    override func didReceiveMemoryWarning() {&#xD;&#xA;        super.didReceiveMemoryWarning()&#xD;&#xA;        // Dispose of any resources that can be recreated.&#xD;&#xA;    }&#xD;&#xA;    }"
"CPP","-7754509547070621741",2,2,"5061188;5044817","5061188;5044817","360907;360907","2011-02-21 00:28:30;2011-02-18 17:57:14","0;0",64,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,"    #ifndef QUEUETEMPLATE_H&#xD;&#xA;    #define QUEUETEMPLATE_H&#xD;&#xA;    #include """"queue.h""""&#xD;&#xA;    using namespace std;&#xD;&#xA;    &#xD;&#xA;    // Constructor&#xD;&#xA;    template <class Type>&#xD;&#xA;    queue<Type> :: queue(int queuesize): &#xD;&#xA;    	Front(0), Back(0),&#xD;&#xA;    	QueueSize(queuesize),&#xD;&#xA;    	Contents(new Type[queuesize + 1])&#xD;&#xA;    {}&#xD;&#xA;    &#xD;&#xA;    // Destructor&#xD;&#xA;    template <class Type>&#xD;&#xA;    queue<Type> :: ~queue()&#xD;&#xA;    {&#xD;&#xA;    	delete[] Contents;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Tests&#xD;&#xA;    template <class Type>&#xD;&#xA;    bool queue<Type> :: Empty() const&#xD;&#xA;    {&#xD;&#xA;    	return (Front == Back) ? true : false;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    template <class Type>&#xD;&#xA;    bool queue<Type> :: Full() const&#xD;&#xA;    {&#xD;&#xA;    	return ((1 + Back) % (QueueSize + 1) == Front) ? true : false;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Push and pop&#xD;&#xA;    template <class Type>&#xD;&#xA;    bool queue<Type> :: Remove(Type& FrontElement)&#xD;&#xA;    {&#xD;&#xA;    	if (Empty())&#xD;&#xA;    	{&#xD;&#xA;    		return false;&#xD;&#xA;    	}&#xD;&#xA;    	else&#xD;&#xA;    	{&#xD;&#xA;    		FrontElement = Contents[Front];&#xD;&#xA;    		Front = (Front + 1) % (QueueSize + 1);&#xD;&#xA;    		return true;&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    template <class Type>&#xD;&#xA;    bool queue<Type> :: Add(Type& NewElement)&#xD;&#xA;    {&#xD;&#xA;    	if(Full())&#xD;&#xA;    	{&#xD;&#xA;    		return false;&#xD;&#xA;    	}&#xD;&#xA;    	else&#xD;&#xA;    	{&#xD;&#xA;    		Contents[Back] = NewElement;&#xD;&#xA;    		Back = (Back + 1) % (QueueSize + 1);&#xD;&#xA;    		return true;&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    #endif"
"CPP","-4581786539164320139",2,2,"48493040;49090366","48495317;49090786","1757805;1757805","2018-01-29 06:10:40;2018-03-04 00:41:37","1;1",40,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,"    #ifndef EXECUTION_TIMER_H&#xD;&#xA;    #define EXECUTION_TIMER_H&#xD;&#xA;    &#xD;&#xA;    #include <chrono>&#xD;&#xA;    #include <type_traits>&#xD;&#xA;    #include <sstream>&#xD;&#xA;    #include <iostream>&#xD;&#xA;    &#xD;&#xA;    template <class Resolution = std::chrono::milliseconds>&#xD;&#xA;    class ExecutionTimer {&#xD;&#xA;    public:&#xD;&#xA;    	using Clock = std::conditional_t<std::chrono::high_resolution_clock::is_steady,&#xD;&#xA;    		std::chrono::high_resolution_clock,&#xD;&#xA;    		std::chrono::steady_clock>;&#xD;&#xA;    &#xD;&#xA;    private:&#xD;&#xA;    	const Clock::time_point mStart = Clock::now();&#xD;&#xA;    &#xD;&#xA;    public:&#xD;&#xA;    	ExecutionTimer() = default;&#xD;&#xA;    	~ExecutionTimer() {&#xD;&#xA;    		const auto end = Clock::now();&#xD;&#xA;    		std::ostringstream strStream;&#xD;&#xA;    		strStream << """"Destructor Elapsed: """"&#xD;&#xA;    			<< std::chrono::duration_cast<Resolution>(end - mStart).count()&#xD;&#xA;    			<< std::endl;&#xD;&#xA;    		std::cout << strStream.str() << std::endl;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	inline void stop() {&#xD;&#xA;    		const auto end = Clock::now();&#xD;&#xA;    		std::ostringstream strStream;&#xD;&#xA;    		strStream << """"Stop Elapsed: """"&#xD;&#xA;    			<< std::chrono::duration_cast<Resolution>(end - mStart).count()&#xD;&#xA;    			<< std::endl;&#xD;&#xA;    		std::cout << strStream.str() << std::endl;&#xD;&#xA;    	}&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    #endif // !EXECUTION_TIMER_H"
"CPP","1939864691097536533",2,2,"39274438;39319035","39274438;39319035","6783741;6793599","2016-09-01 14:35:56;2016-09-04 16:23:54","-4;3",85,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,"    #include <iostream>&#xD;&#xA;    using namespace std;&#xD;&#xA;    class Block&#xD;&#xA;    {&#xD;&#xA;        int data;&#xD;&#xA;    &#xD;&#xA;    public:&#xD;&#xA;        Block(int i = 10)&#xD;&#xA;            : data(i)&#xD;&#xA;        { &#xD;&#xA;            cout << """"I just created a Block """" << endl;&#xD;&#xA;        }&#xD;&#xA;        ~Block()&#xD;&#xA;        {&#xD;&#xA;            cout << """"I will destroy a Block with """" << data << endl;&#xD;&#xA;        }&#xD;&#xA;        void inc()&#xD;&#xA;        {&#xD;&#xA;            data++;&#xD;&#xA;        }&#xD;&#xA;    };&#xD;&#xA;    class A&#xD;&#xA;    {&#xD;&#xA;        Block& block1;&#xD;&#xA;        Block block2;&#xD;&#xA;    &#xD;&#xA;    public:&#xD;&#xA;        A(Block& blk)&#xD;&#xA;            : block1(blk)&#xD;&#xA;            , block2(blk)&#xD;&#xA;        {&#xD;&#xA;            cout << """"I just created an A """" << endl;&#xD;&#xA;        }&#xD;&#xA;        A(const A& a)&#xD;&#xA;            : block1(a.block1)&#xD;&#xA;            , block2(a.block2)&#xD;&#xA;        {&#xD;&#xA;            cout << """"I just created an A by copying but I will also do bad things"""" << endl;&#xD;&#xA;            block1.inc();&#xD;&#xA;            block2.inc();&#xD;&#xA;        }&#xD;&#xA;        ~A()&#xD;&#xA;        {&#xD;&#xA;            cout << """"I will destroy an A """" << endl;&#xD;&#xA;        }&#xD;&#xA;        void inc()&#xD;&#xA;        {&#xD;&#xA;            block1.inc();&#xD;&#xA;            block2.inc();&#xD;&#xA;        }&#xD;&#xA;    };&#xD;&#xA;    class Fat&#xD;&#xA;    {&#xD;&#xA;        A a;&#xD;&#xA;        A& ra;&#xD;&#xA;        A* pa;&#xD;&#xA;    &#xD;&#xA;    public:&#xD;&#xA;        Fat(A& da)&#xD;&#xA;            : a(da)&#xD;&#xA;            , ra(da)&#xD;&#xA;        {&#xD;&#xA;            pa = new A(da);&#xD;&#xA;            cout << """"Fat just created !"""" << endl;&#xD;&#xA;        }&#xD;&#xA;        ~Fat()&#xD;&#xA;        {&#xD;&#xA;            delete pa;&#xD;&#xA;            cout << """"Fat to be destroyed !"""" << endl;&#xD;&#xA;        }&#xD;&#xA;        void inc()&#xD;&#xA;        {&#xD;&#xA;            a.inc();&#xD;&#xA;            ra.inc();&#xD;&#xA;            pa->inc();&#xD;&#xA;        }&#xD;&#xA;    };&#xD;&#xA;    int main()&#xD;&#xA;    {&#xD;&#xA;        Block block;&#xD;&#xA;        A a(block);&#xD;&#xA;        Fat fat(a);&#xD;&#xA;        fat.inc();&#xD;&#xA;        return 0;&#xD;&#xA;    }"
"CPP","-7958886146148110349",2,2,"20440283;20440828","20440283;20440828","2393351;2393351","2013-12-07 10:32:39;2013-12-07 11:31:02","-1;0",35,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,"    #include <iostream>&#xD;&#xA;    #include <string>&#xD;&#xA;    #include <cstdlib>&#xD;&#xA;    #include <time.h>&#xD;&#xA;    #include """"Dice.h""""&#xD;&#xA;    #include """"player.h""""&#xD;&#xA;    using namespace std;&#xD;&#xA;    int main()&#xD;&#xA;    {&#xD;&#xA;        srand (time(NULL));&#xD;&#xA;        int playerChoice;&#xD;&#xA;        Dice d(1,6);&#xD;&#xA;        player p;&#xD;&#xA;        cout << """"Enter player name"""" << endl;&#xD;&#xA;        p.setPlayerName();&#xD;&#xA;        cout << """"Your name is """" << p.getPlayerName() << """"."""" << endl << endl;&#xD;&#xA;        cout << """"Time to create a Cootie!"""" << endl;&#xD;&#xA;        cout << """"Please name your Cootie!"""" << endl;&#xD;&#xA;        p.setCootieName();&#xD;&#xA;        cout << """"Add body parts using die rolls."""" << endl;&#xD;&#xA;        cout << """"To roll the die, input 1"""" << endl;&#xD;&#xA;        cout << """"To exit, input 0"""" << endl;&#xD;&#xA;        cin >> playerChoice;&#xD;&#xA;        while(1)&#xD;&#xA;        {&#xD;&#xA;            if (playerChoice == 1)&#xD;&#xA;            {&#xD;&#xA;                p.takeTurn();&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                return 0;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
"CPP","5901738080191477821",2,2,"4997115;4992448","4997115;4992448","616199;616199","2011-02-14 20:52:47;2011-02-14 13:04:09","0;1",47,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,"    #include <algorithm>&#xD;&#xA;    #include <cctype>&#xD;&#xA;    #include <iterator>&#xD;&#xA;    #include <fstream>&#xD;&#xA;    #include <iostream>&#xD;&#xA;    #include <vector>&#xD;&#xA;    #include <string>&#xD;&#xA;    #include <sstream>&#xD;&#xA;    &#xD;&#xA;    using namespace std;&#xD;&#xA;    &#xD;&#xA;    // Edited: added struct (wilhelmtell's advice)&#xD;&#xA;    struct not_digit_and_not_whitespace {&#xD;&#xA;        bool operator()(char c) const {&#xD;&#xA;            return ! std::isdigit(c) && ! std::isspace(c);&#xD;&#xA;        }&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    int main()&#xD;&#xA;    {&#xD;&#xA;        system(""""pwd"""");&#xD;&#xA;    &#xD;&#xA;        std::string line;&#xD;&#xA;        const std::string fileName = """"/Users/me/test.dat"""";  &#xD;&#xA;    &#xD;&#xA;        ifstream theStream( fileName.c_str() ); &#xD;&#xA;    &#xD;&#xA;        if( ! theStream )&#xD;&#xA;              std::cerr << """"Error opening file test.dat\n"""";&#xD;&#xA;    &#xD;&#xA;        std::getline( theStream, line );&#xD;&#xA;        // line.erase(remove( line.begin(), line.end(), '\'' ), line.end() ); // Edited (wilhelmtell's advice)&#xD;&#xA;        line.erase(remove_if( line.begin(), line.end(),not_digit_and_not_whitespace()), line.end() );  // Edited: added (wilhelmtell's advice)&#xD;&#xA;    &#xD;&#xA;        std::istringstream myStream( line );&#xD;&#xA;        std::vector<int> numbers((std::istream_iterator<int>(myStream)), std::istream_iterator<int>());&#xD;&#xA;    &#xD;&#xA;        std::copy(numbers.begin(), numbers.end(),&#xD;&#xA;                  std::ostream_iterator<int>(std::cout, """"\n""""));&#xD;&#xA;    &#xD;&#xA;        /* int temp;  // Edited: wilhemtell suggested using iterators instead.&#xD;&#xA;        while ( myStream >> temp ){&#xD;&#xA;            numbers.push_back( temp );&#xD;&#xA;         std::cout << temp << std::endl;&#xD;&#xA;        }*/&#xD;&#xA;        return 0;&#xD;&#xA;    }"
"ObjectiveC","69965300928380121",2,2,"42803028;42797976","42803028;42797976","7655179;7655179","2017-03-15 07:00:07;2017-03-14 22:46:48","0;1",69,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,"    - (void)viewDidLoad {&#xD;&#xA;    [super viewDidLoad];&#xD;&#xA;    // Do any additional setup after loading the view.&#xD;&#xA;    //Controls whether the My Location dot and accuracy circle is enabled.&#xD;&#xA;    CGFloat currentZoom = 14.0f;&#xD;&#xA;    self.mapView.myLocationEnabled = YES;&#xD;&#xA;    &#xD;&#xA;    //adds type of map: kGMSTypeSatellite, kGMSTypeTerrain, kGMSTypeHybrid, kGMSTypeNormal&#xD;&#xA;    self.mapView.mapType = kGMSTypeHybrid;&#xD;&#xA;    &#xD;&#xA;    //Shows the compass button on the map&#xD;&#xA;    self.mapView.settings.compassButton = YES;&#xD;&#xA;    &#xD;&#xA;    //Shows the my location button on the map&#xD;&#xA;    self.mapView.settings.myLocationButton = YES;&#xD;&#xA;    &#xD;&#xA;    //Sets the view controller to be the GMSMapView delegate&#xD;&#xA;    self.mapView.delegate = self;&#xD;&#xA;    GMSCameraPosition *manhattan = [GMSCameraPosition cameraWithLatitude:40.790278&#xD;&#xA;                                                            longitude:-73.959722&#xD;&#xA;                                                                 zoom:14];&#xD;&#xA;    self.mapView.camera = manhattan;&#xD;&#xA;    }&#xD;&#xA;     //setting up zoom&#xD;&#xA;    -(void)ZoominOutMap:(CGFloat)level&#xD;&#xA;    {&#xD;&#xA;    self.mapView.delegate = self;&#xD;&#xA;    GMSCameraPosition *camera = [GMSCameraPosition cameraWithLatitude:40.790218 longitude:-73.959722&#xD;&#xA;                                                                 zoom:level];&#xD;&#xA;    self.mapView.camera = camera;&#xD;&#xA;    }&#xD;&#xA;    -(void)zoomInMapView:(id)sender&#xD;&#xA;    {&#xD;&#xA;    CGFloat currentZoom;&#xD;&#xA;    currentZoom = currentZoom + 1;&#xD;&#xA;    &#xD;&#xA;    [self ZoominOutMap:currentZoom];&#xD;&#xA;    }&#xD;&#xA;    -(void) zoomOutMapView:(id)sender&#xD;&#xA;    {&#xD;&#xA;    CGFloat currentZoom;&#xD;&#xA;    currentZoom = currentZoom - 1;&#xD;&#xA;    &#xD;&#xA;    [self ZoominOutMap:currentZoom];&#xD;&#xA;    }&#xD;&#xA;    - (void)mapView:(GMSMapView *)mapView didTapAtCoordinate:(CLLocationCoordinate2D)coordinate&#xD;&#xA;    {&#xD;&#xA;    NSLog(@""""You tapped at %f,%f"""", coordinate.latitude, coordinate.longitude);&#xD;&#xA;    GMSMarker *marker = [[GMSMarker alloc] init];&#xD;&#xA;    //adds animation for adding marker&#xD;&#xA;    marker.appearAnimation = kGMSMarkerAnimationPop;&#xD;&#xA;    //draw marker on tapped position&#xD;&#xA;    marker.position = CLLocationCoordinate2DMake(coordinate.latitude,coordinate.longitude);&#xD;&#xA;    marker.map = _mapView;&#xD;&#xA;    //set color of marker and make them draggable&#xD;&#xA;    marker.icon = [GMSMarker markerImageWithColor:[UIColor blueColor]];&#xD;&#xA;    [marker setDraggable: YES];&#xD;&#xA;    &#xD;&#xA;    // Create a rectangular path&#xD;&#xA;    GMSMutablePath *rect = [GMSMutablePath path];&#xD;&#xA;    [rect addCoordinate:CLLocationCoordinate2DMake(coordinate.latitude,coordinate.longitude)];&#xD;&#xA;    &#xD;&#xA;    // Create the polygon, and assign it to the map.&#xD;&#xA;    GMSPolygon *polygon = [GMSPolygon polygonWithPath:rect];&#xD;&#xA;    polygon.fillColor = [UIColor colorWithRed:0.25 green:0 blue:0 alpha:0.05];&#xD;&#xA;    polygon.strokeColor = [UIColor blackColor];&#xD;&#xA;    polygon.strokeWidth = 2;&#xD;&#xA;    polygon.map = _mapView;&#xD;&#xA;    }"
"ObjectiveC","-4443565338737415159",3,3,"8600029;17877304;18179258","17857075;17882097;18179575","2614528;2614528;2614528","2013-07-25 11:43:25;2013-07-26 13:05:46;2013-08-12 04:33:23","0;1;0",68,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,"    - (XMLParserViewController *) initXMLParser {&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];&#xD;&#xA;        &#xD;&#xA;        return self;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    - (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName&#xD;&#xA;      namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qualifiedName&#xD;&#xA;        attributes:(NSDictionary *)attributeDict &#xD;&#xA;    {&#xD;&#xA;        &#xD;&#xA;        if([elementName isEqualToString:@""""Books""""]) {&#xD;&#xA;            appDelegate.books = [[NSMutableArray alloc] init];&#xD;&#xA;        }&#xD;&#xA;        else if([elementName isEqualToString:@""""Book""""])&#xD;&#xA;        {&#xD;&#xA;            &#xD;&#xA;            aBook = [[Books alloc] init];&#xD;&#xA;            &#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        NSLog(@""""Processing Element: %@"""", elementName);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    - (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string {&#xD;&#xA;        &#xD;&#xA;        if(!currentElementValue)&#xD;&#xA;            currentElementValue = [[NSMutableString alloc] initWithString:string];&#xD;&#xA;        else&#xD;&#xA;            [currentElementValue appendString:string];&#xD;&#xA;        &#xD;&#xA;        NSLog(@""""Processing Value: %@"""", currentElementValue);&#xD;&#xA;        &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    - (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName&#xD;&#xA;      namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName {&#xD;&#xA;        &#xD;&#xA;        if([elementName isEqualToString:@""""Books""""])&#xD;&#xA;            return;&#xD;&#xA;        &#xD;&#xA;        if([elementName isEqualToString:@""""Book""""])&#xD;&#xA;        {&#xD;&#xA;           [appDelegate.books addObject:aBook];        &#xD;&#xA;              aBook = nil;&#xD;&#xA;        }&#xD;&#xA;        else if([elementName isEqualToString:@""""name""""])&#xD;&#xA;        {&#xD;&#xA;            aBook.name=currentElementValue;&#xD;&#xA;        }&#xD;&#xA;        else if([elementName isEqualToString:@""""address""""])&#xD;&#xA;        {&#xD;&#xA;            aBook.address=currentElementValue;&#xD;&#xA;        }&#xD;&#xA;        else if([elementName isEqualToString:@""""country""""])&#xD;&#xA;        {&#xD;&#xA;            aBook.country=currentElementValue;&#xD;&#xA;        }        &#xD;&#xA;            &#xD;&#xA;        currentElementValue = nil;&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        NSLog(@""""%@"""",aBook.name);&#xD;&#xA;        NSLog(@""""%@"""",aBook.address);&#xD;&#xA;        NSLog(@""""%@"""",aBook.country);&#xD;&#xA;    }"
"ObjectiveC","-5380444763836321638",2,2,"31354381;12245929","34677720;13427662","5514833;966322","2016-01-08 12:59:33;2012-11-17 04:24:15","1;9",33,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,"    - (void)post:(NSData *)fileData&#xD;&#xA;    {&#xD;&#xA;    &#xD;&#xA;        NSLog(@""""POSTING"""");&#xD;&#xA;    &#xD;&#xA;        // Generate the postdata:&#xD;&#xA;        NSData *postData = [self generatePostDataForData: fileData];&#xD;&#xA;        NSString *postLength = [NSString stringWithFormat:@""""%d"""", [postData length]];&#xD;&#xA;    &#xD;&#xA;        // Setup the request:&#xD;&#xA;        NSMutableURLRequest *uploadRequest = [[[NSMutableURLRequest alloc] initWithURL:[NSURL URLWithString:@""""http://www.example.com:3000/""""] cachePolicy: NSURLRequestReloadIgnoringLocalCacheData timeoutInterval: 30 ] autorelease];&#xD;&#xA;        [uploadRequest setHTTPMethod:@""""POST""""];&#xD;&#xA;        [uploadRequest setValue:postLength forHTTPHeaderField:@""""Content-Length""""];&#xD;&#xA;        [uploadRequest setValue:@""""multipart/form-data; boundary=AaB03x"""" forHTTPHeaderField:@""""Content-Type""""];&#xD;&#xA;        [uploadRequest setHTTPBody:postData];&#xD;&#xA;    &#xD;&#xA;        // Execute the reqest:&#xD;&#xA;        NSURLConnection *conn=[[NSURLConnection alloc] initWithRequest:uploadRequest delegate:self];&#xD;&#xA;        if (conn)&#xD;&#xA;        {&#xD;&#xA;            // Connection succeeded (even if a 404 or other non-200 range was returned).&#xD;&#xA;            NSLog(@""""sucess"""");&#xD;&#xA;            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@""""Got Server Response"""" message:@""""Success"""" delegate:nil cancelButtonTitle:@""""OK"""" otherButtonTitles:nil];&#xD;&#xA;            [alert show];&#xD;&#xA;            [alert release];&#xD;&#xA;        }&#xD;&#xA;        else&#xD;&#xA;        {&#xD;&#xA;            // Connection failed (cannot reach server).&#xD;&#xA;            NSLog(@""""fail"""");&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }"
"ObjectiveC","-3892945869479386127",2,2,"16260156;10894337","16260156;10894523","1244403;1126111","2013-04-28 06:09:28;2012-06-05 09:10:10","1;9",45,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,"    - (void)saveImage &#xD;&#xA;    {&#xD;&#xA;      sqlite3_stmt *compiledStmt;&#xD;&#xA;      sqlite3 *db;&#xD;&#xA;      if(sqlite3_open([dbPath UTF8String], &db)==SQLITE_OK){&#xD;&#xA;      NSString *insertSQL=@""""insert into Image(image) VALUES(?)"""";&#xD;&#xA;        if(sqlite3_prepare_v2(db,[insertSQL cStringUsingEncoding:NSUTF8StringEncoding], -1, &compiledStmt, NULL) == SQLITE_OK)&#xD;&#xA;         {&#xD;&#xA;            UIImage *image = [UIImage imageNamed:@""""vegextra.png""""];&#xD;&#xA;            NSData *imageData=UIImagePNGRepresentation(image);&#xD;&#xA;            sqlite3_bind_blob(compiledStmt, 1, [imageData bytes], [imageData length], SQLITE_TRANSIENT);&#xD;&#xA;               if(sqlite3_step(compiledStmt) != SQLITE_DONE ) {&#xD;&#xA;                      NSLog( @""""Error: %s"""", sqlite3_errmsg(db) );&#xD;&#xA;                } else {&#xD;&#xA;                      NSLog( @""""Insert into row id = %lld"""",  (sqlite3_last_insert_rowid(db)));&#xD;&#xA;                }&#xD;&#xA;           sqlite3_finalize(compiledStmt);&#xD;&#xA;         }&#xD;&#xA;       }&#xD;&#xA;         sqlite3_close(db);&#xD;&#xA;       }&#xD;&#xA;      - (void)showImage&#xD;&#xA;       {&#xD;&#xA;           sqlite3_stmt *compiledStmt;&#xD;&#xA;           sqlite3 *db;&#xD;&#xA;           int i = 1;&#xD;&#xA;             if(sqlite3_open([dbPath UTF8String], &db)==SQLITE_OK)&#xD;&#xA;             {&#xD;&#xA;               NSString *insertSQL = [NSString stringWithFormat:@""""Select image from Image Where Id = %d"""",i];&#xD;&#xA;             if(sqlite3_prepare_v2(db,[insertSQL cStringUsingEncoding:NSUTF8StringEncoding], -1, &compiledStmt, NULL) == SQLITE_OK) &#xD;&#xA;              {&#xD;&#xA;                 while(sqlite3_step(compiledStmt) == SQLITE_ROW) {&#xD;&#xA;                 int length = sqlite3_column_bytes(compiledStmt, 0);&#xD;&#xA;                 NSData *imageData = [NSData dataWithBytes:sqlite3_column_blob(compiledStmt, 0) length:length];&#xD;&#xA;                 NSLog(@""""Length : %d"""", [imageData length]);&#xD;&#xA;                    if(imageData == nil)&#xD;&#xA;                           NSLog(@""""No image found."""");&#xD;&#xA;                    else&#xD;&#xA;                           imgView.image = [UIImage imageWithData:imageData];&#xD;&#xA;            }&#xD;&#xA;           }&#xD;&#xA;           sqlite3_finalize(compiledStmt);&#xD;&#xA;          }&#xD;&#xA;            sqlite3_close(db);&#xD;&#xA;       } "
"ObjectiveC","-3985010150073850371",2,2,"33252789;33341009","33252789;33341009","5466596;5466596","2015-10-21 06:54:07;2015-10-26 08:01:59","1;2",49,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,"                NSString *requestString = [NSString stringWithFormat:@""""name=%@&mobileno=%@&emailid=%@&dob=%@&password=%@&gender=%@&ref=%@&fbflag=0"""",goSignUpName,goSignUpMobile,goSignUpEmailId,goSignUpDOB,goSignUpPassword,goSignUpGender,goSignUpReferenceId] ;&#xD;&#xA;                NSData *postData = [requestString dataUsingEncoding:NSASCIIStringEncoding allowLossyConversion:YES];&#xD;&#xA;                NSString *postLength = [NSString stringWithFormat:@""""%lu"""",(unsigned long)[postData length]];&#xD;&#xA;                NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];&#xD;&#xA;                &#xD;&#xA;                [request setURL:[NSURL URLWithString:urlLoc]];&#xD;&#xA;                [request setHTTPMethod:@""""POST""""];&#xD;&#xA;                [request setValue:postLength forHTTPHeaderField:@""""Content-Length""""];&#xD;&#xA;                [request setValue:@""""application/x-www-form-urlencoded"""" forHTTPHeaderField:@""""Content-Type""""];&#xD;&#xA;                [request setHTTPBody:postData];&#xD;&#xA;                &#xD;&#xA;                [NSURLConnection sendAsynchronousRequest:request queue:[NSOperationQueue mainQueue] completionHandler:^(NSURLResponse *response, NSData *data, NSError *connectionError)&#xD;&#xA;                 {&#xD;&#xA;                     &#xD;&#xA;                     if(data.length>0 && connectionError==nil)&#xD;&#xA;                     {&#xD;&#xA;                         &#xD;&#xA;                         &#xD;&#xA;                         responseData = [[NSString alloc]initWithData:data encoding:NSUTF8StringEncoding];&#xD;&#xA;                         NSLog(@""""LOGIN Response ==> %@"""", responseData);&#xD;&#xA;                         &#xD;&#xA;                         if ([responseData intValue] == 1)&#xD;&#xA;                         {&#xD;&#xA;                             &#xD;&#xA;                             UIAlertView *alert =[[UIAlertView alloc] initWithTitle:@""""Thanks"""" message:@""""Registered"""" delegate:nil cancelButtonTitle:@""""Ok"""" otherButtonTitles:nil, nil];&#xD;&#xA;                             [alert show];&#xD;&#xA;                             &#xD;&#xA;                             for(id controller in [self.navigationController viewControllers])&#xD;&#xA;                             {&#xD;&#xA;                                 if([controller isKindOfClass : [ViewController class]]){ [self.navigationController popToViewController: controller animated: YES];&#xD;&#xA;                                     break;&#xD;&#xA;                                 }&#xD;&#xA;                             }&#xD;&#xA;                             &#xD;&#xA;                             &#xD;&#xA;                             &#xD;&#xA;                         }&#xD;&#xA;                         else if ([responseData intValue] == 2)&#xD;&#xA;                         {&#xD;&#xA;                             UIAlertView *alert =[[UIAlertView alloc] initWithTitle:@""""Already Reegistered"""" message:@""""Please choose other Details"""" delegate:nil cancelButtonTitle:@""""Ok"""" otherButtonTitles:nil, nil];&#xD;&#xA;                             [alert show];&#xD;&#xA;                         }&#xD;&#xA;                         else if (responseData==NULL)&#xD;&#xA;                         {&#xD;&#xA;                             UIAlertView *alert =[[UIAlertView alloc] initWithTitle:@""""Alert!"""" message:@""""Not Book Try Again!!"""" delegate:nil cancelButtonTitle:@""""Ok"""" otherButtonTitles:nil, nil];&#xD;&#xA;                             [alert show];&#xD;&#xA;                         }&#xD;&#xA;                         &#xD;&#xA;               "
"C","2894894088992242877",2,2,"46993402;29244170","46993402;29245647","8777167;3003365","2017-10-28 19:04:02;2015-03-25 00:49:44","0;1",35,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,"    #include <stdio.h>&#xD;&#xA;    #include <sys/types.h>&#xD;&#xA;    #include <sys/wait.h>&#xD;&#xA;    #include <unistd.h>&#xD;&#xA;    &#xD;&#xA;    int main(void)&#xD;&#xA;    {&#xD;&#xA;        pid_t before_pid, after_pid;&#xD;&#xA;        pid_t forked_pid;&#xD;&#xA;        int count;&#xD;&#xA;        int i;&#xD;&#xA;        int status;&#xD;&#xA;    &#xD;&#xA;        before_pid = getpid();&#xD;&#xA;        count = 1; /* count self */&#xD;&#xA;        for (i = 0; i < 3; i++) {&#xD;&#xA;            forked_pid = fork();&#xD;&#xA;    &#xD;&#xA;            if (forked_pid > 0) {&#xD;&#xA;                waitpid(forked_pid, &status, 0);&#xD;&#xA;                /* parent process - count child and descendents */&#xD;&#xA;                count += WEXITSTATUS(status); &#xD;&#xA;            } else {&#xD;&#xA;                /* Child process - init with self count */&#xD;&#xA;                count = 1;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        after_pid = getpid();&#xD;&#xA;        if (after_pid == before_pid) {&#xD;&#xA;            printf(""""%d processes created\n"""", count);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        return (count);&#xD;&#xA;    }"
"C","1413742810809742348",2,2,"26433772;35684899","30236735;35686947","608639;608639","2015-05-14 11:54:15;2016-02-28 19:04:37","5;0",37,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,"    diff --git a/crypto/mem_clr.c b/crypto/mem_clr.c&#xD;&#xA;    index e6450a1..3389919 100644 (file)&#xD;&#xA;    --- a/crypto/mem_clr.c&#xD;&#xA;    +++ b/crypto/mem_clr.c&#xD;&#xA;    @@ -59,23 +59,16 @@&#xD;&#xA;     #include <string.h>&#xD;&#xA;     #include <openssl/crypto.h>&#xD;&#xA;     &#xD;&#xA;    -extern unsigned char cleanse_ctr;&#xD;&#xA;    -unsigned char cleanse_ctr = 0;&#xD;&#xA;    +/*&#xD;&#xA;    + * Pointer to memset is volatile so that compiler must de-reference&#xD;&#xA;    + * the pointer and can't assume that it points to any function in&#xD;&#xA;    + * particular (such as memset, which it then might further """"optimize"""")&#xD;&#xA;    + */&#xD;&#xA;    +typedef void *(*memset_t)(void *,int,size_t);&#xD;&#xA;    +&#xD;&#xA;    +static volatile memset_t memset_func = memset;&#xD;&#xA;     &#xD;&#xA;     void OPENSSL_cleanse(void *ptr, size_t len)&#xD;&#xA;     {&#xD;&#xA;    -    unsigned char *p = ptr;&#xD;&#xA;    -    size_t loop = len, ctr = cleanse_ctr;&#xD;&#xA;    -&#xD;&#xA;    -    if (ptr == NULL)&#xD;&#xA;    -        return;&#xD;&#xA;    -&#xD;&#xA;    -    while (loop--) {&#xD;&#xA;    -        *(p++) = (unsigned char)ctr;&#xD;&#xA;    -        ctr += (17 + ((size_t)p & 0xF));&#xD;&#xA;    -    }&#xD;&#xA;    -    p = memchr(ptr, (unsigned char)ctr, len);&#xD;&#xA;    -    if (p)&#xD;&#xA;    -        ctr += (63 + (size_t)p);&#xD;&#xA;    -    cleanse_ctr = (unsigned char)ctr;&#xD;&#xA;    +    memset_func(ptr, 0, len);&#xD;&#xA;     }"
"C","-884704508746091909",2,2,"50002563;50029949","50045667;50046167","9501757;9501757","2018-04-26 14:32:31;2018-04-26 14:55:32","0;2",72,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,"    // may tried RandomAccess/SequentialScan&#xD;&#xA;    MemoryMapped MemFile(FilterBase.BaseFileName, MemoryMapped::WholeFile, MemoryMapped::RandomAccess);&#xD;&#xA;    // point to start of memory file&#xD;&#xA;    char* start = (char*)MemFile.getData();&#xD;&#xA;    // dummy in my case&#xD;&#xA;    char* tmpBuffer = start;&#xD;&#xA;    // looping counter&#xD;&#xA;    uint64_t i = 0;&#xD;&#xA;    // pre-allocate result vector&#xD;&#xA;    MyVector.resize(300000);&#xD;&#xA;    // Line counter&#xD;&#xA;    int LnCnt = 0;&#xD;&#xA;    //no. of field&#xD;&#xA;    int NumOfField=43;&#xD;&#xA;    //delimiter count, num of field + 1 since the leading and trailing delimiter are virtual&#xD;&#xA;    int DelimCnt=NoOfField+1;&#xD;&#xA;    //Delimiter position. May use new to allocate at run time&#xD;&#xA;    // or even use vector of integer&#xD;&#xA;    // This is to store the delimiter position in each line&#xD;&#xA;    // since the position is relative to start of file. if file is extremely&#xD;&#xA;    // large, may need to change from int to unsigner, long or even unsigned long long&#xD;&#xA;    static  int DelimPos[DelimCnt];&#xD;&#xA;    // Max number of field need to read usually equal to NumOfField, can be smaller, eg in my case, I only need 4 fields&#xD;&#xA;    // from first 15 field, in this case, can assign 15 to MaxFieldNeed&#xD;&#xA;    int MaxFieldNeed=NumOfField;&#xD;&#xA;    // keep track how many comma read each line&#xD;&#xA;    int DelimCounter=0;&#xD;&#xA;    // define field and line seperator&#xD;&#xA;    char FieldDelim=',';&#xD;&#xA;    char LineSep='\n';&#xD;&#xA;    // 1st field, """"virtual Delimiter"""" position&#xD;&#xA;    DelimPos[CommaCounter]=-1&#xD;&#xA;    DelimCounter++;&#xD;&#xA;    // loop through the whole memory field, 1 and only once&#xD;&#xA;    for (i = 0; i < MemFile.size();i++)&#xD;&#xA;    {&#xD;&#xA;      // grab all position of delimiter in each line&#xD;&#xA;      if ((MemFile[i] == FieldDelim) && (DelimCounter<=MaxFieldNeed)){&#xD;&#xA;        DelimPos[DelimCounter] = i;&#xD;&#xA;        DelimCounter++;&#xD;&#xA;      };&#xD;&#xA;      // grab all values when end of line hit&#xD;&#xA;      if (MemFile[i] == LineSep) {&#xD;&#xA;        // no need to use if (DelimCounter==NumOfField) just assign anyway, waste a little bit&#xD;&#xA;        // memory in integer array but gain performance &#xD;&#xA;        DelimPos[DelimCounter] = i;&#xD;&#xA;        // I know exactly what the format is and what field(s) I want&#xD;&#xA;        // a more general approach (as a CSV reader) may put all fields&#xD;&#xA;        // into vector of vector of string&#xD;&#xA;        // With *EFFORT* one may modify this piece of code so that it can parse&#xD;&#xA;        // different format at run time eg similar to:&#xD;&#xA;        // fscanf(fstream,""""%d,%f....&#xD;&#xA;        // also, this piece of code cannot handle complex CSV e.g.&#xD;&#xA;        // Peter,28,157CM&#xD;&#xA;        // John,26,167CM&#xD;&#xA;        // """"Mary,Brown"""",25,150CM&#xD;&#xA;        MyVector.StrField = string(strat+DelimPos[0] + 1, strat+DelimPos[1] - 1);&#xD;&#xA;        MyVector.IntField = strtol(strat+DelimPos[3] + 1,&tmpBuffer,10);&#xD;&#xA;        MyVector.IntField2 = strtol(strat+DelimPos[8] + 1,&tmpBuffer,10);&#xD;&#xA;        MyVector.FloatField = strtof(start + DelimPos[14] + 1,&tmpBuffer);&#xD;&#xA;        // reset Delim counter each line&#xD;&#xA;        DelimCounter=0&#xD;&#xA;        // previous line seperator treat as first delimiter of next line&#xD;&#xA;        DelimPos[DelimCounter] = i;&#xD;&#xA;        DelimCounter++&#xD;&#xA;        LnCnt++;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    MyVector.resize(LnCnt);&#xD;&#xA;    MyVector.shrink_to_fit();&#xD;&#xA;    MemFile.close();&#xD;&#xA;    };"
"C","3379993892704385485",3,4,"45724999;45724999;45777988;45777616","45725556;45724999;45777988;45777616","6138713;8387819;8387819;8387819","2017-08-17 02:08:11;2017-08-17 00:44:34;2017-08-20 02:44:17;2017-08-20 01:13:04","1;1;0;1",126,FALSE,TRUE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,"     /// <reference path=""""../angular.min.js"""" />  &#xD;&#xA;       var app;&#xD;&#xA;       (function () {&#xD;&#xA;    app = angular.module(""""RESTClientModule"""",  []); &#xD;&#xA;    app.controller(""""CRUD_AngularJs_RESTController"""", function ($scope, CRUD_AngularJs_RESTService) {&#xD;&#xA;        $scope.OperType = 1;&#xD;&#xA;        //1 Mean New Entry  &#xD;&#xA;        GetAllRecords();&#xD;&#xA;        //To Get All Records  &#xD;&#xA;        function GetAllRecords() {&#xD;&#xA;            var promiseGet = CRUD_AngularJs_RESTService.getAllStudent();&#xD;&#xA;            promiseGet.then(function (pl) { $scope.Students = pl.data },&#xD;&#xA;                function (errorPl) {&#xD;&#xA;                    $log.error('Some Error in Getting Records.', errorPl);&#xD;&#xA;                });&#xD;&#xA;        }&#xD;&#xA;        //To Clear all input controls.  &#xD;&#xA;        function ClearModels() {&#xD;&#xA;            $scope.OperType = 1;&#xD;&#xA;            $scope.StudentID = """""""";&#xD;&#xA;            $scope.Name = """""""";&#xD;&#xA;            $scope.Email = """""""";&#xD;&#xA;            $scope.Class = """""""";&#xD;&#xA;            $scope.EnrollYear = """""""";&#xD;&#xA;            $scope.City = """""""";&#xD;&#xA;            $scope.Country = """""""";&#xD;&#xA;        }&#xD;&#xA;        //To Create new record and Edit an existing Record.  &#xD;&#xA;        $scope.save = function () {&#xD;&#xA;            var Student = {&#xD;&#xA;                Name: $scope.Name,&#xD;&#xA;                Email: $scope.Email,&#xD;&#xA;                Class: $scope.Class,&#xD;&#xA;                EnrollYear: $scope.EnrollYear,&#xD;&#xA;                City: $scope.City,&#xD;&#xA;                Country: $scope.Country&#xD;&#xA;            };&#xD;&#xA;            if ($scope.OperType === 1) {&#xD;&#xA;                var promisePost = CRUD_AngularJs_RESTService.post(Student);&#xD;&#xA;                promisePost.then(function (pl) {&#xD;&#xA;                    $scope.StudentID = pl.data.StudentID;&#xD;&#xA;                    GetAllRecords();&#xD;&#xA;                    ClearModels();&#xD;&#xA;                }, function (err) {&#xD;&#xA;                    console.log(""""Some error Occured"""" + err);&#xD;&#xA;                });&#xD;&#xA;            } else {&#xD;&#xA;                //Edit the record      &#xD;&#xA;                debugger;&#xD;&#xA;                Student.StudentID = $scope.StudentID;&#xD;&#xA;                var promisePut = CRUD_AngularJs_RESTService.put($scope.StudentID, Student);&#xD;&#xA;                promisePut.then(function (pl) {&#xD;&#xA;                    $scope.Message = """"Student Updated Successfuly"""";&#xD;&#xA;                    GetAllRecords();&#xD;&#xA;                    ClearModels();&#xD;&#xA;                }, function (err) {&#xD;&#xA;                    console.log(""""Some Error Occured."""" + err);&#xD;&#xA;                });&#xD;&#xA;            }&#xD;&#xA;        };&#xD;&#xA;        //To Get Student Detail on the Base of Student ID  &#xD;&#xA;        $scope.get = function (Student) {&#xD;&#xA;            var promiseGetSingle = CRUD_AngularJs_RESTService.get(Student.StudentID);&#xD;&#xA;            promiseGetSingle.then(function (pl) {&#xD;&#xA;                var res = pl.data;&#xD;&#xA;                $scope.StudentID = res.StudentID;&#xD;&#xA;                $scope.Name = res.Name;&#xD;&#xA;                $scope.Email = res.Email;&#xD;&#xA;                $scope.Class = res.Class;&#xD;&#xA;                $scope.EnrollYear = res.EnrollYear;&#xD;&#xA;                $scope.City = res.City;&#xD;&#xA;                $scope.Country = res.Country;&#xD;&#xA;                $scope.OperType = 0;&#xD;&#xA;            },&#xD;&#xA;                function (errorPl) {&#xD;&#xA;                    console.log('Some Error in Getting Details', errorPl);&#xD;&#xA;                });&#xD;&#xA;        }&#xD;&#xA;        //To Delete Record  &#xD;&#xA;        $scope.delete = function (Student) {&#xD;&#xA;            var promiseDelete = CRUD_AngularJs_RESTService.delete(Student.StudentID);&#xD;&#xA;            promiseDelete.then(function (pl) {&#xD;&#xA;                $scope.Message = """"Student Deleted Successfuly"""";&#xD;&#xA;                GetAllRecords();&#xD;&#xA;                ClearModels();&#xD;&#xA;            }, function (err) {&#xD;&#xA;                console.log(""""Some Error Occured."""" + err);&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    });&#xD;&#xA;    app.service(""""CRUD_AngularJs_RESTService"""", function ($http) {&#xD;&#xA;        //Create new record  &#xD;&#xA;        this.post = function (Student) {&#xD;&#xA;            var request = $http({&#xD;&#xA;                method: """"post"""",&#xD;&#xA;                url: """"http://localhost:50028/StudentService.svc/AddNewStudent"""",&#xD;&#xA;                data: Student&#xD;&#xA;            });&#xD;&#xA;            return request;&#xD;&#xA;        }&#xD;&#xA;        //Update the Record  &#xD;&#xA;        this.put = function (StudentID, Student) {&#xD;&#xA;            debugger;&#xD;&#xA;            var request = $http({&#xD;&#xA;                method: """"put"""",&#xD;&#xA;                url: """"http://localhost:50028/StudentService.svc/UpdateStudent"""",&#xD;&#xA;                data: Student&#xD;&#xA;            });&#xD;&#xA;            return request;&#xD;&#xA;        }&#xD;&#xA;        this.getAllStudent = function () {&#xD;&#xA;            return $http.get(""""http://localhost:50028/StudentService.svc/GetAllStudent"""");&#xD;&#xA;        };&#xD;&#xA;        //Get Single Records  &#xD;&#xA;        this.get = function (StudentID) {&#xD;&#xA;            return $http.get(""""http://localhost:50028/StudentService.svc/GetStudentDetails/"""" + StudentID);&#xD;&#xA;        }&#xD;&#xA;        //Delete the Record  &#xD;&#xA;        this.delete = function (StudentID) {&#xD;&#xA;            var request = $http({&#xD;&#xA;                method: """"delete"""",&#xD;&#xA;                url: """"http://localhost:50028/StudentService.svc/DeleteStudent/"""" + StudentID&#xD;&#xA;            });&#xD;&#xA;            return request;&#xD;&#xA;        }&#xD;&#xA;    });"
"C","7921901837371850863",2,2,"17842499;29593556","17842544;29593556","116908;2059300","2013-07-24 18:54:56;2015-04-12 19:16:06","5;1",31,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,"    #include <stdio.h>&#xD;&#xA;    #include <sys/mman.h>&#xD;&#xA;    #include <sys/stat.h>&#xD;&#xA;    #include <stdlib.h>&#xD;&#xA;    &#xD;&#xA;    int main(void)&#xD;&#xA;    {&#xD;&#xA;        FILE *file = fopen(""""text.txt"""", """"r"""");&#xD;&#xA;        unsigned char *buf;&#xD;&#xA;        int length = 0;&#xD;&#xA;        struct stat st;&#xD;&#xA;        int v;&#xD;&#xA;    &#xD;&#xA;        // get file size and allocate. We're going to convert to bytes &#xD;&#xA;        // from text, so this allocation will be safely large enough&#xD;&#xA;        fstat(fileno(file), &st);&#xD;&#xA;        buf = valloc(st.st_size);&#xD;&#xA;        while (fscanf(file, """"\\x%02x"""", &v) == 1)&#xD;&#xA;        {&#xD;&#xA;            buf[length++] = v;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        fclose(file);&#xD;&#xA;    &#xD;&#xA;        mprotect(buf, length, PROT_EXEC);&#xD;&#xA;    &#xD;&#xA;        int (*ret)() = (int (*)())buf;&#xD;&#xA;        ret();&#xD;&#xA;    &#xD;&#xA;        return 0;&#xD;&#xA;    }"
"Ruby","-1493628655251723135",5,5,"28532350;40336623;45390842;44826277;38034023","28532350;40336623;45390842;44826277;38034023","4451440;5283289;7385348;6454355;6513689","2015-02-15 23:11:25;2016-10-31 04:33:39;2017-07-29 15:16:41;2017-06-29 13:18:51;2016-06-26 00:03:14","1;0;0;0;0",29,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,"    <header class=""""navbar navbar-fixed-top navbar-inverse"""">&#xD;&#xA;      <div class=""""container"""">&#xD;&#xA;        <%= link_to """"sample app"""", root_path, id: """"logo"""" %>&#xD;&#xA;        <nav>&#xD;&#xA;          <ul class=""""nav navbar-nav navbar-right"""">&#xD;&#xA;            <li><%= link_to """"Home"""", root_path %></li>&#xD;&#xA;            <li><%= link_to """"Help"""", help_path %></li>&#xD;&#xA;            <% if logged_in? %>&#xD;&#xA;              <li><%= link_to """"Users"""", '#' %></li>&#xD;&#xA;              <li class=""""dropdown"""">&#xD;&#xA;                <a href=""""#"""" class=""""dropdown-toggle"""" data-toggle=""""dropdown"""">&#xD;&#xA;                  Account <b class=""""caret""""></b>&#xD;&#xA;                </a>&#xD;&#xA;                <ul class=""""dropdown-menu"""">&#xD;&#xA;                  <li><%= link_to """"Profile"""", current_user %></li>&#xD;&#xA;                  <li><%= link_to """"Settings"""", '#' %></li>&#xD;&#xA;                  <li class=""""divider""""></li>&#xD;&#xA;                  <li>&#xD;&#xA;                    <%= link_to """"Log out"""", logout_path, method: """"delete"""" %>&#xD;&#xA;                  </li>&#xD;&#xA;                </ul>&#xD;&#xA;              </li>&#xD;&#xA;            <% else %>&#xD;&#xA;              <li><%= link_to """"Log in"""", login_path %></li>&#xD;&#xA;            <% end %>&#xD;&#xA;          </ul>&#xD;&#xA;        </nav>&#xD;&#xA;      </div>&#xD;&#xA;    </header>"
"Ruby","-3813634657971939393",2,2,"51443525;51449637","51443525;51449637","10106814;10106814","2018-07-20 13:22:45;2018-07-20 20:05:09","2;0",36,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,"    #!ruby.exe&#xD;&#xA;    require 'csv'&#xD;&#xA;    puts """"Please enter a file name:"""" #user input file name (must be in same &#xD;&#xA;    folder as this file)&#xD;&#xA;    file = gets.chomp&#xD;&#xA;    begin&#xD;&#xA;      File.open(file, 'r')&#xD;&#xA;    rescue&#xD;&#xA;      print """"Failed to open #{file}\n""""&#xD;&#xA;      exit&#xD;&#xA;    end #makes sure that the file exists, if it does not it posts an error&#xD;&#xA;    data_file = File.new(file)&#xD;&#xA;    data = [] #initializes array for addresses from .csv&#xD;&#xA;    counter=0 #set counter up to allow for different sized files to be used &#xD;&#xA;    without issue&#xD;&#xA;    CSV.foreach(data_file, headers: true) do |row|&#xD;&#xA;      data << row.to_hash&#xD;&#xA;      counter+=1&#xD;&#xA;    end #goes through .csv one line ar a time&#xD;&#xA;    data.reject(&:empty?)&#xD;&#xA;    puts """"Which column do you want to parse?""""&#xD;&#xA;    column = gets.chomp&#xD;&#xA;    i=0&#xD;&#xA;    streets = []&#xD;&#xA;    while (i<counter)&#xD;&#xA;      address = data[i][column]&#xD;&#xA;      street_name = address.gsub(/^((\d[a-zA-Z])|[^a-zA-Z])*/, '')&#xD;&#xA;      streets.push(street_name)&#xD;&#xA;      i+=1&#xD;&#xA;    end&#xD;&#xA;    streets.reject(&:empty?)&#xD;&#xA;    puts """"What do you want the output to be called?""""&#xD;&#xA;    new_file = gets.chomp&#xD;&#xA;    CSV.open(new_file, """"w"""", :write_headers=> true, :headers => [column]) do |hdr|&#xD;&#xA;      hdr << streets&#xD;&#xA;    end "
"Ruby","-69606117101914067",2,2,"29500037;29513991","29500037;29513991","3783721;3783721","2015-04-07 19:48:04;2015-04-08 11:59:03","0;-1",95,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,"      #routes.rb&#xD;&#xA;      resources :posts  do&#xD;&#xA;        resources :comments&#xD;&#xA;      end&#xD;&#xA;      #post.rb&#xD;&#xA;      has_many :comments&#xD;&#xA;      #comment.rb&#xD;&#xA;      belongs_to :post&#xD;&#xA;      #comments_controller.rb&#xD;&#xA;      before_action :set_post&#xD;&#xA;       &#xD;&#xA;      def create&#xD;&#xA;        @comment = @post.comments.create(comment_params)&#xD;&#xA;        redirect_to @post&#xD;&#xA;      end&#xD;&#xA;      &#xD;&#xA;      def destroy&#xD;&#xA;        @comment = @post.comments.find(params[:id])&#xD;&#xA;        if @comment.destroy&#xD;&#xA;          flash[:success] = """"Comment was deleted.""""&#xD;&#xA;        else&#xD;&#xA;          flash[:error] = """"Comment could not be deleted.""""&#xD;&#xA;        end&#xD;&#xA;        redirect_to @post&#xD;&#xA;      end&#xD;&#xA;      &#xD;&#xA;      private&#xD;&#xA;      &#xD;&#xA;      def set_post&#xD;&#xA;        @post = Post.find(params[:post_id])&#xD;&#xA;      end&#xD;&#xA;      &#xD;&#xA;      def comment_params&#xD;&#xA;        params[:comment].permit(:content)&#xD;&#xA;      end&#xD;&#xA;___&#xD;&#xA;    #posts_controller.rb&#xD;&#xA;    before_action :set_post, only: [:show, :edit, :update, :destroy]&#xD;&#xA;    &#xD;&#xA;      def index&#xD;&#xA;        @posts = Post.all&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def show&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def new&#xD;&#xA;        @post = Post.new&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def edit&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def create&#xD;&#xA;        @post = Post.new(post_params)&#xD;&#xA;    &#xD;&#xA;        respond_to do |format|&#xD;&#xA;          if @post.save&#xD;&#xA;            format.html { redirect_to @post, notice: 'Post was successfully created.' }&#xD;&#xA;            format.json { render :show, status: :created, location: @post }&#xD;&#xA;          else&#xD;&#xA;            format.html { render :new }&#xD;&#xA;            format.json { render json: @post.errors, status: :unprocessable_entity }&#xD;&#xA;          end&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def update&#xD;&#xA;        respond_to do |format|&#xD;&#xA;          if @post.update(post_params)&#xD;&#xA;            format.html { redirect_to @post, notice: 'Post was successfully updated.' }&#xD;&#xA;            format.json { render :show, status: :ok, location: @post }&#xD;&#xA;          else&#xD;&#xA;            format.html { render :edit }&#xD;&#xA;            format.json { render json: @post.errors, status: :unprocessable_entity }&#xD;&#xA;          end&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def destroy&#xD;&#xA;        @post.destroy&#xD;&#xA;        respond_to do |format|&#xD;&#xA;          format.html { redirect_to posts_url, notice: 'Post was successfully destroyed.' }&#xD;&#xA;          format.json { head :no_content }&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      private&#xD;&#xA;        def set_post&#xD;&#xA;          @post = Post.find(params[:id])&#xD;&#xA;        end&#xD;&#xA;    &#xD;&#xA;        def post_params&#xD;&#xA;          params.require(:post).permit(:content)&#xD;&#xA;        end"
"Ruby","7508859375193965055",2,2,"38098114;38149619","38098114;38149619","6117695;6117695","2016-06-29 11:22:11;2016-07-01 15:58:09","0;0",40,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,"    class OrderItemsController < ApplicationController&#xD;&#xA;     def create&#xD;&#xA;      @order = current_order&#xD;&#xA;      @order_item = @order.order_items.new(order_item_params)&#xD;&#xA;      @order.user_id = current_user.id&#xD;&#xA;      @order.save&#xD;&#xA;      session[:order_id] = @order.id&#xD;&#xA;      &#xD;&#xA;    &#xD;&#xA;      respond_to do |format|&#xD;&#xA;        format.js { flash[:notice] = """"ORDER HAS BEEN CREATED."""" } &#xD;&#xA;      end&#xD;&#xA;    end&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;      def update&#xD;&#xA;        @order = current_order&#xD;&#xA;        @order_item = @order.order_items.find(params[:id])&#xD;&#xA;        @order_item.update_attributes(order_item_params)&#xD;&#xA;        @order_items = @order.order_items&#xD;&#xA;      end&#xD;&#xA;      &#xD;&#xA;       &#xD;&#xA;    &#xD;&#xA;      def destroy&#xD;&#xA;        @order = current_order&#xD;&#xA;        @order_item = @order.order_items.find(params[:id])&#xD;&#xA;        @order_item.destroy&#xD;&#xA;        @order_items = @order.order_items&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    private&#xD;&#xA;    &#xD;&#xA;      def order_item_params&#xD;&#xA;        params.require(:order_item).permit(:quantity, :product_id, :user_id)&#xD;&#xA;    &#xD;&#xA;     end&#xD;&#xA;    end"
"Ruby","-9191507273726605703",2,2,"5365571;5363662","5365571;5363662","421109;421109","2011-03-19 23:15:44;2011-03-19 17:36:06","0;1",32,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,"    def create       &#xD;&#xA;      @video = Video.find(params[:video_id])&#xD;&#xA;      @vote = current_user.video_votes.find_or_create_by_video_id(@video.id)&#xD;&#xA;      &#xD;&#xA;      if @vote.value.nil?&#xD;&#xA;        if params[:type] == """"up""""&#xD;&#xA;          @vote.value = 1&#xD;&#xA;        else&#xD;&#xA;          @vote.value = -1&#xD;&#xA;        end&#xD;&#xA;      elsif (params[:type] == """"up"""" && @vote.value == 1) || (params[:type] == """"down"""" && @vote.value == -1)&#xD;&#xA;        @vote.value = 0&#xD;&#xA;      elsif ((params[:type] == """"up"""" && @vote.value == -1) || (params[:type] == """"down"""" && @vote.value == 1)) || (@vote.value == 0)&#xD;&#xA;        if params[:type] == """"up""""&#xD;&#xA;          @vote.value = 1&#xD;&#xA;        else&#xD;&#xA;          @vote.value = -1&#xD;&#xA;        end&#xD;&#xA;      end  &#xD;&#xA;     &#xD;&#xA;      if @vote.save&#xD;&#xA;        respond_to do |format|&#xD;&#xA;          format.html { redirect_to @video }&#xD;&#xA;          format.js&#xD;&#xA;        end&#xD;&#xA;      else&#xD;&#xA;        respond_to do |format|&#xD;&#xA;          format.html { redirect_to @video }&#xD;&#xA;          format.js {render 'fail_create.js.erb'}&#xD;&#xA;        end&#xD;&#xA;      end   &#xD;&#xA;    end"
"VBA","-250318651462651940",2,2,"50396926;42218948","50396926;42218948","9494250;6777535","2018-05-17 17:03:33;2017-02-14 06:01:38","1;0",38,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,"    Sub SplitWorkbook()&#xD;&#xA;    Dim FileExtStr As String&#xD;&#xA;    Dim FileFormatNum As Long&#xD;&#xA;    Dim xWs As Worksheet&#xD;&#xA;    Dim xWb As Workbook&#xD;&#xA;    Dim FolderName As String&#xD;&#xA;    Application.ScreenUpdating = False&#xD;&#xA;    Set xWb = Application.ThisWorkbook&#xD;&#xA;    DateString = Format(Now, """"yyyy-mm-dd hh-mm-ss"""")&#xD;&#xA;    FolderName = xWb.Path & """"\"""" & xWb.Name & """" """" & DateString&#xD;&#xA;    MkDir FolderName&#xD;&#xA;    For Each xWs In xWb.Worksheets&#xD;&#xA;        xWs.Copy&#xD;&#xA;        If Val(Application.Version) < 12 Then&#xD;&#xA;            FileExtStr = """".xls"""": FileFormatNum = -4143&#xD;&#xA;        Else&#xD;&#xA;            Select Case xWb.FileFormat&#xD;&#xA;                Case 51:&#xD;&#xA;                    FileExtStr = """".xlsx"""": FileFormatNum = 51&#xD;&#xA;                Case 52:&#xD;&#xA;                    If Application.ActiveWorkbook.HasVBProject Then&#xD;&#xA;                        FileExtStr = """".xlsm"""": FileFormatNum = 52&#xD;&#xA;                    Else&#xD;&#xA;                        FileExtStr = """".xlsx"""": FileFormatNum = 51&#xD;&#xA;                    End If&#xD;&#xA;                Case 56:&#xD;&#xA;                    FileExtStr = """".xls"""": FileFormatNum = 56&#xD;&#xA;                Case Else:&#xD;&#xA;                    FileExtStr = """".xlsb"""": FileFormatNum = 50&#xD;&#xA;            End Select&#xD;&#xA;        End If&#xD;&#xA;        xFile = FolderName & """"\"""" & Application.ActiveWorkbook.Sheets(1).Name & FileExtStr&#xD;&#xA;        Application.ActiveWorkbook.SaveAs xFile, FileFormat:=FileFormatNum&#xD;&#xA;        Application.ActiveWorkbook.Close False&#xD;&#xA;    Next&#xD;&#xA;    MsgBox """"You can find the files in """" & FolderName&#xD;&#xA;    Application.ScreenUpdating = True&#xD;&#xA;    End Sub"
"VBA","3997805364612436496",2,2,"40737463;40755678","40737463;40755678","7193388;7193388","2016-11-22 08:54:54;2016-11-23 03:47:36","0;0",36,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,"    Sub F110Loop()&#xD;&#xA;    &#xD;&#xA;    Dim x As Integer 'current amount&#xD;&#xA;    Dim y As Integer&#xD;&#xA;    Dim d As Double 'delta between Disbursement date and Cheque Release date&#xD;&#xA;    Dim Current As Integer&#xD;&#xA;    Dim Least As Integer&#xD;&#xA;    Dim Dis As Worksheet&#xD;&#xA;    Dim Cheque As Worksheet&#xD;&#xA;    Dim wb As Workbook&#xD;&#xA;    &#xD;&#xA;    Set wb = ThisWorkbook&#xD;&#xA;    Set Dis = wb.Sheets(""""Disbursements"""")&#xD;&#xA;    Set Cheque = wb.Sheets(""""Cheque Info"""")&#xD;&#xA;    wb.Activate&#xD;&#xA;    &#xD;&#xA;    For x = 4 To 600&#xD;&#xA;        Do While Dis.Cells(x, 9).Value > 1&#xD;&#xA;            'IF same amount, get row number to get corresponding date, reference that date&#xD;&#xA;            For y = 3 To 600&#xD;&#xA;                If Dis.Cells(x, 6).Value = Cheque.Cells(y, 5).Value Then&#xD;&#xA;                    'THEN get delta&#xD;&#xA;                    Current = Dis.Cells(x, 4).Value -Cheque.Cells(y, 2)&#xD;&#xA;                    'IF current is less than the least delta&#xD;&#xA;                ElseIf Current < Least Then&#xD;&#xA;                    'THEN update new value of delta&#xD;&#xA;                    Current = Least&#xD;&#xA;                Else&#xD;&#xA;                    'copy paste the date (from the least delta row)&#xD;&#xA;                    Cheque.Cells(y, 2).Copy Destination:=Dis.Cells(x, 8)&#xD;&#xA;                End If&#xD;&#xA;            Next y&#xD;&#xA;        Loop&#xD;&#xA;    Next x&#xD;&#xA;    &#xD;&#xA;    End Sub"
"VBA","6987571730304325748",2,2,"21809231;19931591","21809231;21802531","2983572;2983572","2014-02-16 09:03:38;2014-02-15 19:31:54","0;0",52,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,"    Public Function Unique(ByRef rngToCheck As range) As Variant&#xD;&#xA;     &#xD;&#xA;        Dim colDistinct As Collection&#xD;&#xA;        Dim varValues As Variant, varValue As Variant&#xD;&#xA;        Dim lngCount As Long, lngRow As Long, lngCol As Long&#xD;&#xA;     &#xD;&#xA;        On Error GoTo ErrorHandler&#xD;&#xA;     &#xD;&#xA;        varValues = rngToCheck.Value&#xD;&#xA;     &#xD;&#xA;        'if rngToCheck is more than 1 cell then&#xD;&#xA;       'varValues will be a 2 dimensional array&#xD;&#xA;       If IsArray(varValues) Then&#xD;&#xA;     &#xD;&#xA;            Set colDistinct = New Collection&#xD;&#xA;     &#xD;&#xA;            For lngRow = LBound(varValues, 1) To UBound(varValues, 1)&#xD;&#xA;                For lngCol = LBound(varValues, 2) To UBound(varValues, 2)&#xD;&#xA;     &#xD;&#xA;                    varValue = varValues(lngRow, lngCol)&#xD;&#xA;     &#xD;&#xA;                    'ignore blank cells and throw error&#xD;&#xA;                   'if cell contains an error value&#xD;&#xA;                   If LenB(varValue) > 0 Then&#xD;&#xA;     &#xD;&#xA;                        'if the item already exists then an error will&#xD;&#xA;                       'be thrown which we want to ignore&#xD;&#xA;                       On Error Resume Next&#xD;&#xA;                        colDistinct.Add vbNullString, CStr(varValue)&#xD;&#xA;                        On Error GoTo ErrorHandler&#xD;&#xA;     &#xD;&#xA;                    End If&#xD;&#xA;     &#xD;&#xA;                Next lngCol&#xD;&#xA;            Next lngRow&#xD;&#xA;     &#xD;&#xA;            lngCount = colDistinct.Count&#xD;&#xA;        Else&#xD;&#xA;            If LenB(varValues) > 0 Then&#xD;&#xA;                lngCount = 1&#xD;&#xA;            End If&#xD;&#xA;     &#xD;&#xA;        End If&#xD;&#xA;     &#xD;&#xA;        Unique = lngCount&#xD;&#xA;     &#xD;&#xA;        Exit Function&#xD;&#xA;     &#xD;&#xA;    ErrorHandler:&#xD;&#xA;        Unique = CVErr(xlErrValue)&#xD;&#xA;     &#xD;&#xA;    End Function"
"VBA","3836917373720717746",8,8,"11981410;11649064;27434135;37334365;32970393;48757857;34206015;1026483","17569116;24946924;27434135;37334365;32970393;48757857;34206015;33826094","2246810;3056160;1278553;6237157;4228962;4025169;5603816;2717068","2013-07-10 11:09:22;2014-07-25 02:01:58;2014-12-11 23:09:24;2016-05-19 21:32:00;2015-10-06 12:48:25;2018-02-13 00:45:37;2015-12-10 15:42:00;2015-11-20 11:52:39","0;2;0;2;7;0;1;2",23,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,"    Sub PasswordBreaker()&#xD;&#xA;        'Breaks worksheet password protection.&#xD;&#xA;        Dim i As Integer, j As Integer, k As Integer&#xD;&#xA;        Dim l As Integer, m As Integer, n As Integer&#xD;&#xA;        Dim i1 As Integer, i2 As Integer, i3 As Integer&#xD;&#xA;        Dim i4 As Integer, i5 As Integer, i6 As Integer&#xD;&#xA;        On Error Resume Next&#xD;&#xA;        For i = 65 To 66: For j = 65 To 66: For k = 65 To 66&#xD;&#xA;        For l = 65 To 66: For m = 65 To 66: For i1 = 65 To 66&#xD;&#xA;        For i2 = 65 To 66: For i3 = 65 To 66: For i4 = 65 To 66&#xD;&#xA;        For i5 = 65 To 66: For i6 = 65 To 66: For n = 32 To 126&#xD;&#xA;        ActiveSheet.Unprotect Chr(i) & Chr(j) & Chr(k) & _&#xD;&#xA;            Chr(l) & Chr(m) & Chr(i1) & Chr(i2) & Chr(i3) & _&#xD;&#xA;            Chr(i4) & Chr(i5) & Chr(i6) & Chr(n)&#xD;&#xA;        If ActiveSheet.ProtectContents = False Then&#xD;&#xA;            MsgBox """"One usable password is """" & Chr(i) & Chr(j) & _&#xD;&#xA;                Chr(k) & Chr(l) & Chr(m) & Chr(i1) & Chr(i2) & _&#xD;&#xA;                Chr(i3) & Chr(i4) & Chr(i5) & Chr(i6) & Chr(n)&#xD;&#xA;             Exit Sub&#xD;&#xA;        End If&#xD;&#xA;        Next: Next: Next: Next: Next: Next&#xD;&#xA;        Next: Next: Next: Next: Next: Next&#xD;&#xA;    End Sub"
"VBA","8714002537621301301",2,2,"42547938;42777313","42695426;42777313","4849935;4849935","2017-03-09 12:28:18;2017-03-14 03:33:01","0;1",50,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,"    Sub Collect()&#xD;&#xA;        Dim myInSht As Worksheet&#xD;&#xA;        Dim myOutSht As Worksheet&#xD;&#xA;        Dim aRow As Range&#xD;&#xA;        Dim aCol As Range&#xD;&#xA;        Dim myInCol As Range&#xD;&#xA;        Dim myOutCol As Range&#xD;&#xA;        Dim calcState As Long&#xD;&#xA;        Dim scrUpdateState As Long&#xD;&#xA;        Dim cell As Range&#xD;&#xA;        Dim iLoop As Long, jLoop As Long&#xD;&#xA;    &#xD;&#xA;        jLoop = 2&#xD;&#xA;    &#xD;&#xA;    ' loop through the worksheets&#xD;&#xA;        For Each myInSht In ActiveWorkbook.Worksheets&#xD;&#xA;    ' pick only the worksheets of interest&#xD;&#xA;            'If myInSht.Name = """"a"""" Or myInSht.Name = """"aa"""" Or myInSht.Name = """"aaa"""" Then&#xD;&#xA;            ' find the columns of interest in the worksheet&#xD;&#xA;                For Each aCol In myInSht.UsedRange.Columns&#xD;&#xA;                    Set myOutCol = Nothing&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"timestamp"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""B2:B1000"""")&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"ip"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""C2:C1000"""")&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"protocol"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""D2:D1000"""")&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"port"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""E2:E1000"""")&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"hostname"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""F2:F1000"""")&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"tag"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""G2:G1000"""")&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"asn"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""I2:I1000"""")&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"geo"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""J2:J1000"""")&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"region"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""K2:K1000"""")&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"naics"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""L2:L1000"""")&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"sic"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""M2:M1000"""")&#xD;&#xA;                    If aCol.Cells(1, 1).Value = """"server_name"""" Then Set myOutCol = Sheets(""""Summary"""").Range(""""H2:H1000"""")&#xD;&#xA;    &#xD;&#xA;                    If Not myOutCol Is Nothing Then&#xD;&#xA;    ' don't move the top line, it contains the headers - no data&#xD;&#xA;                        Set myInCol = aCol&#xD;&#xA;                        Set myInCol = myInCol.Offset(1, 0).Resize(myInCol.Rows.Count, myInCol.Columns.Count)&#xD;&#xA;    ' transfer data from the project tab to the consolidated tab&#xD;&#xA;                        iLoop = jLoop&#xD;&#xA;                        For Each aRow In myInCol.Rows&#xD;&#xA;                            myOutCol.Cells(iLoop, 1).Value = aRow.Cells(1, 1).Value&#xD;&#xA;                            iLoop = iLoop + 1&#xD;&#xA;                        Next aRow&#xD;&#xA;                    End If&#xD;&#xA;                Next aCol&#xD;&#xA;                'End If&#xD;&#xA;            If iLoop > jLoop Then jLoop = iLoop&#xD;&#xA;        Next myInSht&#xD;&#xA;        End Sub"
"R","7917745996584196910",2,2,"33447901;33553212","33447901;33553212","4272937;4272937","2015-10-31 03:58:37;2015-11-05 19:31:59","3;2",124,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,"    df <- structure(list(date = structure(c(-3653, -3622, -3593, -3562, &#xD;&#xA;    -3532, -3501, -3471, -3440, -3409, -3379, -3348, -3318, -3287, &#xD;&#xA;    -3256, -3228, -3197, -3167, -3136, -3106, -3075, -3044, -3014, &#xD;&#xA;    -2983, -2953, -2922, -2891, -2863, -2832, -2802, -2771, -2741, &#xD;&#xA;    -2710, -2679, -2649, -2618, -2588, -2557, -2526, -2498, -2467, &#xD;&#xA;    -2437, -2406, -2376, -2345, -2314, -2284, -2253, -2223, -2192, &#xD;&#xA;    -2161, -2132, -2101, -2071, -2040, -2010, -1979, -1948, -1918, &#xD;&#xA;    -1887, -1857, -1826, -1795, -1767, -1736, -1706, -1675, -1645, &#xD;&#xA;    -1614, -1583, -1553, -1522, -1492, -1461, -1430, -1402, -1371, &#xD;&#xA;    -1341, -1310, -1280, -1249, -1218, -1188, -1157, -1127, -1096, &#xD;&#xA;    -1065, -1037, -1006, -976, -945, -915, -884, -853, -823, -792, &#xD;&#xA;    -762, -731, -700, -671, -640, -610, -579, -549, -518, -487, -457, &#xD;&#xA;    -426, -396, -365, -334, -306, -275, -245, -214, -184, -153, -122, &#xD;&#xA;    -92, -61, -31, 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, &#xD;&#xA;    334, 365, 396, 424, 455, 485, 516, 546, 577, 608, 638, 669, 699, &#xD;&#xA;    730, 761, 790, 821, 851, 882, 912, 943, 974, 1004, 1035, 1065, &#xD;&#xA;    1096, 1127, 1155, 1186, 1216, 1247, 1277, 1308, 1339, 1369, 1400, &#xD;&#xA;    1430, 1461, 1492, 1520, 1551, 1581, 1612, 1642, 1673, 1704, 1734, &#xD;&#xA;    1765, 1795, 1826, 1857, 1885, 1916, 1946, 1977, 2007, 2038, 2069, &#xD;&#xA;    2099, 2130, 2160, 2191, 2222, 2251, 2282, 2312, 2343, 2373, 2404, &#xD;&#xA;    2435, 2465, 2496, 2526, 2557, 2588, 2616, 2647, 2677, 2708, 2738, &#xD;&#xA;    2769, 2800, 2830, 2861, 2891, 2922, 2953, 2981, 3012, 3042, 3073, &#xD;&#xA;    3103, 3134, 3165, 3195, 3226, 3256, 3287, 3318, 3346, 3377, 3407, &#xD;&#xA;    3438, 3468, 3499, 3530, 3560, 3591, 3621, 3652, 3683, 3712, 3743, &#xD;&#xA;    3773, 3804, 3834, 3865, 3896, 3926, 3957, 3987, 4018, 4049, 4077, &#xD;&#xA;    4108, 4138, 4169, 4199, 4230, 4261, 4291, 4322, 4352, 4383, 4414, &#xD;&#xA;    4442, 4473, 4503, 4534, 4564, 4595, 4626, 4656, 4687, 4717, 4748, &#xD;&#xA;    4779, 4807, 4838, 4868, 4899, 4929, 4960, 4991, 5021, 5052, 5082, &#xD;&#xA;    5113, 5144, 5173, 5204, 5234, 5265, 5295, 5326, 5357, 5387, 5418, &#xD;&#xA;    5448, 5479, 5510, 5538, 5569, 5599, 5630, 5660, 5691, 5722, 5752, &#xD;&#xA;    5783, 5813, 5844, 5875, 5903, 5934, 5964, 5995, 6025, 6056, 6087, &#xD;&#xA;    6117, 6148, 6178, 6209, 6240, 6268, 6299, 6329, 6360, 6390, 6421, &#xD;&#xA;    6452, 6482, 6513, 6543, 6574, 6605, 6634, 6665, 6695, 6726, 6756, &#xD;&#xA;    6787, 6818, 6848, 6879, 6909, 6940, 6971, 6999, 7030, 7060, 7091, &#xD;&#xA;    7121, 7152, 7183, 7213, 7244, 7274), class = """"Date""""), temp = c(22.9223529411765, &#xD;&#xA;    23.0705882352941, 23.1094117647059, 20.7835294117647, 17.4517647058824, &#xD;&#xA;    17.3176470588235, 18.0494117647059, 19.6188235294118, 21.3023529411765, &#xD;&#xA;    23.1105882352941, 22.2364705882353, 22.7482352941176, 23.5870588235294, &#xD;&#xA;    24.0023529411765, 23.0094117647059, 22.0176470588235, 19.4917647058824, &#xD;&#xA;    18.1011764705882, 18.3164705882353, 20.0623529411765, 22.8717647058824, &#xD;&#xA;    23.2576470588235, 23.68, 22.3694117647059, 22.9517647058824, &#xD;&#xA;    23.6976470588235, 23.3294117647059, 20.8564705882353, 18.16, &#xD;&#xA;    15.8988235294118, 15.7988235294118, 18.4176470588235, 20.8423529411765, &#xD;&#xA;    20.3247058823529, 22.3070588235294, 22.2035294117647, 24.2235294117647, &#xD;&#xA;    23.6976470588235, 24.4082352941176, 21.1752941176471, 18.1023529411765, &#xD;&#xA;    16.1211764705882, 18.3164705882353, 19.7635294117647, 23.1294117647059, &#xD;&#xA;    22.9964705882353, 23.6552941176471, 22.6964705882353, 23.6011764705882, &#xD;&#xA;    23.6517647058824, 23.7035294117647, 22.4352941176471, 18.5835294117647, &#xD;&#xA;    16.5976470588235, 15.7741176470588, 19.2541176470588, 20.8776470588235, &#xD;&#xA;    20.5729411764706, 21.1729411764706, 21.5870588235294, 22.4576470588235, &#xD;&#xA;    23.6058823529412, 21.84, 21.6694117647059, 19.2458823529412, &#xD;&#xA;    18.7517647058824, 17.7811764705882, 19.4764705882353, 21.9270588235294, &#xD;&#xA;    21.5470588235294, 22.88, 23.2458823529412, 24.2776470588235, &#xD;&#xA;    25.2470588235294, 23.4694117647059, 21.4435294117647, 19.3941176470588, &#xD;&#xA;    18.5447058823529, 17.6, 18.3764705882353, 19.8529411764706, 22.0823529411765, &#xD;&#xA;    22.7294117647059, 23.4011764705882, 23.3611764705882, 24.2505882352941, &#xD;&#xA;    23.2870588235294, 21.9482352941176, 20.5552941176471, 18.0788235294118, &#xD;&#xA;    18.5929411764706, 20.8752941176471, 21.9023529411765, 23.6105882352941, &#xD;&#xA;    22.4070588235294, 21.5635294117647, 23.3129411764706, 22.9741176470588, &#xD;&#xA;    23.3670588235294, 19.6105882352941, 16.9941176470588, 17.7670588235294, &#xD;&#xA;    17.4858823529412, 17.8517647058824, 20.26, 22.1576470588235, &#xD;&#xA;    23.8364705882353, 23.4447058823529, 24.8129411764706, 25.1764705882353, &#xD;&#xA;    24.2694117647059, 21.5035294117647, 20.0458823529412, 18.4694117647059, &#xD;&#xA;    18.4541176470588, 19.5388235294118, 22.02, 20.5364705882353, &#xD;&#xA;    22.9858823529412, 21.9752941176471, 23.7729411764706, 24.0576470588235, &#xD;&#xA;    24.0941176470588, 22.1552941176471, 21.2329411764706, 19.5611764705882, &#xD;&#xA;    17.8788235294118, 18.6823529411765, 20.1541176470588, 21.6258823529412, &#xD;&#xA;    21.5211764705882, 23.9811764705882, 24.8352941176471, 24.5882352941176, &#xD;&#xA;    24.1729411764706, 21.1035294117647, 19.0435294117647, 17.08, &#xD;&#xA;    17.4529411764706, 19.1458823529412, 20.4447058823529, 20.7129411764706, &#xD;&#xA;    21.5047058823529, 22.6952941176471, 23.4364705882353, 23.1, 24.1847058823529, &#xD;&#xA;    19.8105882352941, 19.9847058823529, 20.5188235294118, 17.7658823529412, &#xD;&#xA;    19.4435294117647, 20.7588235294118, 21.7835294117647, 22.7788235294118, &#xD;&#xA;    23.2388235294118, 24.9129411764706, 25.6, 23.5647058823529, 24.0058823529412, &#xD;&#xA;    19.7823529411765, 19.3152941176471, 18.7741176470588, 19.0305882352941, &#xD;&#xA;    20.5576470588235, 21.3611764705882, 21.4247058823529, 23.4811764705882, &#xD;&#xA;    23.6505882352941, 25.1870588235294, 23.3541176470588, 21.4823529411765, &#xD;&#xA;    18.7364705882353, 17.7235294117647, 18.3976470588235, 19.7235294117647, &#xD;&#xA;    21.0741176470588, 21.6094117647059, 22.9635294117647, 22.4011764705882, &#xD;&#xA;    23.4152941176471, 24.7741176470588, 24.3270588235294, 20.7976470588235, &#xD;&#xA;    18.8764705882353, 17.7788235294118, 16.4129411764706, 21.4117647058824, &#xD;&#xA;    22.3317647058824, 21.66, 22.3694117647059, 23.0917647058824, &#xD;&#xA;    24.4541176470588, 23.2847058823529, 23.3164705882353, 21.2529411764706, &#xD;&#xA;    19.1258823529412, 17.3882352941176, 17.3823529411765, 19.0529411764706, &#xD;&#xA;    19.6576470588235, 20.2976470588235, 21.9023529411765, 23.3094117647059, &#xD;&#xA;    24.0117647058824, 25.5611764705882, 24.9129411764706, 21.3964705882353, &#xD;&#xA;    19.9870588235294, 18.3929411764706, 20.9917647058824, 20.3058823529412, &#xD;&#xA;    21.4435294117647, 23.1941176470588, 22.8388235294118, 22.5176470588235, &#xD;&#xA;    24.6317647058824, 24.6541176470588, 24.2, 20.84, 18.4576470588235, &#xD;&#xA;    17.5011764705882, 19.16, 20.54, 20.1517647058824, 22.6776470588235, &#xD;&#xA;    22.7470588235294, 22.7882352941176, 22.0811764705882, 24.2152941176471, &#xD;&#xA;    22.9235294117647, 20.8411764705882, 19.6188235294118, 17.16, &#xD;&#xA;    16.0529411764706, 20.3223529411765, 19.9752941176471, 22.5152941176471, &#xD;&#xA;    22.2705882352941, 23.1541176470588, 23.1047058823529, 23.9517647058824, &#xD;&#xA;    24.8176470588235, 22.18, 20.5023529411765, 17.3505882352941, &#xD;&#xA;    19.1917647058824, 19.9894117647059, 19.0235294117647, 22.8235294117647, &#xD;&#xA;    22.7094117647059, 23.8741176470588, 24.0517647058824, 25.1764705882353, &#xD;&#xA;    23.9235294117647, 21.2929411764706, 20.6117647058824, 17.1305882352941, &#xD;&#xA;    16.3470588235294, 19.6470588235294, 21.3341176470588, 20.2176470588235, &#xD;&#xA;    23.7435294117647, 22.6741176470588, 22.9070588235294, 24.7152941176471, &#xD;&#xA;    23.2905882352941, 20.5776470588235, 18.9635294117647, 19.0658823529412, &#xD;&#xA;    18.8423529411765, 20.0729411764706, 21.3047058823529, 22.1588235294118, &#xD;&#xA;    24.0388235294118, 22.1917647058824, 24.0517647058824, 24.8729411764706, &#xD;&#xA;    23.0117647058824, 23, 21.3094117647059, 19.4105882352941, 20.3470588235294, &#xD;&#xA;    19.4482352941176, 20.0670588235294, 21.6364705882353, 23.4211764705882, &#xD;&#xA;    23.16, 25.4788235294118, 26.4741176470588, 24.0482352941176, &#xD;&#xA;    21.4176470588235, 21.7164705882353, 19.0905882352941, 19.6752941176471, &#xD;&#xA;    18.1611764705882, 20.0482352941176, 23.4917647058824, 23.4894117647059, &#xD;&#xA;    22.5482352941176, 23.1376470588235, 24.9811764705882, 24.1552941176471, &#xD;&#xA;    22.8423529411765, 19.7435294117647, 16.4, 17.3105882352941, 20.5235294117647, &#xD;&#xA;    21.0494117647059, 23.1352941176471, 23.9435294117647, 23.9058823529412, &#xD;&#xA;    24.9835294117647, 24.6952941176471, 24.0047058823529, 23.3164705882353, &#xD;&#xA;    21.5823529411765, 18.3447058823529, 18.1964705882353, 20.0035294117647, &#xD;&#xA;    20.7152941176471, 22.5705882352941, 24.6541176470588, 23.2329411764706, &#xD;&#xA;    25.0517647058824, 24.3329411764706, 23.5811764705882, 22.9988235294118, &#xD;&#xA;    19.4976470588235, 17.3188235294118, 19.5635294117647, 19.0211764705882, &#xD;&#xA;    19.7223529411765, 22.6858823529412, 23.9423529411765, 23.6905882352941, &#xD;&#xA;    25.7129411764706, 23.9505882352941, 24.4376470588235, 22.6070588235294, &#xD;&#xA;    19.8882352941176, 17.2058823529412, 16.4211764705882, 20.02, &#xD;&#xA;    21.9458823529412, 21.9341176470588, 22.74, 23.8, 23.9611764705882, &#xD;&#xA;    24.4564705882353, 24, 23.2129411764706, 19.4729411764706, 17.7105882352941, &#xD;&#xA;    16.9682352941176, 19.0341176470588, 20.2917647058824, 20.7776470588235, &#xD;&#xA;    22.9364705882353, 22.7894117647059)), .Names = c(""""date"""", """"temp""""&#xD;&#xA;    ), row.names = c(NA, -360L), class = """"data.frame"""")"
"R","7469883360628321813",2,2,"47697498;47700304","47697498;47700304","8627559;8627559","2017-12-07 14:40:38;2017-12-07 17:12:09","2;1",25,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,"id     year    quarter   &#xD;&#xA;     1    2007          1     &#xD;&#xA;     1    2007          2     &#xD;&#xA;     1    2007          3     &#xD;&#xA;     1    2007          4     &#xD;&#xA;     1    2008          1     &#xD;&#xA;     1    2008          2     &#xD;&#xA;     1    2008          3     &#xD;&#xA;     1    2008          4     &#xD;&#xA;     1    2009          1     &#xD;&#xA;     1    2009          2     &#xD;&#xA;     1    2009          3     &#xD;&#xA;     1    2009          4     &#xD;&#xA;     2    2007          1     &#xD;&#xA;     2    2007          2     &#xD;&#xA;     2    2007          3     &#xD;&#xA;     2    2007          4     &#xD;&#xA;     2    2008          1     &#xD;&#xA;     2    2008          2     &#xD;&#xA;     2    2008          3     &#xD;&#xA;     2    2008          4     &#xD;&#xA;     3    2009          2     &#xD;&#xA;     3    2009          3     &#xD;&#xA;     3    2010          2     &#xD;&#xA;     3    2010          3"
"R","-8557050583224587006",2,2,"41557582;40986728","41557582;40986728","7254759;7254759","2017-01-09 21:50:39;2016-12-06 02:15:07","0;0",27,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,"        t1<- data.frame ( A1 = c(""""red"""", """"blue"""", """"green"""", """"yellow"""", """"brown""""),&#xD;&#xA;                         A2 = c(""""orange"""", """"purple"""", """"yellow"""", """"black"""", NA),&#xD;&#xA;                         A3 = c(1,2,4,5,7))&#xD;&#xA;        &#xD;&#xA;        t2<- data.frame(B2 = c(""""black"""", """"pink"""", """"lime"""", """"green"""", """"grey"""", """"mist"""", """"blond"""", """"grass"""", """"violet"""", """"red""""),&#xD;&#xA;                        B3 = c(""""a"""", """"b"""", """"a"""", """"c"""", """"d"""", """"d"""", """"a"""" , """"c"""", """"a"""", """"b""""))&#xD;&#xA;        &#xD;&#xA;        > t1&#xD;&#xA;              A1     A2 A3&#xD;&#xA;        1    red orange  1&#xD;&#xA;        2   blue purple  2&#xD;&#xA;        3  green yellow  4&#xD;&#xA;        4 yellow  black  5&#xD;&#xA;        5  brown   <NA>  7&#xD;&#xA;        > t2&#xD;&#xA;               B2 B3&#xD;&#xA;        1   black  a&#xD;&#xA;        2    pink  b&#xD;&#xA;        3    lime  a&#xD;&#xA;        4   green  c&#xD;&#xA;        5    grey  d&#xD;&#xA;        6    mist  d&#xD;&#xA;        7   blond  a&#xD;&#xA;        8   grass  c&#xD;&#xA;        9  violet  a&#xD;&#xA;        10    red  b&#xD;&#xA;    "
"R","-107166925907531909",2,2,"50533251;50296091","50533251;50296091","8495608;8495608","2018-05-25 16:15:36;2018-05-11 15:58:25","2;4",46,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,"    ## Creating the d tribble&#xD;&#xA;    library(tidyverse)&#xD;&#xA;    d <- tribble(&#xD;&#xA;      ~ category, ~defect,&#xD;&#xA;      """"price"""", 80,&#xD;&#xA;      """"schedule"""", 27,&#xD;&#xA;      """"supplier"""", 66,&#xD;&#xA;      """"contact"""", 94,&#xD;&#xA;      """"item"""", 33&#xD;&#xA;    )&#xD;&#xA;    &#xD;&#xA;    ## Creating new columns&#xD;&#xA;    d <- arrange(d, desc(defect)) %>%&#xD;&#xA;      mutate(&#xD;&#xA;        cumsum = cumsum(defect),&#xD;&#xA;        freq = round(defect / sum(defect), 3),&#xD;&#xA;        cum_freq = cumsum(freq)&#xD;&#xA;      )&#xD;&#xA;    &#xD;&#xA;    ## Saving Parameters &#xD;&#xA;    def_par <- par() &#xD;&#xA;    &#xD;&#xA;    ## New margins&#xD;&#xA;    par(mar=c(5,5,4,5)) &#xD;&#xA;    &#xD;&#xA;    ## bar plot, pc will hold x values for bars&#xD;&#xA;    pc = barplot(d$defect,  &#xD;&#xA;                 width = 1, space = 0.2, border = NA, axes = F,&#xD;&#xA;                 ylim = c(0, 1.05 * max(d$cumsum, na.rm = T)), &#xD;&#xA;                 ylab = """"Cummulative Counts"""" , cex.names = 0.7, &#xD;&#xA;                 names.arg = d$category,&#xD;&#xA;                 main = """"Pareto Chart (version 1)"""")&#xD;&#xA;    &#xD;&#xA;    ## Cumulative counts line &#xD;&#xA;    lines(pc, d$cumsum, type = """"b"""", cex = 0.7, pch = 19, col=""""cyan4"""")&#xD;&#xA;    &#xD;&#xA;    ## Framing plot&#xD;&#xA;    box(col = """"grey62"""")&#xD;&#xA;    &#xD;&#xA;    ## adding axes&#xD;&#xA;    axis(side = 2, at = c(0, d$cumsum), las = 1, col.axis = """"grey62"""", col = """"grey62"""", cex.axis = 0.8)&#xD;&#xA;    axis(side = 4, at = c(0, d$cumsum), labels = paste(c(0, round(d$cum_freq * 100)) ,""""%"""",sep=""""""""), &#xD;&#xA;         las = 1, col.axis = """"cyan4"""", col = """"cyan4"""", cex.axis = 0.8)&#xD;&#xA;    &#xD;&#xA;    ## restoring default paramenter&#xD;&#xA;    par(def_par) "
"R","-6737167263203597386",2,2,"51927392;51922818","51927392;51922818","4873194;4873194","2018-08-20 09:05:10;2018-08-20 00:18:21","0;0",27,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,"    +--------------+--------------+--------------+---------------------+&#xD;&#xA;    | EMP 1 Gender | EMP 2 Gender | Emp 3 Gender | Gender Combinations |&#xD;&#xA;    +--------------+--------------+--------------+---------------------+&#xD;&#xA;    | Male         |              |              | 1 Male              |&#xD;&#xA;    | Female       |              |              | 1 Female            |&#xD;&#xA;    |              | Male         |              | 1 Male              |&#xD;&#xA;    |              | Female       |              | 1 Female            |&#xD;&#xA;    |              |              | Male         | 1 Male              |&#xD;&#xA;    |              |              | Female       | 1 Female            |&#xD;&#xA;    | Male         | Female       |              | 1 Male, 1 Female    |&#xD;&#xA;    |              | Male         | Female       | 1 Male, 1 Female    |&#xD;&#xA;    | Male         |              | Female       | 1 Male, 1 Female    |&#xD;&#xA;    |              | Female       | Male         | 1 Male, 1 Female    |&#xD;&#xA;    | Female       |              | Male         | 1 Male, 1 Female    |&#xD;&#xA;    | Female       | Male         |              | 1 Male, 1 Female    |&#xD;&#xA;    |              | Female       | Male         | 1 Male, 1 Female    |&#xD;&#xA;    | Male         |              | Female       | 1 Male, 1 Female    |&#xD;&#xA;    |              | Male         | Female       | 1 Male, 1 Female    |&#xD;&#xA;    | Male         | Male         | Female       | 1 Male, 1 Female    |&#xD;&#xA;    | Male         | Female       | Male         | 2 Males, 1 Female   |&#xD;&#xA;    | Female       | Male         | Male         | 1 Female, 2 Males   |&#xD;&#xA;    | Female       | Female       | Male         | 2 Females, 1 Male   |&#xD;&#xA;    | Female       | Male         | Female       | 2 Females, 1 Male   |&#xD;&#xA;    | Male         | Female       | Female       | 2 Females, 1 Male   |&#xD;&#xA;    | Male         | Male         | Male         | 3 Males             |&#xD;&#xA;    | Female       | Female       | Female       | 3 Females           |&#xD;&#xA;    +--------------+--------------+--------------+---------------------+"
